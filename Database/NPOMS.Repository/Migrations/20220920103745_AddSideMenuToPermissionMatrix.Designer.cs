// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NPOMS.Repository;

#nullable disable

namespace NPOMS.Repository.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20220920103745_AddSideMenuToPermissionMatrix")]
    partial class AddSideMenuToPermissionMatrix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NPOMS.Domain.Budget.DepartmentBudget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("FinancialYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DepartmentBudgets", "budget");
                });

            modelBuilder.Entity("NPOMS.Domain.Budget.DirectorateBudget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentBudgetId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("DirectorateId")
                        .HasColumnType("int");

                    b.Property<int>("FinancialYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DirectorateBudgets", "budget");
                });

            modelBuilder.Entity("NPOMS.Domain.Budget.ProgrammeBudget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("DirectorateBudgetId")
                        .HasColumnType("int");

                    b.Property<int>("FinancialYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProgrammeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProgrammeBudgets", "budget");
                });

            modelBuilder.Entity("NPOMS.Domain.Core.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Departments", "core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "ALL",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = true,
                            Name = "All Departments"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "DEDAT",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Economic Development and Tourism"
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "DTPW",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Transport and Public Works"
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "WCED",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Education"
                        },
                        new
                        {
                            Id = 5,
                            Abbreviation = "DotP",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Premier"
                        },
                        new
                        {
                            Id = 6,
                            Abbreviation = "PT",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Provincial Treasury"
                        },
                        new
                        {
                            Id = 7,
                            Abbreviation = "DSD",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Social Development"
                        },
                        new
                        {
                            Id = 8,
                            Abbreviation = "DoA",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Agriculture"
                        },
                        new
                        {
                            Id = 9,
                            Abbreviation = "DCS",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Community Safety"
                        },
                        new
                        {
                            Id = 10,
                            Abbreviation = "DCAS",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Cultural Affairs and Sport"
                        },
                        new
                        {
                            Id = 11,
                            Abbreviation = "DoH",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = true,
                            Name = "Health"
                        },
                        new
                        {
                            Id = 12,
                            Abbreviation = "DHS",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Human Settlements"
                        },
                        new
                        {
                            Id = 13,
                            Abbreviation = "DLG",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Local Government"
                        },
                        new
                        {
                            Id = 14,
                            Abbreviation = "WCPP",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Provincial Parliament"
                        },
                        new
                        {
                            Id = 15,
                            Abbreviation = "DEA&DP",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Environmental Affairs and Development Planning"
                        },
                        new
                        {
                            Id = 16,
                            Abbreviation = "NONE",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = true,
                            Name = "None"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Core.DocumentStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Entity")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<int>("EntityTypeId")
                        .HasColumnType("int");

                    b.Property<string>("FileSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RefNo")
                        .IsRequired()
                        .HasColumnType("char(15)");

                    b.Property<string>("ResourceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocumentTypeId");

                    b.ToTable("DocumentStores", "core");
                });

            modelBuilder.Entity("NPOMS.Domain.Core.DocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsCompulsory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DocumentTypes", "core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            IsCompulsory = false,
                            Name = "SLA"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            IsCompulsory = false,
                            Name = "Signed SLA"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Core.EmailAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("EnableSSL")
                        .HasColumnType("bit");

                    b.Property<string>("FromDisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FromEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("EmailAccounts", "core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "default account",
                            EnableSSL = false,
                            FromDisplayName = "NPO Management System",
                            FromEmail = "no-reply@westerncape.gov.za",
                            Host = "https://wa-taps-smtp-nonprod-zan.azurewebsites.net/api/user/EmailSend",
                            Port = 25
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Core.EmailQueue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmailTemplateId")
                        .HasColumnType("int");

                    b.Property<string>("FromEmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FromEmailName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RecipientEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RecipientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("SentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EmailTemplateId");

                    b.ToTable("EmailQueues", "core");
                });

            modelBuilder.Entity("NPOMS.Domain.Core.EmailTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("EmailAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EmailAccountId");

                    b.ToTable("EmailTemplates", "core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "<p>Dear {ToUserFullName},</p><p>Access to <span style=\"font-weight: bold;\">{NpoName}</span> has been sent to be reviewed.</p><p>Please <a href=\"{url}\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "NewAccessRequest",
                            Subject = "Access Request Created"
                        },
                        new
                        {
                            Id = 2,
                            Body = "<p>Dear {ToUserFullName},</p><p>Please review access for <span style=\"font-weight: bold;\">{UserAccessFullName}</span> to the following Organisation: <span style=\"font-weight: bold;\">{NpoName}</span>.</p><p>Please <a href=\"{url}/#/access-review\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "AccessRequestPending",
                            Subject = "Access Request Submitted"
                        },
                        new
                        {
                            Id = 3,
                            Body = "<p>Dear {ToUserFullName},</p><p>Access to <span style=\"font-weight: bold;\">{NpoName}</span> has been approved.</p><p>Please <a href=\"{url}\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "AccessRequestApproved",
                            Subject = "Access Request Approved"
                        },
                        new
                        {
                            Id = 4,
                            Body = "<p>Dear {ToUserFullName},</p><p>Access to <span style=\"font-weight: bold;\">{NpoName}</span> has been rejected.</p><p>Please <a href=\"{url}\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "AccessRequestRejected",
                            Subject = "Access Request Rejected"
                        },
                        new
                        {
                            Id = 5,
                            Body = "<p>Dear {ToUserFullName},</p><p>The application for <span style=\"font-weight: bold;\">{NPO}</span> has been sent to be reviewed. The Reference Number is <span style=\"font-weight: bold;\">{ApplicationRefNo}</span>.</p><p>Please <a href=\"{url}/#/applications\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "NewApplication",
                            Subject = "Application Submitted - {NPO}"
                        },
                        new
                        {
                            Id = 6,
                            Body = "<p>Dear {ToUserFullName},</p><p>The application with Reference Number <span style=\"font-weight: bold;\">{ApplicationRefNo}</span> has been submitted for you to review.</p><p>Please <a href=\"{url}/#/applications\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "StatusChangedPendingReview",
                            Subject = "Application Pending Review - {NPO}"
                        },
                        new
                        {
                            Id = 7,
                            Body = "<p>Dear {ToUserFullName},</p><p>There are changes required to the application with Reference Number <span style=\"font-weight: bold;\">{ApplicationRefNo}</span>.</p><p>Please <a href=\"{url}/#/applications\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "StatusChangedAmendmentsRequired",
                            Subject = "Amendments Required - {NPO}"
                        },
                        new
                        {
                            Id = 8,
                            Body = "<p>Dear {ToUserFullName},</p><p>The application with Reference Number <span style=\"font-weight: bold;\">{ApplicationRefNo}</span> has been sent for you to approve.</p><p>Please <a href=\"{url}/#/applications\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "StatusChangedPendingApproval",
                            Subject = "Application Pending Approval - {NPO}"
                        },
                        new
                        {
                            Id = 9,
                            Body = "<p>Dear {ToUserFullName},</p><p>The application with Reference Number <span style=\"font-weight: bold;\">{ApplicationRefNo}</span> has been rejected.</p><p>Please <a href=\"{url}/#/applications\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "StatusChangedRejected",
                            Subject = "Application Rejected - {NPO}"
                        },
                        new
                        {
                            Id = 10,
                            Body = "<p>Dear {ToUserFullName},</p><p>The application with Reference Number <span style=\"font-weight: bold;\">{ApplicationRefNo}</span> has been approved.</p><p>Please upload the SLA document.</p><p>Please <a href=\"{url}/#/applications\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "StatusChangedPendingSLA",
                            Subject = "Application Pending SLA - {NPO}"
                        },
                        new
                        {
                            Id = 11,
                            Body = "<p>Dear {ToUserFullName},</p><p>The application with Reference Number <span style=\"font-weight: bold;\">{ApplicationRefNo}</span> has been approved.</p><p>Please download the SLA document that requires your signature and upload the signed SLA document.</p><p>Please <a href=\"{url}/#/applications\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "StatusChangedPendingSignedSLA",
                            Subject = "Application Pending Signed SLA - {NPO}"
                        },
                        new
                        {
                            Id = 12,
                            Body = "<p>Dear {ToUserFullName},</p><p>The signed SLA document has been uploaded for application with Reference Number <span style=\"font-weight: bold;\">{ApplicationRefNo}</span>.</p><p>Please <a href=\"{url}/#/applications\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "StatusChangedAcceptedSLA",
                            Subject = "Application Accepted SLA - {NPO}"
                        },
                        new
                        {
                            Id = 13,
                            Body = "<p>Dear {ToUserFullName},</p><p>Please review the comments regarding the SLA document for application with Reference Number <span style=\"font-weight: bold;\">{ApplicationRefNo}</span>.</p><p>Please <a href=\"{url}/#/applications\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "StatusChangedDeptComments",
                            Subject = "Review SLA Comments by Department - {NPO}"
                        },
                        new
                        {
                            Id = 14,
                            Body = "<p>Dear {ToUserFullName},</p><p>Please review the comments regarding the SLA document for application with Reference Number <span style=\"font-weight: bold;\">{ApplicationRefNo}</span>.</p><p>Please <a href=\"{url}/#/applications\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "StatusChangedOrgComments",
                            Subject = "Review SLA Comments by Organisation - {NPO}"
                        },
                        new
                        {
                            Id = 15,
                            Body = "<p>Dear {ToUserFullName},</p><p>Organisation Profile for <span style=\"font-weight: bold;\">{NpoName}</span> has been updated and sent to be reviewed.</p><p>Please <a href=\"{url}\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "NewOrganisationApproval",
                            Subject = "Organisation Profile Updated - {NpoName}"
                        },
                        new
                        {
                            Id = 16,
                            Body = "<p>Dear {ToUserFullName},</p><p>Please review the following Organisation: <span style=\"font-weight: bold;\">{NpoName}</span>.</p><p>Please <a href=\"{url}/#/npo-approval\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "PendingOrganisationApproval",
                            Subject = "Pending Organisation Approval - {NpoName}"
                        },
                        new
                        {
                            Id = 17,
                            Body = "<p>Dear {ToUserFullName},</p><p>The following Organisation: <span style=\"font-weight: bold;\">{NpoName}</span> has been approved.</p><p>Please <a href=\"{url}\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "ApprovedOrganisationApproval",
                            Subject = "Organisation Approved - {NpoName}"
                        },
                        new
                        {
                            Id = 18,
                            Body = "<p>Dear {ToUserFullName},</p><p>The following Organisation: <span style=\"font-weight: bold;\">{NpoName}</span> has been rejected.</p><p>Please <a href=\"{url}\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "RejectedOrganisationApproval",
                            Subject = "Organisation Rejected - {NpoName}"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Core.EmbeddedReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(2000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ReportId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("WorkspaceId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmbeddedReports", "core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Dashboard",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Dashboard view everything on the system",
                            IsActive = false,
                            Name = "Dashboard",
                            ReportId = "270ec198-88c7-4e9b-b429-b6b99ace164f",
                            WorkspaceId = "38cbb1ed-23d8-4c7d-830a-4f7a39086eca"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Core.EntityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EntityTypes", "core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Name = "Supporting Documents",
                            SystemName = "SupportingDocuments"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Name = "SLA",
                            SystemName = "SLA"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Name = "Workplan Actuals",
                            SystemName = "WorkplanActuals"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Core.FinancialYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FinancialYears", "core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            EndDate = new DateTime(2022, 3, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsActive = false,
                            Name = "2021/22",
                            StartDate = new DateTime(2021, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2021
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            EndDate = new DateTime(2023, 3, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsActive = false,
                            Name = "2022/23",
                            StartDate = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2022
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            EndDate = new DateTime(2024, 3, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsActive = false,
                            Name = "2023/24",
                            StartDate = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2023
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            EndDate = new DateTime(2025, 3, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsActive = false,
                            Name = "2024/25",
                            StartDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2024
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            EndDate = new DateTime(2026, 3, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsActive = false,
                            Name = "2025/26",
                            StartDate = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2025
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            EndDate = new DateTime(2027, 3, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsActive = false,
                            Name = "2026/27",
                            StartDate = new DateTime(2026, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2026
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            EndDate = new DateTime(2028, 3, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsActive = false,
                            Name = "2027/28",
                            StartDate = new DateTime(2027, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2027
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            EndDate = new DateTime(2029, 3, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsActive = false,
                            Name = "2028/29",
                            StartDate = new DateTime(2028, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2028
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Core.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Permissions", "core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "User Administration",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Add Users",
                            SystemName = "UA.AU"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "User Administration",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of Users",
                            SystemName = "UA.VU"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "User Administration",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Users",
                            SystemName = "UA.EU"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Utilities Management",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Add Utilities",
                            SystemName = "UM.AU"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Utilities Management",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of Utilities",
                            SystemName = "UM.VU"
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "Utilities Management",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Utilities",
                            SystemName = "UM.EU"
                        },
                        new
                        {
                            Id = 7,
                            CategoryName = "Permission Management",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of Permissions",
                            SystemName = "PM.VP"
                        },
                        new
                        {
                            Id = 8,
                            CategoryName = "Permission Management",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Permissions",
                            SystemName = "PM.EP"
                        },
                        new
                        {
                            Id = 9,
                            CategoryName = "Top Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Admin Menu",
                            SystemName = "TN.VAM"
                        },
                        new
                        {
                            Id = 10,
                            CategoryName = "Top Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Organisation Profile Menu",
                            SystemName = "TN.VPM"
                        },
                        new
                        {
                            Id = 11,
                            CategoryName = "Organisation Profile",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Add Organisation Profile",
                            SystemName = "NP.ANP"
                        },
                        new
                        {
                            Id = 12,
                            CategoryName = "Organisation Profile",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Organisation Profile",
                            SystemName = "NP.ENP"
                        },
                        new
                        {
                            Id = 13,
                            CategoryName = "Organisation Profile",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of Organisation Profiles",
                            SystemName = "NP.VNP"
                        },
                        new
                        {
                            Id = 14,
                            CategoryName = "Organisation Profile",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Show Organisation Profile Action Buttons",
                            SystemName = "NP.SPA"
                        },
                        new
                        {
                            Id = 15,
                            CategoryName = "User Administration",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Show User Administration Action Buttons",
                            SystemName = "UA.SUA"
                        },
                        new
                        {
                            Id = 16,
                            CategoryName = "Top Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Apply For Access Menu",
                            SystemName = "TN.VAAM"
                        },
                        new
                        {
                            Id = 17,
                            CategoryName = "Top Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Access Review Menu",
                            SystemName = "TN.VARM"
                        },
                        new
                        {
                            Id = 18,
                            CategoryName = "User Access Management",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Add User Requests - Apply for access",
                            SystemName = "UAM.AUR"
                        },
                        new
                        {
                            Id = 19,
                            CategoryName = "User Access Management",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit User Requests - Review access requests",
                            SystemName = "UAM.EUR"
                        },
                        new
                        {
                            Id = 20,
                            CategoryName = "User Access Management",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of User Requests",
                            SystemName = "UAM.VUR"
                        },
                        new
                        {
                            Id = 21,
                            CategoryName = "Top Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Organisations Menu",
                            SystemName = "TN.VNM"
                        },
                        new
                        {
                            Id = 22,
                            CategoryName = "Organisation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Add Organisation",
                            SystemName = "NPO.Add"
                        },
                        new
                        {
                            Id = 23,
                            CategoryName = "Organisation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Organisation",
                            SystemName = "NPO.Edit"
                        },
                        new
                        {
                            Id = 24,
                            CategoryName = "Organisation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of Organisations",
                            SystemName = "NPO.View"
                        },
                        new
                        {
                            Id = 25,
                            CategoryName = "Organisation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Show Organisation Action Buttons",
                            SystemName = "NPO.SNA"
                        },
                        new
                        {
                            Id = 26,
                            CategoryName = "Top Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Application Period (Programme Selection) Menu",
                            SystemName = "TN.VAPM"
                        },
                        new
                        {
                            Id = 27,
                            CategoryName = "Application Period (Programme Selection)",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Add Application Period (Programme Selection)",
                            SystemName = "AP.Add"
                        },
                        new
                        {
                            Id = 28,
                            CategoryName = "Application Period (Programme Selection)",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Application Period (Programme Selection)",
                            SystemName = "AP.Edit"
                        },
                        new
                        {
                            Id = 29,
                            CategoryName = "Application Period (Programme Selection)",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of Application Periods (Programme Selection)",
                            SystemName = "AP.View"
                        },
                        new
                        {
                            Id = 30,
                            CategoryName = "Application Period (Programme Selection)",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Show Application Period (Programme Selection) Action Buttons",
                            SystemName = "AP.SAPA"
                        },
                        new
                        {
                            Id = 31,
                            CategoryName = "Top Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Captured Applications Menu",
                            SystemName = "TN.VAppM"
                        },
                        new
                        {
                            Id = 32,
                            CategoryName = "Application",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Add Application",
                            SystemName = "App.Add"
                        },
                        new
                        {
                            Id = 33,
                            CategoryName = "Application",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Application",
                            SystemName = "App.Edit"
                        },
                        new
                        {
                            Id = 34,
                            CategoryName = "Application",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of Applications",
                            SystemName = "App.View"
                        },
                        new
                        {
                            Id = 35,
                            CategoryName = "Application",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Show Application Action Buttons",
                            SystemName = "App.SAA"
                        },
                        new
                        {
                            Id = 36,
                            CategoryName = "Top Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Organisation Approval Menu",
                            SystemName = "TN.VNA"
                        },
                        new
                        {
                            Id = 37,
                            CategoryName = "Organisation Approval Management",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Organisation Approval",
                            SystemName = "NAM.ENR"
                        },
                        new
                        {
                            Id = 38,
                            CategoryName = "Organisation Approval Management",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of Organisations for approval requests",
                            SystemName = "NAM.VNR"
                        },
                        new
                        {
                            Id = 39,
                            CategoryName = "Application",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Review Application",
                            SystemName = "App.Review"
                        },
                        new
                        {
                            Id = 40,
                            CategoryName = "Application",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Approve Application",
                            SystemName = "App.Approve"
                        },
                        new
                        {
                            Id = 41,
                            CategoryName = "Application",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Upload SLA Document",
                            SystemName = "App.Upload"
                        },
                        new
                        {
                            Id = 42,
                            CategoryName = "Application",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Accepted SLA Application",
                            SystemName = "App.VAA"
                        },
                        new
                        {
                            Id = 43,
                            CategoryName = "Utilities Management",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Show Utilities Action Buttons",
                            SystemName = "UM.SUA"
                        },
                        new
                        {
                            Id = 44,
                            CategoryName = "Top Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Dashboard Menu",
                            SystemName = "TN.VDM"
                        },
                        new
                        {
                            Id = 45,
                            CategoryName = "PowerBI Dashboard",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View PowerBI Dashboard",
                            SystemName = "PBI.VD"
                        },
                        new
                        {
                            Id = 46,
                            CategoryName = "Top Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Training Menu",
                            SystemName = "TN.VTM"
                        },
                        new
                        {
                            Id = 47,
                            CategoryName = "Training Material",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of Training Materials",
                            SystemName = "TM.VTM"
                        },
                        new
                        {
                            Id = 48,
                            CategoryName = "Budgets",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Add Department Budget",
                            SystemName = "Bud.Add"
                        },
                        new
                        {
                            Id = 49,
                            CategoryName = "Budgets",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Department Budget",
                            SystemName = "Bud.Edit"
                        },
                        new
                        {
                            Id = 50,
                            CategoryName = "Budgets",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of Department Budgets",
                            SystemName = "Bud.View"
                        },
                        new
                        {
                            Id = 51,
                            CategoryName = "Budgets",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Add Directorate Budget",
                            SystemName = "Bud.ADB"
                        },
                        new
                        {
                            Id = 52,
                            CategoryName = "Budgets",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Directorate Budget",
                            SystemName = "Bud.EDB"
                        },
                        new
                        {
                            Id = 53,
                            CategoryName = "Budgets",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of Directorate Budgets",
                            SystemName = "Bud.VDB"
                        },
                        new
                        {
                            Id = 54,
                            CategoryName = "Budgets",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Add Programme Budget",
                            SystemName = "Bud.APB"
                        },
                        new
                        {
                            Id = 55,
                            CategoryName = "Budgets",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Programme Budget",
                            SystemName = "Bud.EPB"
                        },
                        new
                        {
                            Id = 56,
                            CategoryName = "Budgets",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of Programme Budgets",
                            SystemName = "Bud.VPB"
                        },
                        new
                        {
                            Id = 57,
                            CategoryName = "Administration - Side Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Settings Side Menu",
                            SystemName = "SN.Security"
                        },
                        new
                        {
                            Id = 58,
                            CategoryName = "Administration - Side Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Users Side Menu",
                            SystemName = "SN.Users"
                        },
                        new
                        {
                            Id = 59,
                            CategoryName = "Administration - Side Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Permissions Side Menu",
                            SystemName = "SN.Permissions"
                        },
                        new
                        {
                            Id = 60,
                            CategoryName = "Administration - Side Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Settings Side Menu",
                            SystemName = "SN.Settings"
                        },
                        new
                        {
                            Id = 61,
                            CategoryName = "Administration - Side Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Utilities Sub Menu",
                            SystemName = "SN.Utilities"
                        },
                        new
                        {
                            Id = 62,
                            CategoryName = "Administration - Side Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Budgets Sub Menu",
                            SystemName = "SN.Budgets"
                        },
                        new
                        {
                            Id = 63,
                            CategoryName = "Administration - Side Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Department Budget Sub Menu",
                            SystemName = "SN.DeptBudget"
                        },
                        new
                        {
                            Id = 64,
                            CategoryName = "Administration - Side Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Directorate Budget Sub Menu",
                            SystemName = "SN.DirectorateBudget"
                        },
                        new
                        {
                            Id = 65,
                            CategoryName = "Administration - Side Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Programme Budget Sub Menu",
                            SystemName = "SN.ProgBudget"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Core.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Roles", "core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "System Administrator",
                            SystemName = "SystemAdmin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Administrator",
                            SystemName = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Applicant",
                            SystemName = "Applicant"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Reviewer",
                            SystemName = "Reviewer"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Main Reviewer",
                            SystemName = "MainReviewer"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Approver",
                            SystemName = "Approver"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Core.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsB2C")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Users", "core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Email = "npoms.admin@westerncape.gov.za",
                            FirstName = "System",
                            IsActive = false,
                            IsB2C = false,
                            LastName = "User",
                            UserName = "npoms.admin@westerncape.gov.za"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Email = "Taariq.Kamaar@westerncape.gov.za",
                            FirstName = "Taariq",
                            IsActive = false,
                            IsB2C = false,
                            LastName = "Kamaar",
                            UserName = "Taariq.Kamaar@westerncape.gov.za"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Core.Utility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AngularRedirectUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("SystemAdminUtility")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Utilities", "core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AngularRedirectUrl = "utilities/department",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update departments",
                            IsActive = false,
                            Name = "Department",
                            SystemAdminUtility = true
                        },
                        new
                        {
                            Id = 2,
                            AngularRedirectUrl = "utilities/document-type",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update document types",
                            IsActive = false,
                            Name = "Document Type",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 3,
                            AngularRedirectUrl = "utilities/email-account",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update email accounts",
                            IsActive = false,
                            Name = "Email Account",
                            SystemAdminUtility = true
                        },
                        new
                        {
                            Id = 4,
                            AngularRedirectUrl = "utilities/financial-year",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update financial years",
                            IsActive = false,
                            Name = "Financial Year",
                            SystemAdminUtility = true
                        },
                        new
                        {
                            Id = 5,
                            AngularRedirectUrl = "utilities/role",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update roles",
                            IsActive = false,
                            Name = "Role",
                            SystemAdminUtility = true
                        },
                        new
                        {
                            Id = 6,
                            AngularRedirectUrl = "utilities/access-status",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update access statuses",
                            IsActive = false,
                            Name = "Access Status",
                            SystemAdminUtility = true
                        },
                        new
                        {
                            Id = 7,
                            AngularRedirectUrl = "utilities/status",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update statuses",
                            IsActive = false,
                            Name = "Status",
                            SystemAdminUtility = true
                        },
                        new
                        {
                            Id = 8,
                            AngularRedirectUrl = "utilities/activity-type",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update activity types",
                            IsActive = false,
                            Name = "Activity Type",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 9,
                            AngularRedirectUrl = "utilities/allocation-type",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update allocation types",
                            IsActive = false,
                            Name = "Allocation Type",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 10,
                            AngularRedirectUrl = "utilities/application-type",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update application types",
                            IsActive = false,
                            Name = "Application Type",
                            SystemAdminUtility = true
                        },
                        new
                        {
                            Id = 11,
                            AngularRedirectUrl = "utilities/facility-class",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update facility classes",
                            IsActive = false,
                            Name = "Facility Class",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 12,
                            AngularRedirectUrl = "utilities/facility-district",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update facility districts",
                            IsActive = false,
                            Name = "Facility District",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 13,
                            AngularRedirectUrl = "utilities/facility-sub-district",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update facility sub-districts",
                            IsActive = false,
                            Name = "Facility Sub-District",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 14,
                            AngularRedirectUrl = "utilities/facility-type",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update facility types",
                            IsActive = false,
                            Name = "Facility Type",
                            SystemAdminUtility = true
                        },
                        new
                        {
                            Id = 15,
                            AngularRedirectUrl = "utilities/organisation-type",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update organisation types",
                            IsActive = false,
                            Name = "Organisation Type",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 16,
                            AngularRedirectUrl = "utilities/position",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update positions",
                            IsActive = false,
                            Name = "Position",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 17,
                            AngularRedirectUrl = "utilities/programme",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update programmes",
                            IsActive = false,
                            Name = "Programme",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 18,
                            AngularRedirectUrl = "utilities/provision-type",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update provision types",
                            IsActive = false,
                            Name = "Provision Type",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 19,
                            AngularRedirectUrl = "utilities/recipient-type",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update recipient types",
                            IsActive = false,
                            Name = "Recipient Type",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 20,
                            AngularRedirectUrl = "utilities/resource-type",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update resource types",
                            IsActive = false,
                            Name = "Resource Type",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 21,
                            AngularRedirectUrl = "utilities/service-type",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update service types",
                            IsActive = false,
                            Name = "Service Type",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 22,
                            AngularRedirectUrl = "utilities/sub-programme",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update sub-programmes",
                            IsActive = false,
                            Name = "Sub-Programme",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 23,
                            AngularRedirectUrl = "utilities/title",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update titles",
                            IsActive = false,
                            Name = "Title",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 24,
                            AngularRedirectUrl = "utilities/management",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update utility management",
                            IsActive = false,
                            Name = "Utility Management",
                            SystemAdminUtility = true
                        },
                        new
                        {
                            Id = 25,
                            AngularRedirectUrl = "utilities/sub-programme-type",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update sub-programme types",
                            IsActive = false,
                            Name = "Sub-Programme Type",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 65,
                            AngularRedirectUrl = "utilities/directorate",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update directorates",
                            IsActive = false,
                            Name = "Directorate",
                            SystemAdminUtility = false
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.ActivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ActivityTypes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "New",
                            SystemName = "New"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Ongoing",
                            SystemName = "Ongoing"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.AllocationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AllocationTypes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Province",
                            SystemName = "Province"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "City of Cape Town",
                            SystemName = "CoCT"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.ApplicationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ApplicationTypes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Funding Application",
                            SystemName = "FA"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Service Provision",
                            SystemName = "SP"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.Directorate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Directorates", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "",
                            IsActive = false,
                            Name = "Children and Families"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "",
                            IsActive = false,
                            Name = "Community Development"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "",
                            IsActive = false,
                            Name = "ECD & Partial Care"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "",
                            IsActive = false,
                            Name = "Facility Management"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "",
                            IsActive = false,
                            Name = "Partnership Development"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Restorative Services new 2021 VEP, CP, SA",
                            IsActive = false,
                            Name = "Restorative Services"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "",
                            IsActive = false,
                            Name = "Social Crime Prevention"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "",
                            IsActive = false,
                            Name = "Special Programmes"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.FacilityClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FacilityClasses", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mobile Service"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Health Post"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Special School"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Non-medical Site"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Reproductive Health Centre"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Primary School"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Community Day Centre"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Intermediate Care"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Private Pharmacy"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Occupational Health Centre"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Clinic"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Independent Cons Rooms - General Practitioner"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Private Hospital"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Independent Cons Rooms - Registered Practitioner"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Community Health Centre"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Private Clinic"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Community Health Centre (After hours)"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Dental Clinic"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Day Care Centre"
                        },
                        new
                        {
                            Id = 20,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Home Based Care"
                        },
                        new
                        {
                            Id = 21,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Correctional Centre"
                        },
                        new
                        {
                            Id = 22,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Hospice unit"
                        },
                        new
                        {
                            Id = 23,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Satellite Clinic"
                        },
                        new
                        {
                            Id = 24,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Specialised Rehabilitation Unit"
                        },
                        new
                        {
                            Id = 25,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Specialised TB Hospital"
                        },
                        new
                        {
                            Id = 26,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Community Health Centre / Clinic"
                        },
                        new
                        {
                            Id = 27,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "District Hospital"
                        },
                        new
                        {
                            Id = 28,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Sickbay"
                        },
                        new
                        {
                            Id = 29,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pharmacy Depot"
                        },
                        new
                        {
                            Id = 30,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Step Down Facility"
                        },
                        new
                        {
                            Id = 31,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Environmental Health Office"
                        },
                        new
                        {
                            Id = 32,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Health Promotion Service"
                        },
                        new
                        {
                            Id = 33,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Special Clinic"
                        },
                        new
                        {
                            Id = 34,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "EMS Station"
                        },
                        new
                        {
                            Id = 35,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Frail Care Centre"
                        },
                        new
                        {
                            Id = 36,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Specialised Oral Health Centre"
                        },
                        new
                        {
                            Id = 37,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Regional Hospital"
                        },
                        new
                        {
                            Id = 38,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Medical Centre"
                        },
                        new
                        {
                            Id = 39,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Forensic Pathology Service"
                        },
                        new
                        {
                            Id = 40,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Specialised Hospital"
                        },
                        new
                        {
                            Id = 41,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Midwife Obstetrics Unit"
                        },
                        new
                        {
                            Id = 42,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Independent Cons Rooms - Specialist"
                        },
                        new
                        {
                            Id = 43,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "National Central Hospital"
                        },
                        new
                        {
                            Id = 44,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Engineering services"
                        },
                        new
                        {
                            Id = 45,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "School Health Services Unit"
                        },
                        new
                        {
                            Id = 46,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Early Childhood Development Centre"
                        },
                        new
                        {
                            Id = 47,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Educare Centre"
                        },
                        new
                        {
                            Id = 48,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pre-primary School"
                        },
                        new
                        {
                            Id = 49,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Creche"
                        },
                        new
                        {
                            Id = 50,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Secondary School"
                        },
                        new
                        {
                            Id = 51,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Combined School"
                        },
                        new
                        {
                            Id = 52,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Intermediate School"
                        },
                        new
                        {
                            Id = 53,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Preparatory School"
                        },
                        new
                        {
                            Id = 54,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Military Hospital"
                        },
                        new
                        {
                            Id = 55,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Specialised Psychiatric Hospital"
                        },
                        new
                        {
                            Id = 56,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Tertiary Hospital"
                        },
                        new
                        {
                            Id = 57,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Laundry Service"
                        },
                        new
                        {
                            Id = 58,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Organisational unit"
                        },
                        new
                        {
                            Id = 59,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Primary Distribution Site"
                        },
                        new
                        {
                            Id = 60,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Records Repository"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.FacilityDistrict", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FacilityDistricts", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Cape Winelands District Municipality"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "City of Cape Town Metropolitan Municipality"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "West Coast District Municipality"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Overberg District Municipality"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Garden Route District Municipality"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Central Karoo District Municipality"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.FacilitySubDistrict", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<int>("FacilityDistrictId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilityDistrictId");

                    b.ToTable("FacilitySubDistricts", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 1,
                            IsActive = false,
                            Name = "Breede Valley Local Municipality"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 1,
                            IsActive = false,
                            Name = "Stellenbosch Local Municipality"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 1,
                            IsActive = false,
                            Name = "Drakenstein Local Municipality"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 1,
                            IsActive = false,
                            Name = "Witzenberg Local Municipality"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 1,
                            IsActive = false,
                            Name = "Langeberg Local Municipality"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 2,
                            IsActive = false,
                            Name = "Khayelitsha Health sub-District"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 2,
                            IsActive = false,
                            Name = "Cape Town Eastern Health sub-District"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 2,
                            IsActive = false,
                            Name = "Cape Town Southern Health sub-District"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 2,
                            IsActive = false,
                            Name = "Cape Town Northern Health sub-District"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 2,
                            IsActive = false,
                            Name = "Klipfontein Health sub-District"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 2,
                            IsActive = false,
                            Name = "Cape Town Western Health sub-District"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 2,
                            IsActive = false,
                            Name = "Tygerberg Health sub-District"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 2,
                            IsActive = false,
                            Name = "Mitchells Plain Health sub-District"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 3,
                            IsActive = false,
                            Name = "Matzikama Local Municipality"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 3,
                            IsActive = false,
                            Name = "Saldanha Bay Local Municipality"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 3,
                            IsActive = false,
                            Name = "Cederberg Local Municipality"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 3,
                            IsActive = false,
                            Name = "Bergrivier Local Municipality"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 3,
                            IsActive = false,
                            Name = "Swartland Local Municipality"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 4,
                            IsActive = false,
                            Name = "Overstrand Local Municipality"
                        },
                        new
                        {
                            Id = 20,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 4,
                            IsActive = false,
                            Name = "Theewaterskloof Local Municipality"
                        },
                        new
                        {
                            Id = 21,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 4,
                            IsActive = false,
                            Name = "Cape Agulhas Local Municipality"
                        },
                        new
                        {
                            Id = 22,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 4,
                            IsActive = false,
                            Name = "Swellendam Local Municipality"
                        },
                        new
                        {
                            Id = 23,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 5,
                            IsActive = false,
                            Name = "Bitou Local Municipality"
                        },
                        new
                        {
                            Id = 24,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 5,
                            IsActive = false,
                            Name = "Mossel Bay Local Municipality"
                        },
                        new
                        {
                            Id = 25,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 5,
                            IsActive = false,
                            Name = "Knysna Local Municipality"
                        },
                        new
                        {
                            Id = 26,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 5,
                            IsActive = false,
                            Name = "George Local Municipality"
                        },
                        new
                        {
                            Id = 27,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 5,
                            IsActive = false,
                            Name = "Hessequa Local Municipality"
                        },
                        new
                        {
                            Id = 28,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 5,
                            IsActive = false,
                            Name = "Kannaland Local Municipality"
                        },
                        new
                        {
                            Id = 29,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 5,
                            IsActive = false,
                            Name = "Oudtshoorn Local Municipality"
                        },
                        new
                        {
                            Id = 30,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 6,
                            IsActive = false,
                            Name = "Beaufort West Local Municipality"
                        },
                        new
                        {
                            Id = 31,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 6,
                            IsActive = false,
                            Name = "Laingsburg Local Municipality"
                        },
                        new
                        {
                            Id = 32,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 6,
                            IsActive = false,
                            Name = "Prince Albert Local Municipality"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.FacilityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FacilityTypes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Facility"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Community Place"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.Frequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Frequencies", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Annually",
                            SystemName = "Annually"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Monthly",
                            SystemName = "Monthly"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Quarterly",
                            SystemName = "Quarterly"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.FrequencyPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<int>("FrequencyId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FrequencyPeriods", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 1,
                            IsActive = false,
                            Name = "Annual",
                            SystemName = "Annual"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 2,
                            IsActive = false,
                            Name = "April",
                            SystemName = "Apr"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 2,
                            IsActive = false,
                            Name = "May",
                            SystemName = "May"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 2,
                            IsActive = false,
                            Name = "June",
                            SystemName = "Jun"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 2,
                            IsActive = false,
                            Name = "July",
                            SystemName = "Jul"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 2,
                            IsActive = false,
                            Name = "August",
                            SystemName = "Aug"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 2,
                            IsActive = false,
                            Name = "September",
                            SystemName = "Sep"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 2,
                            IsActive = false,
                            Name = "October",
                            SystemName = "Oct"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 2,
                            IsActive = false,
                            Name = "November",
                            SystemName = "Nov"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 2,
                            IsActive = false,
                            Name = "December",
                            SystemName = "Dec"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 2,
                            IsActive = false,
                            Name = "January",
                            SystemName = "Jan"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 2,
                            IsActive = false,
                            Name = "February",
                            SystemName = "Feb"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 2,
                            IsActive = false,
                            Name = "March",
                            SystemName = "Mar"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 3,
                            IsActive = false,
                            Name = "Quarter1",
                            SystemName = "Q1"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 3,
                            IsActive = false,
                            Name = "Quarter2",
                            SystemName = "Q2"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 3,
                            IsActive = false,
                            Name = "Quarter3",
                            SystemName = "Q3"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 3,
                            IsActive = false,
                            Name = "Quarter4",
                            SystemName = "Q4"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.OrganisationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OrganisationTypes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Non Profit Organisation",
                            IsActive = false,
                            Name = "NPO"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Non Profit Company registered as NPO",
                            IsActive = false,
                            Name = "NPO/NPC"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Trust registered as NPO",
                            IsActive = false,
                            Name = "NPO/Trust"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Voluntary organization registered as NPO",
                            IsActive = false,
                            Name = "NPO/VA"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Other Description",
                            IsActive = false,
                            Name = "Others"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Section 21 Company",
                            IsActive = false,
                            Name = "Section 21 Company"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Sport Description",
                            IsActive = false,
                            Name = "Sport"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Trust Description",
                            IsActive = false,
                            Name = "Trust"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Pty Ltd",
                            IsActive = false,
                            Name = "Pty Ltd"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Close Corporation",
                            IsActive = false,
                            Name = "CC"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "In Process of ECD Registration",
                            IsActive = false,
                            Name = "Reg-ECD"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "In Progress of Older Person Registration",
                            IsActive = false,
                            Name = "Reg-Old Person"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Non Governmental Organisation",
                            IsActive = false,
                            Name = "NGO"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Positions", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Admin Assistant"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Administrative Manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Board Member"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "CEO"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "COO"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Director"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Finance Officer"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Fundraising Officer"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Grants Manager"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Operations Director"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Supervisor"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Other"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Principal"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "ECD Learner"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Chairperson"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Deputy Chairperson"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Secretary"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Treasurer"
                        },
                        new
                        {
                            Id = 20,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Additional Member"
                        },
                        new
                        {
                            Id = 21,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Social Service Clerk"
                        },
                        new
                        {
                            Id = 22,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Project Manager"
                        },
                        new
                        {
                            Id = 23,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Programme Manager"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.Programme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("DirectorateId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Programmes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 1,
                            Description = "All Programmes",
                            IsActive = false,
                            Name = "All Programmes"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 11,
                            Description = "Chronic Diseases and Non-Communicable Diseases",
                            IsActive = false,
                            Name = "Chronic Diseases and Non-Communicable Diseases"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 11,
                            Description = "HIV/AIDS, TB, STI",
                            IsActive = false,
                            Name = "HIV/AIDS, TB, STI"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 11,
                            Description = "Maternal, Women and Child Health",
                            IsActive = false,
                            Name = "Maternal, Women and Child Health"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 11,
                            Description = "Theatre, Surgery and Aneasthetics",
                            IsActive = false,
                            Name = "Theatre, Surgery and Aneasthetics"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 11,
                            Description = "Mental Health",
                            IsActive = false,
                            Name = "Mental Health"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 11,
                            Description = "Emergency Centre Presures",
                            IsActive = false,
                            Name = "Emergency Centre Presures"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "Care and Support to Families",
                            DirectorateId = 1,
                            IsActive = false,
                            Name = "Care and Support to Families"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "Child Care and Protection Services",
                            DirectorateId = 1,
                            IsActive = false,
                            Name = "Child Care and Protection Services"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "Crime Prevention",
                            DirectorateId = 7,
                            IsActive = false,
                            Name = "Crime Prevention"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "ECD & Partial Care",
                            DirectorateId = 3,
                            IsActive = false,
                            Name = "ECD & Partial Care"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "EPWP",
                            DirectorateId = 2,
                            IsActive = false,
                            Name = "EPWP"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "Facility Managment",
                            DirectorateId = 4,
                            IsActive = false,
                            Name = "Facility Managment"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "Institutional Capacity Building",
                            DirectorateId = 5,
                            IsActive = false,
                            Name = "Institutional Capacity Building"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "Care and Services to Older Persons",
                            DirectorateId = 8,
                            IsActive = false,
                            Name = "Care and Services to Older Persons"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "Services to persons with Disabilities",
                            DirectorateId = 8,
                            IsActive = false,
                            Name = "Services to persons with Disabilities"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "Substance Abuse",
                            DirectorateId = 8,
                            IsActive = false,
                            Name = "Substance Abuse"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "Sustainable Livelihood",
                            DirectorateId = 2,
                            IsActive = false,
                            Name = "Sustainable Livelihood"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "Victim Empowerment",
                            DirectorateId = 7,
                            IsActive = false,
                            Name = "Victim Empowerment"
                        },
                        new
                        {
                            Id = 20,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "Youth Development",
                            DirectorateId = 2,
                            IsActive = false,
                            Name = "Youth Development"
                        },
                        new
                        {
                            Id = 21,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "Child and Youth Care Centres",
                            DirectorateId = 4,
                            IsActive = false,
                            Name = "Child and Youth Care Centres"
                        },
                        new
                        {
                            Id = 22,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "ECD Conditional Grant",
                            DirectorateId = 3,
                            IsActive = false,
                            Name = "ECD Conditional Grant"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.ProvisionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProvisionTypes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Provided",
                            SystemName = "Provided"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Required",
                            SystemName = "Required"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.RecipientType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RecipientTypes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Primary",
                            SystemName = "Primary"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Sub-Recipient",
                            SystemName = "SubRecipient"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.ResourceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ResourceTypes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "HR",
                            SystemName = "HR"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Other than HR",
                            SystemName = "Other"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.ServiceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ServiceTypes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Direct Service Delivery",
                            SystemName = "Direct"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Non-Direct Service Delivery",
                            SystemName = "Non-Direct"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.SubProgramme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ProgrammeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SubProgrammes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "All Sub-Programmes",
                            IsActive = false,
                            Name = "All Sub-Programmes",
                            ProgrammeId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Chronic Diseases",
                            IsActive = false,
                            Name = "Chronic Diseases",
                            ProgrammeId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "NCDs",
                            IsActive = false,
                            Name = "NCDs",
                            ProgrammeId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "HIV/AIDS",
                            IsActive = false,
                            Name = "HIV/AIDS",
                            ProgrammeId = 3
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "TB",
                            IsActive = false,
                            Name = "TB",
                            ProgrammeId = 3
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "STI",
                            IsActive = false,
                            Name = "STI",
                            ProgrammeId = 3
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Maternal Health",
                            IsActive = false,
                            Name = "Maternal Health",
                            ProgrammeId = 4
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Women's Health",
                            IsActive = false,
                            Name = "Women's Health",
                            ProgrammeId = 4
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Child and Adolescent Health",
                            IsActive = false,
                            Name = "Child and Adolescent Health",
                            ProgrammeId = 4
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Theatre",
                            IsActive = false,
                            Name = "Theatre",
                            ProgrammeId = 5
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Surgery",
                            IsActive = false,
                            Name = "Surgery",
                            ProgrammeId = 5
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Anaethetics",
                            IsActive = false,
                            Name = "Anaethetics",
                            ProgrammeId = 5
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Mental Health",
                            IsActive = false,
                            Name = "Mental Health",
                            ProgrammeId = 6
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Emerency Centre Pressures",
                            IsActive = false,
                            Name = "Emerency Centre Pressures",
                            ProgrammeId = 7
                        },
                        new
                        {
                            Id = 15,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            ProgrammeId = 8
                        },
                        new
                        {
                            Id = 16,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Shelter For Adults",
                            IsActive = false,
                            Name = "Shelter For Adults",
                            ProgrammeId = 8
                        },
                        new
                        {
                            Id = 17,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            ProgrammeId = 8
                        },
                        new
                        {
                            Id = 18,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Drop In Centres",
                            IsActive = false,
                            Name = "Drop In Centres",
                            ProgrammeId = 9
                        },
                        new
                        {
                            Id = 19,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            ProgrammeId = 9
                        },
                        new
                        {
                            Id = 20,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            ProgrammeId = 9
                        },
                        new
                        {
                            Id = 21,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Shelter for Children",
                            IsActive = false,
                            Name = "Shelter for Children",
                            ProgrammeId = 9
                        },
                        new
                        {
                            Id = 22,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "HIV - Aids",
                            IsActive = false,
                            Name = "HIV - Aids",
                            ProgrammeId = 9
                        },
                        new
                        {
                            Id = 23,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            ProgrammeId = 10
                        },
                        new
                        {
                            Id = 24,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            ProgrammeId = 10
                        },
                        new
                        {
                            Id = 25,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "After School Centres",
                            IsActive = false,
                            Name = "After School Centres",
                            ProgrammeId = 11
                        },
                        new
                        {
                            Id = 26,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Creches",
                            IsActive = false,
                            Name = "Creches",
                            ProgrammeId = 11
                        },
                        new
                        {
                            Id = 27,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            ProgrammeId = 11
                        },
                        new
                        {
                            Id = 28,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            ProgrammeId = 11
                        },
                        new
                        {
                            Id = 29,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            ProgrammeId = 12
                        },
                        new
                        {
                            Id = 30,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "EPWP - Conditional Grant",
                            IsActive = false,
                            Name = "EPWP - Conditional Grant",
                            ProgrammeId = 12
                        },
                        new
                        {
                            Id = 31,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            ProgrammeId = 12
                        },
                        new
                        {
                            Id = 32,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Child and Youth Care Centres",
                            IsActive = false,
                            Name = "Child and Youth Care Centres",
                            ProgrammeId = 13
                        },
                        new
                        {
                            Id = 33,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            ProgrammeId = 13
                        },
                        new
                        {
                            Id = 34,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Shelter for Childen",
                            IsActive = false,
                            Name = "Shelter for Childen",
                            ProgrammeId = 13
                        },
                        new
                        {
                            Id = 35,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            ProgrammeId = 14
                        },
                        new
                        {
                            Id = 36,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            ProgrammeId = 14
                        },
                        new
                        {
                            Id = 37,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Assisted Living",
                            IsActive = false,
                            Name = "Assisted Living",
                            ProgrammeId = 15
                        },
                        new
                        {
                            Id = 38,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Homes for the Aged",
                            IsActive = false,
                            Name = "Homes for the Aged",
                            ProgrammeId = 15
                        },
                        new
                        {
                            Id = 39,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            ProgrammeId = 15
                        },
                        new
                        {
                            Id = 40,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            ProgrammeId = 15
                        },
                        new
                        {
                            Id = 41,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Service Centres",
                            IsActive = false,
                            Name = "Service Centres",
                            ProgrammeId = 15
                        },
                        new
                        {
                            Id = 42,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Independent Living",
                            IsActive = false,
                            Name = "Independent Living",
                            ProgrammeId = 15
                        },
                        new
                        {
                            Id = 43,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Community Based Care and Support Services",
                            IsActive = false,
                            Name = "Community Based Care and Support Services",
                            ProgrammeId = 15
                        },
                        new
                        {
                            Id = 44,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Homes for the Disabled",
                            IsActive = false,
                            Name = "Homes for the Disabled",
                            ProgrammeId = 16
                        },
                        new
                        {
                            Id = 45,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            ProgrammeId = 16
                        },
                        new
                        {
                            Id = 46,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Protective Workshops",
                            IsActive = false,
                            Name = "Protective Workshops",
                            ProgrammeId = 16
                        },
                        new
                        {
                            Id = 47,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            ProgrammeId = 16
                        },
                        new
                        {
                            Id = 48,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Special Day Care Centres",
                            IsActive = false,
                            Name = "Special Day Care Centres",
                            ProgrammeId = 16
                        },
                        new
                        {
                            Id = 49,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Day Care Centre",
                            IsActive = false,
                            Name = "Day Care Centre",
                            ProgrammeId = 16
                        },
                        new
                        {
                            Id = 50,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Homes for the Aged",
                            IsActive = false,
                            Name = "Homes for the Aged",
                            ProgrammeId = 16
                        },
                        new
                        {
                            Id = 51,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Aftercare",
                            IsActive = false,
                            Name = "Aftercare",
                            ProgrammeId = 17
                        },
                        new
                        {
                            Id = 52,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Awareness",
                            IsActive = false,
                            Name = "Awareness",
                            ProgrammeId = 17
                        },
                        new
                        {
                            Id = 53,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Community Based Treatment",
                            IsActive = false,
                            Name = "Community Based Treatment",
                            ProgrammeId = 17
                        },
                        new
                        {
                            Id = 54,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Early Intervention",
                            IsActive = false,
                            Name = "Early Intervention",
                            ProgrammeId = 17
                        },
                        new
                        {
                            Id = 55,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            ProgrammeId = 17
                        },
                        new
                        {
                            Id = 56,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            ProgrammeId = 17
                        },
                        new
                        {
                            Id = 57,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Treatment Centres",
                            IsActive = false,
                            Name = "Treatment Centres",
                            ProgrammeId = 17
                        },
                        new
                        {
                            Id = 58,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            ProgrammeId = 18
                        },
                        new
                        {
                            Id = 59,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            ProgrammeId = 19
                        },
                        new
                        {
                            Id = 60,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Shelter For Victims of Violence",
                            IsActive = false,
                            Name = "Shelter For Victims of Violence",
                            ProgrammeId = 19
                        },
                        new
                        {
                            Id = 61,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            ProgrammeId = 19
                        },
                        new
                        {
                            Id = 62,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            ProgrammeId = 20
                        },
                        new
                        {
                            Id = 63,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            ProgrammeId = 20
                        },
                        new
                        {
                            Id = 64,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Youth Cafe",
                            IsActive = false,
                            Name = "Youth Cafe",
                            ProgrammeId = 20
                        },
                        new
                        {
                            Id = 65,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Childrens Homes",
                            IsActive = false,
                            Name = "Childrens Homes",
                            ProgrammeId = 21
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.SubProgrammeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("SubProgrammeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SubProgrammeTypes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "All Sub-Programme Types",
                            IsActive = false,
                            Name = "All Sub-Programme Types",
                            SubProgrammeId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Chronic Diseases",
                            IsActive = false,
                            Name = "Chronic Diseases",
                            SubProgrammeId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "NCDs",
                            IsActive = false,
                            Name = "NCDs",
                            SubProgrammeId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "HIV/AIDS",
                            IsActive = false,
                            Name = "HIV/AIDS",
                            SubProgrammeId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "TB",
                            IsActive = false,
                            Name = "TB",
                            SubProgrammeId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "STI",
                            IsActive = false,
                            Name = "STI",
                            SubProgrammeId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Maternal Health",
                            IsActive = false,
                            Name = "Maternal Health",
                            SubProgrammeId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Women's Health",
                            IsActive = false,
                            Name = "Women's Health",
                            SubProgrammeId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Child and Adolescent Health",
                            IsActive = false,
                            Name = "Child and Adolescent Health",
                            SubProgrammeId = 9
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Theatre",
                            IsActive = false,
                            Name = "Theatre",
                            SubProgrammeId = 10
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Surgery",
                            IsActive = false,
                            Name = "Surgery",
                            SubProgrammeId = 11
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Anaethetics",
                            IsActive = false,
                            Name = "Anaethetics",
                            SubProgrammeId = 12
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Mental Health",
                            IsActive = false,
                            Name = "Mental Health",
                            SubProgrammeId = 13
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Emerency Centre Pressures",
                            IsActive = false,
                            Name = "Emerency Centre Pressures",
                            SubProgrammeId = 14
                        },
                        new
                        {
                            Id = 15,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Shelter For Adults",
                            IsActive = false,
                            Name = "Shelter For Adults",
                            SubProgrammeId = 16
                        },
                        new
                        {
                            Id = 16,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 17
                        },
                        new
                        {
                            Id = 17,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "HIV",
                            IsActive = false,
                            Name = "HIV",
                            SubProgrammeId = 20
                        },
                        new
                        {
                            Id = 18,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 20
                        },
                        new
                        {
                            Id = 19,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Childrens Homes",
                            IsActive = false,
                            Name = "Childrens Homes",
                            SubProgrammeId = 21
                        },
                        new
                        {
                            Id = 20,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Drop In Centre",
                            IsActive = false,
                            Name = "Drop In Centre",
                            SubProgrammeId = 21
                        },
                        new
                        {
                            Id = 21,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Organisation",
                            IsActive = false,
                            Name = "Organisation",
                            SubProgrammeId = 21
                        },
                        new
                        {
                            Id = 22,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Shelter for Children",
                            IsActive = false,
                            Name = "Shelter for Children",
                            SubProgrammeId = 21
                        },
                        new
                        {
                            Id = 23,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Organisations",
                            IsActive = false,
                            Name = "Organisations",
                            SubProgrammeId = 22
                        },
                        new
                        {
                            Id = 24,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            SubProgrammeId = 24
                        },
                        new
                        {
                            Id = 25,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 24
                        },
                        new
                        {
                            Id = 26,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "After School Centres",
                            IsActive = false,
                            Name = "After School Centres",
                            SubProgrammeId = 25
                        },
                        new
                        {
                            Id = 27,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Creches",
                            IsActive = false,
                            Name = "Creches",
                            SubProgrammeId = 26
                        },
                        new
                        {
                            Id = 28,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 28
                        },
                        new
                        {
                            Id = 29,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 29
                        },
                        new
                        {
                            Id = 30,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "EPWP",
                            IsActive = false,
                            Name = "EPWP",
                            SubProgrammeId = 30
                        },
                        new
                        {
                            Id = 31,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 31
                        },
                        new
                        {
                            Id = 32,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 36
                        },
                        new
                        {
                            Id = 33,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Assisted Living",
                            IsActive = false,
                            Name = "Assisted Living",
                            SubProgrammeId = 38
                        },
                        new
                        {
                            Id = 34,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Independant Living",
                            IsActive = false,
                            Name = "Independant Living",
                            SubProgrammeId = 38
                        },
                        new
                        {
                            Id = 35,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Residential Facilities",
                            IsActive = false,
                            Name = "Residential Facilities",
                            SubProgrammeId = 38
                        },
                        new
                        {
                            Id = 36,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 40
                        },
                        new
                        {
                            Id = 37,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Service Centre",
                            IsActive = false,
                            Name = "Service Centre",
                            SubProgrammeId = 41
                        },
                        new
                        {
                            Id = 38,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Home Based Care Services",
                            IsActive = false,
                            Name = "Home Based Care Services",
                            SubProgrammeId = 43
                        },
                        new
                        {
                            Id = 39,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Service Centre",
                            IsActive = false,
                            Name = "Service Centre",
                            SubProgrammeId = 43
                        },
                        new
                        {
                            Id = 40,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Residential Facilities",
                            IsActive = false,
                            Name = "Residential Facilities",
                            SubProgrammeId = 44
                        },
                        new
                        {
                            Id = 41,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Protective Workshop",
                            IsActive = false,
                            Name = "Protective Workshop",
                            SubProgrammeId = 46
                        },
                        new
                        {
                            Id = 42,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Day Care Centre",
                            IsActive = false,
                            Name = "Day Care Centre",
                            SubProgrammeId = 47
                        },
                        new
                        {
                            Id = 43,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 47
                        },
                        new
                        {
                            Id = 44,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Special Day Care Centre",
                            IsActive = false,
                            Name = "Special Day Care Centre",
                            SubProgrammeId = 47
                        },
                        new
                        {
                            Id = 45,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Special Day Care Centres",
                            IsActive = false,
                            Name = "Special Day Care Centres",
                            SubProgrammeId = 48
                        },
                        new
                        {
                            Id = 46,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Day Care Centre",
                            IsActive = false,
                            Name = "Day Care Centre",
                            SubProgrammeId = 49
                        },
                        new
                        {
                            Id = 47,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Residential Facilities",
                            IsActive = false,
                            Name = "Residential Facilities",
                            SubProgrammeId = 50
                        },
                        new
                        {
                            Id = 48,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            SubProgrammeId = 55
                        },
                        new
                        {
                            Id = 49,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Aftercare",
                            IsActive = false,
                            Name = "Aftercare",
                            SubProgrammeId = 56
                        },
                        new
                        {
                            Id = 50,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Awareness & Prevention",
                            IsActive = false,
                            Name = "Awareness & Prevention",
                            SubProgrammeId = 56
                        },
                        new
                        {
                            Id = 51,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Community based treatment",
                            IsActive = false,
                            Name = "Community based treatment",
                            SubProgrammeId = 56
                        },
                        new
                        {
                            Id = 52,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Early Intervention",
                            IsActive = false,
                            Name = "Early Intervention",
                            SubProgrammeId = 56
                        },
                        new
                        {
                            Id = 53,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 56
                        },
                        new
                        {
                            Id = 54,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Youth Programmes",
                            IsActive = false,
                            Name = "Youth Programmes",
                            SubProgrammeId = 56
                        },
                        new
                        {
                            Id = 55,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Community based treatment",
                            IsActive = false,
                            Name = "Community based treatment",
                            SubProgrammeId = 57
                        },
                        new
                        {
                            Id = 56,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "In patient",
                            IsActive = false,
                            Name = "In patient",
                            SubProgrammeId = 57
                        },
                        new
                        {
                            Id = 57,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Out Patient",
                            IsActive = false,
                            Name = "Out Patient",
                            SubProgrammeId = 57
                        },
                        new
                        {
                            Id = 58,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Earmarked Funding",
                            IsActive = false,
                            Name = "Earmarked Funding",
                            SubProgrammeId = 58
                        },
                        new
                        {
                            Id = 59,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Equitable Share",
                            IsActive = false,
                            Name = "Equitable Share",
                            SubProgrammeId = 58
                        },
                        new
                        {
                            Id = 60,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 58
                        },
                        new
                        {
                            Id = 61,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "SRD",
                            IsActive = false,
                            Name = "SRD",
                            SubProgrammeId = 58
                        },
                        new
                        {
                            Id = 62,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Targetted Feeding",
                            IsActive = false,
                            Name = "Targetted Feeding",
                            SubProgrammeId = 58
                        },
                        new
                        {
                            Id = 63,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Programme focus",
                            IsActive = false,
                            Name = "Programme focus",
                            SubProgrammeId = 59
                        },
                        new
                        {
                            Id = 64,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Shelter for Women and Children",
                            IsActive = false,
                            Name = "Shelter for Women and Children",
                            SubProgrammeId = 60
                        },
                        new
                        {
                            Id = 65,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Victims of Crime/Violence/Fam members/significant",
                            IsActive = false,
                            Name = "Victims of Crime/Violence/Fam members/significant",
                            SubProgrammeId = 60
                        },
                        new
                        {
                            Id = 66,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Service Provider",
                            IsActive = false,
                            Name = "Service Provider",
                            SubProgrammeId = 61
                        },
                        new
                        {
                            Id = 67,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 61
                        },
                        new
                        {
                            Id = 68,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            SubProgrammeId = 62
                        },
                        new
                        {
                            Id = 69,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 63
                        },
                        new
                        {
                            Id = 70,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Youth Cafe",
                            IsActive = false,
                            Name = "Youth Cafe",
                            SubProgrammeId = 63
                        },
                        new
                        {
                            Id = 71,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Childrens Homes",
                            IsActive = false,
                            Name = "Childrens Homes",
                            SubProgrammeId = 65
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Titles", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mr"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mrs"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Miss"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Dr"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Prof"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Ms"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.AccessStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AccessStatuses", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pending",
                            SystemName = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Approved",
                            SystemName = "Approved"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Rejected",
                            SystemName = "Rejected"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "New",
                            SystemName = "New"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActivityListId")
                        .HasColumnType("int");

                    b.Property<int>("ActivityTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<bool?>("ChangesRequired")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ObjectiveId")
                        .HasColumnType("int");

                    b.Property<string>("SuccessIndicator")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Target")
                        .HasColumnType("int");

                    b.Property<string>("TimelineEndDate")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TimelineStartDate")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityListId");

                    b.HasIndex("ActivityTypeId");

                    b.HasIndex("ObjectiveId");

                    b.ToTable("Activities", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.AddressInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("NpoProfileId")
                        .HasColumnType("int");

                    b.Property<string>("PhysicalAddress")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PostalAddress")
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("PostalSameAsPhysical")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NpoProfileId")
                        .IsUnique();

                    b.ToTable("AddressInformation", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("NpoId")
                        .HasColumnType("int");

                    b.Property<string>("RefNo")
                        .HasColumnType("char(15)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationPeriodId");

                    b.HasIndex("NpoId");

                    b.HasIndex("StatusId");

                    b.ToTable("Applications", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ApplicationApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("ApprovedFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.ToTable("ApplicationApprovals", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ApplicationAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("StatusId");

                    b.ToTable("ApplicationAudits", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ApplicationComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceProvisionStepId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.ToTable("ApplicationComments", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ApplicationPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("FinancialYearId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("OpeningDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProgrammeId")
                        .HasColumnType("int");

                    b.Property<string>("RefNo")
                        .HasColumnType("char(15)");

                    b.Property<int>("SubProgrammeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationTypeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FinancialYearId");

                    b.HasIndex("ProgrammeId");

                    b.HasIndex("SubProgrammeId");

                    b.ToTable("ApplicationPeriods", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ContactInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cellphone")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("IdNumber")
                        .HasColumnType("nvarchar(13)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrimaryContact")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("NpoId")
                        .HasColumnType("int");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<bool>("RSAIdNumber")
                        .HasColumnType("bit");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NpoId");

                    b.HasIndex("PositionId");

                    b.HasIndex("TitleId");

                    b.ToTable("ContactInformation", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Npo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ApprovalDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprovalStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("ApprovalUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("OrganisationTypeId")
                        .HasColumnType("int");

                    b.Property<string>("RefNo")
                        .HasColumnType("char(15)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("YearRegistered")
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalStatusId");

                    b.HasIndex("ApprovalUserId");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("OrganisationTypeId");

                    b.ToTable("Npos", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.NpoProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("NpoId")
                        .HasColumnType("int");

                    b.Property<string>("RefNo")
                        .HasColumnType("char(15)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NpoId");

                    b.ToTable("NpoProfiles", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Objective", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<decimal>("Budget")
                        .HasColumnType("numeric(18,6)");

                    b.Property<bool?>("ChangesRequired")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FundingPeriodEndDate")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FundingPeriodStartDate")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FundingSource")
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecipientTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipientTypeId");

                    b.ToTable("Objectives", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("AllocationTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<bool?>("ChangesRequired")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfResources")
                        .HasColumnType("int");

                    b.Property<int>("ProvisionTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ResourceListId")
                        .HasColumnType("int");

                    b.Property<int>("ResourceTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("AllocationTypeId");

                    b.HasIndex("ProvisionTypeId");

                    b.HasIndex("ResourceListId");

                    b.HasIndex("ResourceTypeId");

                    b.HasIndex("ServiceTypeId");

                    b.ToTable("Resources", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ServicesRendered", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("NpoProfileId")
                        .HasColumnType("int");

                    b.Property<int>("ProgrammeId")
                        .HasColumnType("int");

                    b.Property<int>("SubProgrammeId")
                        .HasColumnType("int");

                    b.Property<int>("SubProgrammeTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NpoProfileId");

                    b.ToTable("ServicesRendered", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Statuses", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "New",
                            SystemName = "New"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Saved",
                            SystemName = "Saved"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pending Review",
                            SystemName = "PendingReview"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Amendments Required",
                            SystemName = "AmendmentsRequired"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pending Approval",
                            SystemName = "PendingApproval"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Rejected",
                            SystemName = "Rejected"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pending SLA",
                            SystemName = "PendingSLA"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pending Signed SLA",
                            SystemName = "PendingSignedSLA"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Accepted SLA",
                            SystemName = "AcceptedSLA"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Approval In Progress",
                            SystemName = "ApprovalInProgress"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "SLA: Comments Submitted (Dept)",
                            SystemName = "DeptComments"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "SLA: Comments Submitted (Org)",
                            SystemName = "OrgComments"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.SustainabilityPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<bool?>("ChangesRequired")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Mitigation")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Risk")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("SustainabilityPlans", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.TrainingMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("TrainingMaterials", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "This guide illustrates how to capture workplans",
                            IsActive = false,
                            Link = "https://www.westerncape.gov.za/dept/health",
                            Name = "Applicant Guide"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "This guide illustrates how to review workplans",
                            IsActive = false,
                            Link = "https://www.westerncape.gov.za/dept/health",
                            Name = "Reviewer Guide"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Indicator.WorkplanActual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int?>("Actual")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("DeviationReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FinancialYearId")
                        .HasColumnType("int");

                    b.Property<int>("FrequencyPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("Statement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("WorkplanTargetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FrequencyPeriodId");

                    b.ToTable("WorkplanActuals", "indicator");
                });

            modelBuilder.Entity("NPOMS.Domain.Indicator.WorkplanComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("WorkplanActualId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.ToTable("WorkplanComments", "indicator");
                });

            modelBuilder.Entity("NPOMS.Domain.Indicator.WorkplanTarget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int?>("Annual")
                        .HasColumnType("int");

                    b.Property<int?>("Apr")
                        .HasColumnType("int");

                    b.Property<int?>("Aug")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("Dec")
                        .HasColumnType("int");

                    b.Property<int?>("Feb")
                        .HasColumnType("int");

                    b.Property<int>("FinancialYearId")
                        .HasColumnType("int");

                    b.Property<int>("FrequencyId")
                        .HasColumnType("int");

                    b.Property<int?>("Jan")
                        .HasColumnType("int");

                    b.Property<int?>("Jul")
                        .HasColumnType("int");

                    b.Property<int?>("Jun")
                        .HasColumnType("int");

                    b.Property<int?>("Mar")
                        .HasColumnType("int");

                    b.Property<int?>("May")
                        .HasColumnType("int");

                    b.Property<int?>("Nov")
                        .HasColumnType("int");

                    b.Property<int?>("Oct")
                        .HasColumnType("int");

                    b.Property<int?>("Quarter1")
                        .HasColumnType("int");

                    b.Property<int?>("Quarter2")
                        .HasColumnType("int");

                    b.Property<int?>("Quarter3")
                        .HasColumnType("int");

                    b.Property<int?>("Quarter4")
                        .HasColumnType("int");

                    b.Property<int?>("Sep")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialYearId");

                    b.HasIndex("FrequencyId");

                    b.ToTable("WorkplanTargets", "indicator");
                });

            modelBuilder.Entity("NPOMS.Domain.Lookup.ActivityList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ActivityList", "lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Quarterly reports",
                            IsActive = false,
                            Name = "Quarterly reports"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Quarterly stakeholder engagements",
                            IsActive = false,
                            Name = "Quarterly stakeholder engagements"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provision of resources",
                            IsActive = false,
                            Name = "Provision of resources"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Capacity Development",
                            IsActive = false,
                            Name = "Capacity Development"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Monitoring and Evaluation",
                            IsActive = false,
                            Name = "Monitoring and Evaluation"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Quality Improvement",
                            IsActive = false,
                            Name = "Quality Improvement"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Implementation of Human Rights activities",
                            IsActive = false,
                            Name = "Implementation of Human Rights activities"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Advocacy",
                            IsActive = false,
                            Name = "Advocacy"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "GP referrals",
                            IsActive = false,
                            Name = "GP referrals"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Engagement with taxi industry",
                            IsActive = false,
                            Name = "Engagement with taxi industry"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Awareness campaigns",
                            IsActive = false,
                            Name = "Awareness campaigns"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "HIV Testing",
                            IsActive = false,
                            Name = "HIV Testing"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Health Screening",
                            IsActive = false,
                            Name = "Health Screening"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Introduction of self-screening",
                            IsActive = false,
                            Name = "Introduction of self-screening"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Reduce Stima & Discrimination",
                            IsActive = false,
                            Name = "Reduce Stima & Discrimination"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide Legal Support",
                            IsActive = false,
                            Name = "Provide Legal Support"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Distribution of posters, leaflets and pamphlets",
                            IsActive = false,
                            Name = "Distribution of posters, leaflets and pamphlets"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Advocacy for People Who use and inject Drugs (PWID)",
                            IsActive = false,
                            Name = "Advocacy for PWID"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Decriminalisation of Sex Work ",
                            IsActive = false,
                            Name = "Decriminalisation of Sex Work "
                        },
                        new
                        {
                            Id = 20,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Sesitization engagements",
                            IsActive = false,
                            Name = "Sesitization engagements"
                        },
                        new
                        {
                            Id = 21,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Mapping",
                            IsActive = false,
                            Name = "Mapping"
                        },
                        new
                        {
                            Id = 22,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Providing CBM toolkits",
                            IsActive = false,
                            Name = "Providing CBM toolkits"
                        },
                        new
                        {
                            Id = 23,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Distribute IEC material",
                            IsActive = false,
                            Name = "Distribute IEC material"
                        },
                        new
                        {
                            Id = 24,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Training",
                            IsActive = false,
                            Name = "Training"
                        },
                        new
                        {
                            Id = 25,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Demand creation",
                            IsActive = false,
                            Name = "Demand creation"
                        },
                        new
                        {
                            Id = 26,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Score card development and monitoring",
                            IsActive = false,
                            Name = "Score card development and monitoring"
                        },
                        new
                        {
                            Id = 27,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Skills development",
                            IsActive = false,
                            Name = "Skills development"
                        },
                        new
                        {
                            Id = 28,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Obtain facility start-up kits from NDOH",
                            IsActive = false,
                            Name = "Obtain facility start-up kits from NDOH"
                        },
                        new
                        {
                            Id = 29,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Facility and site assessments",
                            IsActive = false,
                            Name = "Facility and site assessments"
                        },
                        new
                        {
                            Id = 30,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Develop assessment tools",
                            IsActive = false,
                            Name = "Develop assessment tools"
                        },
                        new
                        {
                            Id = 31,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "SOP development",
                            IsActive = false,
                            Name = "SOP development"
                        },
                        new
                        {
                            Id = 32,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Deploy NDOH tools",
                            IsActive = false,
                            Name = "Deploy NDOH tools"
                        },
                        new
                        {
                            Id = 33,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Deploy NDOH tools and Tier.net module to all identified sites",
                            IsActive = false,
                            Name = "Deploy NDOH tools and Tier.net modules"
                        },
                        new
                        {
                            Id = 34,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Update PrEP finder on NDOH website to include facilities",
                            IsActive = false,
                            Name = "Update PrEP finder on NDOH website"
                        },
                        new
                        {
                            Id = 35,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Data quality assessment",
                            IsActive = false,
                            Name = "Data quality assessment"
                        },
                        new
                        {
                            Id = 36,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Facility-level data review",
                            IsActive = false,
                            Name = "Facility-level data review"
                        },
                        new
                        {
                            Id = 37,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Conduct  performance management activities",
                            IsActive = false,
                            Name = "Conduct  performance management activities"
                        },
                        new
                        {
                            Id = 38,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Distribution of MINA collateral, posters an IEC to facilities.",
                            IsActive = false,
                            Name = "Distribution of MINA collateral, posters and IEC"
                        },
                        new
                        {
                            Id = 39,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Facilitate the branding in facilities",
                            IsActive = false,
                            Name = "Facilitate the branding in facilities"
                        },
                        new
                        {
                            Id = 40,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Identification of MINA champion /facility in conjunction with facility manager",
                            IsActive = false,
                            Name = "Identification of MINA champion"
                        },
                        new
                        {
                            Id = 41,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Advocacy for mesn health",
                            IsActive = false,
                            Name = "Advocacy for mesn health"
                        },
                        new
                        {
                            Id = 42,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "HiV prevention",
                            IsActive = false,
                            Name = "HiV prevention"
                        },
                        new
                        {
                            Id = 43,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "HTS",
                            IsActive = false,
                            Name = "HTS"
                        },
                        new
                        {
                            Id = 44,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Care",
                            IsActive = false,
                            Name = "Care"
                        },
                        new
                        {
                            Id = 45,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Treatment/FP Services",
                            IsActive = false,
                            Name = "Treatment/FP Services"
                        },
                        new
                        {
                            Id = 46,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "DREAMS stakeholder engagement",
                            IsActive = false,
                            Name = "DREAMS stakeholder engagement"
                        },
                        new
                        {
                            Id = 47,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "DREAMS Ambassador development",
                            IsActive = false,
                            Name = "DREAMS Ambassador development"
                        },
                        new
                        {
                            Id = 48,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support the establishment of facility and sub-district Adolescent and Youth Friendly Services (AYFS)",
                            IsActive = false,
                            Name = "Support the establishment of AYFS"
                        },
                        new
                        {
                            Id = 49,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Promote provision of integrated HTS/HIV Prevention/FP/SRH services to AGYW at FP units or youth care corners",
                            IsActive = false,
                            Name = "Promote provision of integrated services to AGYW"
                        },
                        new
                        {
                            Id = 50,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Guideline development",
                            IsActive = false,
                            Name = "Guideline development"
                        },
                        new
                        {
                            Id = 51,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "LIVES Training",
                            IsActive = false,
                            Name = "LIVES Training"
                        },
                        new
                        {
                            Id = 52,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Avial adolescent clinics and youth corners",
                            IsActive = false,
                            Name = "Avial adolescent clinics and youth corners"
                        },
                        new
                        {
                            Id = 53,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Mentorship on client engagement",
                            IsActive = false,
                            Name = "Mentorship on client engagement"
                        },
                        new
                        {
                            Id = 54,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Implement PrEP services",
                            IsActive = false,
                            Name = "Implement PrEP services"
                        },
                        new
                        {
                            Id = 55,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Welcome back campaign",
                            IsActive = false,
                            Name = "Welcome back campaign"
                        },
                        new
                        {
                            Id = 56,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Stakeholder enagement",
                            IsActive = false,
                            Name = "Stakeholder enagement"
                        },
                        new
                        {
                            Id = 57,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Site visits and assesssments",
                            IsActive = false,
                            Name = "Site visits and assesssments"
                        },
                        new
                        {
                            Id = 58,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support policy development",
                            IsActive = false,
                            Name = "Support policy development"
                        },
                        new
                        {
                            Id = 59,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Ensure that 90 % of pregnant women are started same day    ",
                            IsActive = false,
                            Name = "Ensure pregnant women are started same day    "
                        },
                        new
                        {
                            Id = 60,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "IQC of HIV Test kits",
                            IsActive = false,
                            Name = "IQC of HIV Test kits"
                        },
                        new
                        {
                            Id = 61,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Rapid test quality improvements",
                            IsActive = false,
                            Name = "Rapid test quality improvements"
                        },
                        new
                        {
                            Id = 62,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support and Conduct 6 monthly SPI -RT assessments in all facilities",
                            IsActive = false,
                            Name = "Conduct 6 monthly SPI -RT assessments"
                        },
                        new
                        {
                            Id = 63,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Quality Assessments",
                            IsActive = false,
                            Name = "Quality Assessments"
                        },
                        new
                        {
                            Id = 64,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Conduct monthly TB register audits to identify gaps in HIV testing",
                            IsActive = false,
                            Name = "Conduct monthly TB register audits"
                        },
                        new
                        {
                            Id = 65,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Review presumptive TB register to indentify confirmed Tb + clients not initiated on ART and fasttrack for initiation",
                            IsActive = false,
                            Name = "Review presumptive TB register"
                        },
                        new
                        {
                            Id = 66,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Analyse IPT Data to improve initiation and completion of IPT",
                            IsActive = false,
                            Name = "Analyse IPT Data to improve completion of IPT"
                        },
                        new
                        {
                            Id = 67,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Conduct monthly PMTCT register reviews",
                            IsActive = false,
                            Name = "Conduct monthly PMTCT register reviews"
                        },
                        new
                        {
                            Id = 68,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Funder prescribed assessments",
                            IsActive = false,
                            Name = "Funder prescribed assessments"
                        },
                        new
                        {
                            Id = 69,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Conduct routine clinical chart and register reviews to identify gaps in HTS/HIV/TB services",
                            IsActive = false,
                            Name = "Conduct routine clinical chart and register review"
                        },
                        new
                        {
                            Id = 70,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Develop facility QIPs in conjunction with facility team  according to the gaps identified",
                            IsActive = false,
                            Name = "Develop facility QIPs"
                        },
                        new
                        {
                            Id = 71,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Monitor implementation of facility QIPs",
                            IsActive = false,
                            Name = "Monitor implementation of facility QIPs"
                        },
                        new
                        {
                            Id = 72,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide coaching  and upskilling in implementation and monitoring of improvement activities (FIP's and QIP's) to facility staff",
                            IsActive = false,
                            Name = "Provide coaching and upskilling"
                        },
                        new
                        {
                            Id = 73,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support the implementation of TB screening for all ART clients at every visit and actioning for TPT or TB testing in supported facilities",
                            IsActive = false,
                            Name = "Support the implementation of TB screening"
                        },
                        new
                        {
                            Id = 74,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Monthly reviews of facility TB screening practices among ART clients flagging for low TPT uptake and <90% screening of all visiting ART clients",
                            IsActive = false,
                            Name = "Monthly reviews of TB screening practices"
                        },
                        new
                        {
                            Id = 75,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Monthly review of Presumptive  register to ensure all Presumptive clients have an HIV and or ART status, clients not initiated on ART and fast track  for initiation.",
                            IsActive = false,
                            Name = "Monthly review of Presumptive register"
                        },
                        new
                        {
                            Id = 76,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Assist with training staff on HTS and ART for Presumptive TB",
                            IsActive = false,
                            Name = "Assist with training staff on HTS"
                        },
                        new
                        {
                            Id = 77,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Assist with training of staff  on TPT guidelines and management of TPT in ART clients",
                            IsActive = false,
                            Name = "Assist with training of staff on TPT"
                        },
                        new
                        {
                            Id = 78,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Monthly review of facility TPT to ART initiation rates to ensure above 85%",
                            IsActive = false,
                            Name = "Monthly review of facility TPT to ART"
                        },
                        new
                        {
                            Id = 79,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Monthly review of facility missed opportunities to initiate TPT in TX_NEW 3 months prior and flag for reassessment of TPT eligibility and TPT initiation",
                            IsActive = false,
                            Name = "Monthly review of facility missed opportunities"
                        },
                        new
                        {
                            Id = 80,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Monthly review of facility TPT outcomes of clients initiated 12 months prior flagging all patients with outstanding TPT outcomes, ensure outcomes are completed.",
                            IsActive = false,
                            Name = "Monthly review of facility TPT outcomes"
                        },
                        new
                        {
                            Id = 81,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Strengthening of results management",
                            IsActive = false,
                            Name = "Strengthening of results management"
                        },
                        new
                        {
                            Id = 82,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Monthly review of specimen rejection rates for   CD4/VL/PCR/TB GenxPert and implement corrective measures    on rejections caused by pre-analytical errors.",
                            IsActive = false,
                            Name = "Monthly review of specimen rejection rates"
                        },
                        new
                        {
                            Id = 83,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support with the roll out and implementation of Post Natal Clubs",
                            IsActive = false,
                            Name = "Support with implementation of Post Natal Clubs"
                        },
                        new
                        {
                            Id = 84,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide oversight support on Post Natal Clubs(coaching of PNC Nurses)",
                            IsActive = false,
                            Name = "Provide support on Post Natal Clubs"
                        },
                        new
                        {
                            Id = 85,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Conduct PMTCT register review to monitor",
                            IsActive = false,
                            Name = "Conduct PMTCT register review to monitor"
                        },
                        new
                        {
                            Id = 86,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Coaching on correct completion of registers",
                            IsActive = false,
                            Name = "Coaching on correct completion of registers"
                        },
                        new
                        {
                            Id = 87,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Participate in PMTCT forums and PNC Forums ",
                            IsActive = false,
                            Name = "Participate in PMTCT forums and PNC Forums "
                        },
                        new
                        {
                            Id = 88,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Active participation in all Data Management platforms",
                            IsActive = false,
                            Name = "Active participation in Data Management platforms"
                        },
                        new
                        {
                            Id = 89,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "TA support: training and support of DOH staff in facilities. strengtening current data systems and structures in facilities.",
                            IsActive = false,
                            Name = "TA support"
                        },
                        new
                        {
                            Id = 90,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Conduct adherence club audits and initiate QIP based on findings",
                            IsActive = false,
                            Name = "Conduct adherence club audits and initiate QIP"
                        },
                        new
                        {
                            Id = 91,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide DSD to improve same day initiations",
                            IsActive = false,
                            Name = "Provide DSD to improve same day initiations"
                        },
                        new
                        {
                            Id = 92,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Integrate Case mangement tool with Facility systems and processes.",
                            IsActive = false,
                            Name = "Integrate Case mangement tool"
                        },
                        new
                        {
                            Id = 93,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support PHDC: with Human Resources,Improve Linkage and retention,comprehensive patient Care; Cross Referencing of data and generation of reports.",
                            IsActive = false,
                            Name = "Support PHDC"
                        },
                        new
                        {
                            Id = 94,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Improvement of Facility level Data-consolidate multiple entries into a unique ID (HPRN)",
                            IsActive = false,
                            Name = "Improve data-consolidate multiple entries"
                        },
                        new
                        {
                            Id = 95,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide ongoing support on coaching and mentoring of DOH / CCT NIMART nurses to scale up same day initiations",
                            IsActive = false,
                            Name = "Provide support on coaching and mentoring"
                        },
                        new
                        {
                            Id = 96,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support the re-authorization of NIMART nurses",
                            IsActive = false,
                            Name = "Support the re-authorization of NIMART nurses"
                        },
                        new
                        {
                            Id = 97,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support DoH and CCT Mentors to complete NIMART training  for  professional nurses  according to Western Cape guidelines/criteria",
                            IsActive = false,
                            Name = "Support Mentors to complete NIMART training"
                        },
                        new
                        {
                            Id = 98,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Identify gaps at Facilities as per program operations requirement. Support facilities in reaching set targets(both facility & DSP targets) by linking DSD staff to identified sites.",
                            IsActive = false,
                            Name = "Identify gaps per program operations requirement"
                        },
                        new
                        {
                            Id = 99,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Build  capacity of facility data/admin staff to support best practices/national /provincial guidelines on patient record keeping/ filing,archiving, registry hygiene",
                            IsActive = false,
                            Name = "Build data/admin staff to support best practices"
                        },
                        new
                        {
                            Id = 100,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide DSD to improve patient  experience and flow through facilities. Increased number of patient medication pick-up points",
                            IsActive = false,
                            Name = "Provide DSD to improve patient experience"
                        },
                        new
                        {
                            Id = 101,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support decanting strategy to improve pharmacy waiting times.",
                            IsActive = false,
                            Name = "Improve pharmacy waiting times."
                        },
                        new
                        {
                            Id = 102,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Strenthgthening appointment system in all Facilities.",
                            IsActive = false,
                            Name = "Strenthgthening appointment system"
                        },
                        new
                        {
                            Id = 103,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Introduce and support pre-retrieval of folders in all Facilities.",
                            IsActive = false,
                            Name = "Introduce and support pre-retrieval of folders"
                        },
                        new
                        {
                            Id = 104,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide support to DoH  /CCT on roll out services during extended working hours at identified facilities ",
                            IsActive = false,
                            Name = "Provide support to on roll out services"
                        },
                        new
                        {
                            Id = 105,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support critical posts within the HAST Directorate",
                            IsActive = false,
                            Name = "Support critical posts within the HAST Directorate"
                        },
                        new
                        {
                            Id = 106,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Regular and on-going feedback with sub structures and facilities on progress towards targets",
                            IsActive = false,
                            Name = "Regular and ongoing feedback with sub structures"
                        },
                        new
                        {
                            Id = 107,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Cultivate a culture of accountability towards facilities, colleagues and clients.",
                            IsActive = false,
                            Name = "Cultivate a culture of accountability"
                        },
                        new
                        {
                            Id = 108,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Individual performance mornitoring and feedback done for all staff ",
                            IsActive = false,
                            Name = "Individual performance mornitoring and feedback"
                        },
                        new
                        {
                            Id = 109,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provision of value clubs",
                            IsActive = false,
                            Name = "Provision of value clubs"
                        },
                        new
                        {
                            Id = 110,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support registering of value clubs (both facility and community) at supported facilities.",
                            IsActive = false,
                            Name = "Support registering of value clubs"
                        },
                        new
                        {
                            Id = 111,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Tracing patient adherence through the other DMOC modalities.",
                            IsActive = false,
                            Name = "Tracing patient adherence"
                        },
                        new
                        {
                            Id = 112,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Working with facility DOH staff to ensure that newly decanted stable patients are added to existing and/or new clubs at supported facilities.",
                            IsActive = false,
                            Name = "Ensure newly decanted patients are added to clubs"
                        },
                        new
                        {
                            Id = 113,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Generation of  Risk of treatment failure client lists to identify gaps and to guide program on resource deployment.",
                            IsActive = false,
                            Name = "Generate Risk of treatment failure client lists"
                        },
                        new
                        {
                            Id = 114,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Weekly Tracking and recall of clients  with virologic failure using Facility Information Systems ",
                            IsActive = false,
                            Name = "Weekly Tracking and recall of clients"
                        },
                        new
                        {
                            Id = 115,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Suport Facilities with  Telephonic tracing and recalls of  for Viral loads(VL) due; missed VLs and  unsuppressed VL's",
                            IsActive = false,
                            Name = "Suport with Telephonic tracing and recalls VL"
                        },
                        new
                        {
                            Id = 116,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Improve clinical management  by providing on site facility training and mentoring of clinical staff",
                            IsActive = false,
                            Name = "Improve clinical management"
                        },
                        new
                        {
                            Id = 117,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support Facilities with Folder Audits to maintain good quality of clinical care and improve VL uptake at Faclity level",
                            IsActive = false,
                            Name = "Support Facilities with Folder Audits"
                        },
                        new
                        {
                            Id = 118,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support Specialised services by providing Advanced clinical care  ( ROTF, pharmacovigilance) ",
                            IsActive = false,
                            Name = "Support with providing Advanced clinical care"
                        },
                        new
                        {
                            Id = 119,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Track VL done on ALL new patients tthough implementation and monitoring of the 100 day Case Management at Siyenza Facilities",
                            IsActive = false,
                            Name = "Track VL done on ALL new patients"
                        },
                        new
                        {
                            Id = 120,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Strengthen viral load monitoring, and capturing  by providing techinal assistance.",
                            IsActive = false,
                            Name = "Strengthen viral load monitoring and capturing"
                        },
                        new
                        {
                            Id = 121,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Mobilize individuals with virologic failure using TIER.net and NHLS and PHCD(Viral load for action reports)",
                            IsActive = false,
                            Name = "Mobilize individuals with virologic failure"
                        },
                        new
                        {
                            Id = 122,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support Specialised services by providing Advanced clinical care for  v  ( ROTF, pharmacovigilance and other co-morbidities)",
                            IsActive = false,
                            Name = "Support by providing Advanced clinical care"
                        },
                        new
                        {
                            Id = 123,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support retention in care through telephonic tracing",
                            IsActive = false,
                            Name = "Support care rentention - telephonic tracing"
                        },
                        new
                        {
                            Id = 124,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support rentention in care through trace and track",
                            IsActive = false,
                            Name = "Support care rentention - trace and track"
                        },
                        new
                        {
                            Id = 125,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support rentention in care by imprving VL uptake and monitoring",
                            IsActive = false,
                            Name = "Support care rentention - improve VL uptake"
                        },
                        new
                        {
                            Id = 126,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support rententions in care through welcome back campaigns",
                            IsActive = false,
                            Name = "Support care rentention - welcome back campaigns"
                        },
                        new
                        {
                            Id = 127,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support retention in care through effective used of pharmacy collection data",
                            IsActive = false,
                            Name = "Support care retention - pharmacy collection data"
                        },
                        new
                        {
                            Id = 128,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support retention in care by supporting facilities in decanting strategies",
                            IsActive = false,
                            Name = "Support care retention - decanting strategies"
                        },
                        new
                        {
                            Id = 129,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support rentention in care by supporting facilities with scripting, planning  and improving adherence clubs",
                            IsActive = false,
                            Name = "Support care rentention - scripting, planning, etc"
                        },
                        new
                        {
                            Id = 130,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide appropriate number of clinicians to facilities to initiate Clients on ART",
                            IsActive = false,
                            Name = "Provide appropriate number of clinicians on ART"
                        },
                        new
                        {
                            Id = 131,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide cross reference between data sytems to track ART initiations",
                            IsActive = false,
                            Name = "Provide cross reference to track ART initiations"
                        },
                        new
                        {
                            Id = 132,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Build capacity of DoH/CCT staff by supporting NIMART mentoring",
                            IsActive = false,
                            Name = "Build capacity of staff with NIMART mentoring"
                        },
                        new
                        {
                            Id = 133,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support DoH/ CCT policy on same day initiations",
                            IsActive = false,
                            Name = "Support DoH/ CCT policy on same day initiations"
                        },
                        new
                        {
                            Id = 134,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support TLD transition ",
                            IsActive = false,
                            Name = "Support TLD transition "
                        },
                        new
                        {
                            Id = 135,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide capacity to sustain medication dispensing to support same day initiation / ART enrolment",
                            IsActive = false,
                            Name = "Provide capacity to sustain medication dispensing"
                        },
                        new
                        {
                            Id = 136,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Identify ART initiation backlogs per facility trough weekly data evaluation meetings for identification of gaps at facility level through DSD",
                            IsActive = false,
                            Name = "Identify ART initiation backlogs"
                        },
                        new
                        {
                            Id = 137,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide case managers to ensure effective linkage and retention in care.",
                            IsActive = false,
                            Name = "Provide case managers"
                        },
                        new
                        {
                            Id = 138,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Increase access to care by expanding pharmacy services into quick pick up points",
                            IsActive = false,
                            Name = "Increase access to care"
                        },
                        new
                        {
                            Id = 139,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support to people who are at risk of lost to follow up ",
                            IsActive = false,
                            Name = "Support people at risk of lost to follow up"
                        },
                        new
                        {
                            Id = 140,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support the DOH Welcome Back Campaign",
                            IsActive = false,
                            Name = "Support the DOH Welcome Back Campaign"
                        },
                        new
                        {
                            Id = 141,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Develop IT support for for tracking of ARV clients for reporting to funders",
                            IsActive = false,
                            Name = "Develop IT support for tracking of ARV clients"
                        },
                        new
                        {
                            Id = 142,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide  NIMART trained nurses ",
                            IsActive = false,
                            Name = "Provide  NIMART trained nurses "
                        },
                        new
                        {
                            Id = 143,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide  Advanced Clinical Care by Medical Officers",
                            IsActive = false,
                            Name = "Provide Advanced Clinical Care by Medical Officers"
                        },
                        new
                        {
                            Id = 144,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support facilities to reach HAST program",
                            IsActive = false,
                            Name = "Support facilities to reach HAST program"
                        },
                        new
                        {
                            Id = 145,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide NIMART mentoring support",
                            IsActive = false,
                            Name = "Provide NIMART mentoring support"
                        },
                        new
                        {
                            Id = 146,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Training on clinical guideline ",
                            IsActive = false,
                            Name = "Training on clinical guideline "
                        },
                        new
                        {
                            Id = 147,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support Facilities in sustained improvement of the HAST core program indicators ( ICT,SDI, TLD, TPT, Decanting) through regular update and review of Facility Improvement Plans",
                            IsActive = false,
                            Name = "Support with improvement of the HAST core programs"
                        },
                        new
                        {
                            Id = 148,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support Facilities with Weekly tracking and Recall of Waiting on ART to improve linkage to care and number of ART initiations.",
                            IsActive = false,
                            Name = "Support with tracking & Recall of Waiting on ART"
                        },
                        new
                        {
                            Id = 149,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Improve retention in care at supported Facilitied through daily and weekly tracking of missed appointments and uLTFU",
                            IsActive = false,
                            Name = "Improve retention in care at supported Facilities"
                        },
                        new
                        {
                            Id = 150,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Facilitate Weekly Data reviews as supported Siyenza Facilities to identify ART initiation and retention gaps.",
                            IsActive = false,
                            Name = "Facilitate Weekly Data reviews"
                        },
                        new
                        {
                            Id = 151,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Facilitate linkage to care",
                            IsActive = false,
                            Name = "Facilitate linkage to care"
                        },
                        new
                        {
                            Id = 152,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Offering targeted HIV testing",
                            IsActive = false,
                            Name = "Offering targeted HIV testing"
                        },
                        new
                        {
                            Id = 153,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide counsellors",
                            IsActive = false,
                            Name = "Provide counsellors"
                        },
                        new
                        {
                            Id = 154,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Targeted HIV testing at ANC, TB,PNC,FP,STI points",
                            IsActive = false,
                            Name = "Targeted HIV testing at ANC, TB,PNC,FP,STI points"
                        },
                        new
                        {
                            Id = 155,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Conduct HIV and TB screening as part of infacility health screening",
                            IsActive = false,
                            Name = "Conduct HIV and TB screening"
                        },
                        new
                        {
                            Id = 156,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Facilitate Index Case Finding of sexual partners and biological children for all HIV positive clients through facility and community",
                            IsActive = false,
                            Name = "Facilitate Index Case Finding of sexual partners"
                        },
                        new
                        {
                            Id = 157,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support the Provincial Department of Health's roll out of HIV Self Screening and Index Case Testing ",
                            IsActive = false,
                            Name = "Support DoH's roll out of HIV Self Screening"
                        },
                        new
                        {
                            Id = 158,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support RTCQI training to ALL counsellors and nurses",
                            IsActive = false,
                            Name = "Support RTCQI training to counsellors and nurses"
                        },
                        new
                        {
                            Id = 159,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Conduct 6 monthly internal SPI-RT assessments",
                            IsActive = false,
                            Name = "Conduct 6 monthly internal SPI-RT assessments"
                        },
                        new
                        {
                            Id = 160,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support weekly independent QC and 6 monthly proficiency testing",
                            IsActive = false,
                            Name = "Support weekly QC and 6 monthly testing"
                        },
                        new
                        {
                            Id = 161,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Digitizing and analysing of HTS capturing on current data systems",
                            IsActive = false,
                            Name = "Digitizing and analysing of HTS capturing"
                        },
                        new
                        {
                            Id = 162,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Identify with Province and City skills shortage, M&E gaps for reporting and capturing and assist with temporary workforce relief",
                            IsActive = false,
                            Name = "Identify with Province and City skills shortage"
                        },
                        new
                        {
                            Id = 163,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide and distribute HTS support equipment to enable Counsellors and HTS Testers in testing functions ",
                            IsActive = false,
                            Name = "Provide and distribute HTS support equipment"
                        },
                        new
                        {
                            Id = 164,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide HTS in ER, triage settings in identified District hospitals.",
                            IsActive = false,
                            Name = "Provide HTS in ER, triage settings"
                        },
                        new
                        {
                            Id = 165,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide track and tracing for HIV positive clients in District hospitals for in-patients.",
                            IsActive = false,
                            Name = "Provide track and tracing for HIV positive clients"
                        },
                        new
                        {
                            Id = 166,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Strenghthen ICT support through NIMART nurse involvement",
                            IsActive = false,
                            Name = "Strenghthen ICT support"
                        },
                        new
                        {
                            Id = 167,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support Implementation and upscaling  of Run Charts as a Quality assurance and Quality improvement tool for HTS,HTS Pos and ICT",
                            IsActive = false,
                            Name = "Support Implementation and upscaling of Run Charts"
                        },
                        new
                        {
                            Id = 168,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Violence screening",
                            IsActive = false,
                            Name = "Violence screening"
                        },
                        new
                        {
                            Id = 169,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Men Workplace Testing HIV Testing ",
                            IsActive = false,
                            Name = "Men Workplace Testing HIV Testing "
                        },
                        new
                        {
                            Id = 170,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Finding Youth TVET Testing: In partnership with HEAIDS, Anova will continue testing at TVETs colleges in the Cape Metro. STI and TB screening will also be offered.",
                            IsActive = false,
                            Name = "Finding Youth TVET Testing"
                        },
                        new
                        {
                            Id = 171,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Targeting Male Dominated Community HIV  Testing",
                            IsActive = false,
                            Name = "Targeting Male Dominated Community HIV  Testing"
                        },
                        new
                        {
                            Id = 172,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Defaulter Tracking ICT ",
                            IsActive = false,
                            Name = "Defaulter Tracking ICT "
                        },
                        new
                        {
                            Id = 173,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Targeted Wellness Outreaches in Partnership with other community NPOs",
                            IsActive = false,
                            Name = "Targeted Wellness Outreaches"
                        },
                        new
                        {
                            Id = 174,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Following all pregnant women in high burden areas",
                            IsActive = false,
                            Name = "Following all pregnant women in high burden areas"
                        },
                        new
                        {
                            Id = 175,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "BCI - Behaviour Change Interventions",
                            IsActive = false,
                            Name = "BCI - Behaviour Change Interventions"
                        },
                        new
                        {
                            Id = 176,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Condom distribution",
                            IsActive = false,
                            Name = "Condom distribution"
                        },
                        new
                        {
                            Id = 177,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Needle and syringe distribution",
                            IsActive = false,
                            Name = "Needle and syringe distribution"
                        },
                        new
                        {
                            Id = 178,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Opioid Substitution Treatment (OST)",
                            IsActive = false,
                            Name = "Opioid Substitution Treatment (OST)"
                        },
                        new
                        {
                            Id = 179,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "STI screening",
                            IsActive = false,
                            Name = "STI screening"
                        },
                        new
                        {
                            Id = 180,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "TB screening",
                            IsActive = false,
                            Name = "TB screening"
                        },
                        new
                        {
                            Id = 181,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Family Planning",
                            IsActive = false,
                            Name = "Family Planning"
                        },
                        new
                        {
                            Id = 182,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "ART",
                            IsActive = false,
                            Name = "ART"
                        },
                        new
                        {
                            Id = 183,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Pregnancy testing",
                            IsActive = false,
                            Name = "Pregnancy testing"
                        },
                        new
                        {
                            Id = 184,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "non communable disease screening",
                            IsActive = false,
                            Name = "non communable disease screening"
                        },
                        new
                        {
                            Id = 185,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Referrals to DOH/COCT facilities",
                            IsActive = false,
                            Name = "Referrals to DOH/COCT facilities"
                        },
                        new
                        {
                            Id = 186,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "TB testing",
                            IsActive = false,
                            Name = "TB testing"
                        },
                        new
                        {
                            Id = 187,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Human Rights violations screening",
                            IsActive = false,
                            Name = "Human Rights violations screening"
                        },
                        new
                        {
                            Id = 188,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Overdose management / awareness",
                            IsActive = false,
                            Name = "Overdose management / awareness"
                        },
                        new
                        {
                            Id = 189,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Hepatitis C sceening, diagnosis and treatment ",
                            IsActive = false,
                            Name = "Hepatitis C sceening, diagnosis and treatment "
                        },
                        new
                        {
                            Id = 190,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Hepatitis B testing and vaccination",
                            IsActive = false,
                            Name = "Hepatitis B testing and vaccination"
                        },
                        new
                        {
                            Id = 191,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Sensitisation training",
                            IsActive = false,
                            Name = "Sensitisation training"
                        },
                        new
                        {
                            Id = 192,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Health: HIV Testing",
                            IsActive = false,
                            Name = "Health: HIV Testing"
                        },
                        new
                        {
                            Id = 193,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Health: HIV Self Screening",
                            IsActive = false,
                            Name = "Health: HIV Self Screening"
                        },
                        new
                        {
                            Id = 194,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Health: Male/Female Condom and Lube Distribution",
                            IsActive = false,
                            Name = "Health: Male/Female Condom and Lube Distribution"
                        },
                        new
                        {
                            Id = 195,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Health: STI screening and Investigation",
                            IsActive = false,
                            Name = "Health: STI screening and Investigation"
                        },
                        new
                        {
                            Id = 196,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Health: TB Screening and TB Sputum testing",
                            IsActive = false,
                            Name = "Health: TB Screening and TB Sputum testing"
                        },
                        new
                        {
                            Id = 197,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Health: Pregnancy Testing",
                            IsActive = false,
                            Name = "Health: Pregnancy Testing"
                        },
                        new
                        {
                            Id = 198,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Health: SRH",
                            IsActive = false,
                            Name = "Health: SRH"
                        },
                        new
                        {
                            Id = 199,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Health: ART",
                            IsActive = false,
                            Name = "Health: ART"
                        },
                        new
                        {
                            Id = 200,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Health: PrEP related lab costs",
                            IsActive = false,
                            Name = "Health: PrEP related lab costs"
                        },
                        new
                        {
                            Id = 201,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Health: Emergency Contraception",
                            IsActive = false,
                            Name = "Health: Emergency Contraception"
                        },
                        new
                        {
                            Id = 202,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Behaviour Change: Peer Education",
                            IsActive = false,
                            Name = "Behaviour Change: Peer Education"
                        },
                        new
                        {
                            Id = 203,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Behaviour Change:Comprehensive Sexuality Education",
                            IsActive = false,
                            Name = "Behaviour Change:Comprehensive Sexuality Education"
                        },
                        new
                        {
                            Id = 204,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Behaviour Change: Individual Psycho Social Support",
                            IsActive = false,
                            Name = "Behaviour Change: Individual Psycho Social Support"
                        },
                        new
                        {
                            Id = 205,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Behaviour Change: PrEP Demand Creation",
                            IsActive = false,
                            Name = "Behaviour Change: PrEP Demand Creation"
                        },
                        new
                        {
                            Id = 206,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Behaviour Change: Teen Parenting/Parenting",
                            IsActive = false,
                            Name = "Behaviour Change: Teen Parenting/Parenting"
                        },
                        new
                        {
                            Id = 207,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Behaviour Change: Teen & Caregiver Comunication",
                            IsActive = false,
                            Name = "Behaviour Change: Teen & Caregiver Comunication"
                        },
                        new
                        {
                            Id = 208,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Behaviour Change: SRH Knowledge and behaviour",
                            IsActive = false,
                            Name = "Behaviour Change: SRH Knowledge and behaviour"
                        },
                        new
                        {
                            Id = 209,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Behaviour Change: GBV Prevention",
                            IsActive = false,
                            Name = "Behaviour Change: GBV Prevention"
                        },
                        new
                        {
                            Id = 210,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Behaviour Change: Adherence Support (Mental Health Support)",
                            IsActive = false,
                            Name = "Behaviour Change: Adherence Support"
                        },
                        new
                        {
                            Id = 211,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Behaviour Change: Physical activity",
                            IsActive = false,
                            Name = "Behaviour Change: Physical activity"
                        },
                        new
                        {
                            Id = 212,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Structural: Support to Access Grants",
                            IsActive = false,
                            Name = "Structural: Support to Access Grants"
                        },
                        new
                        {
                            Id = 213,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Structural: Dignity Packs",
                            IsActive = false,
                            Name = "Structural: Dignity Packs"
                        },
                        new
                        {
                            Id = 214,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Structural: Academic Support and Career Guidance",
                            IsActive = false,
                            Name = "Structural: Academic Support and Career Guidance"
                        },
                        new
                        {
                            Id = 215,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Structural: Return to School Support",
                            IsActive = false,
                            Name = "Structural: Return to School Support"
                        },
                        new
                        {
                            Id = 216,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Structural: ECD Vouchers",
                            IsActive = false,
                            Name = "Structural: ECD Vouchers"
                        },
                        new
                        {
                            Id = 217,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Structural: GBV Awareness and Self-Defence",
                            IsActive = false,
                            Name = "Structural: GBV Awareness and Self-Defence"
                        },
                        new
                        {
                            Id = 218,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Structural: Economic Strengthening",
                            IsActive = false,
                            Name = "Structural: Economic Strengthening"
                        },
                        new
                        {
                            Id = 219,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Trauma containment",
                            IsActive = false,
                            Name = "Trauma containment"
                        },
                        new
                        {
                            Id = 220,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Risk assessment & referral; ",
                            IsActive = false,
                            Name = "Risk assessment & referral; "
                        },
                        new
                        {
                            Id = 221,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Follow-up psychosocial support",
                            IsActive = false,
                            Name = "Follow-up psychosocial support"
                        },
                        new
                        {
                            Id = 222,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "PEP adherence suppor",
                            IsActive = false,
                            Name = "PEP adherence suppor"
                        },
                        new
                        {
                            Id = 223,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Role out of HIV SS",
                            IsActive = false,
                            Name = "Role out of HIV SS"
                        },
                        new
                        {
                            Id = 224,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Referral for other social support services",
                            IsActive = false,
                            Name = "Referral for other social support services"
                        },
                        new
                        {
                            Id = 225,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Court preparation & support",
                            IsActive = false,
                            Name = "Court preparation & support"
                        },
                        new
                        {
                            Id = 226,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "GBV awareness & community outreach",
                            IsActive = false,
                            Name = "GBV awareness & community outreach"
                        },
                        new
                        {
                            Id = 227,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "PrEP Demand Creation and referrals to PrEP Clinics",
                            IsActive = false,
                            Name = "PrEP Demand Creation and referrals to PrEP Clinics"
                        },
                        new
                        {
                            Id = 228,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Delivery of Chronic Medication",
                            IsActive = false,
                            Name = "Delivery of Chronic Medication"
                        },
                        new
                        {
                            Id = 229,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "COVID response",
                            IsActive = false,
                            Name = "COVID response"
                        },
                        new
                        {
                            Id = 230,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "COVID testing",
                            IsActive = false,
                            Name = "COVID testing"
                        },
                        new
                        {
                            Id = 231,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "COVID vaccination",
                            IsActive = false,
                            Name = "COVID vaccination"
                        },
                        new
                        {
                            Id = 232,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "COVID vaccine demand creation",
                            IsActive = false,
                            Name = "COVID vaccine demand creation"
                        },
                        new
                        {
                            Id = 233,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "COVID tracking and tracing",
                            IsActive = false,
                            Name = "COVID tracking and tracing"
                        },
                        new
                        {
                            Id = 234,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Establish peer groups for Mental Health",
                            IsActive = false,
                            Name = "Establish peer groups for Mental Health"
                        },
                        new
                        {
                            Id = 235,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Patient transport support",
                            IsActive = false,
                            Name = "Patient transport support"
                        },
                        new
                        {
                            Id = 236,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Telehealth support",
                            IsActive = false,
                            Name = "Telehealth support"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Lookup.FacilityList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("FacilityClassId")
                        .HasColumnType("int");

                    b.Property<int>("FacilitySubDistrictId")
                        .HasColumnType("int");

                    b.Property<int>("FacilityTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilityClassId");

                    b.HasIndex("FacilitySubDistrictId");

                    b.HasIndex("FacilityTypeId");

                    b.ToTable("FacilityList", "lookup");
                });

            modelBuilder.Entity("NPOMS.Domain.Lookup.ResourceList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ResourceTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ResourceList", "lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Project Manager",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Project Coordinator",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Professional Nurse",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Staff Nurse",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Register Nurse",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Nursing Assistant",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Medical Doctor",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Research",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Facilitator",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Councillor",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Coordinator",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Social Mobilizer",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Programme Manager",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Support Officer",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 15,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Field Worker",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 16,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "HR Manager",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 17,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Finance Manager",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 18,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Youth Care Worker",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 19,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mentor",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 20,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mentor Supervisor",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 21,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Site Administrator",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 22,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Senior Mentor",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 23,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Community Health Worker",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 24,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pharmacy Manager",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 25,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Area Manager",
                            ResourceTypeId = 1
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.ActivityFacilityList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("FacilityListId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("FacilityListId");

                    b.ToTable("Activities_FacilityLists", "mapping");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.ActivitySubProgramme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("SubProgrammeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("SubProgrammeId");

                    b.ToTable("Activities_SubProgrammes", "mapping");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.NpoProfileFacilityList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FacilityListId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("NpoProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilityListId");

                    b.HasIndex("NpoProfileId");

                    b.ToTable("NpoProfiles_FacilityLists", "mapping");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.ObjectiveProgramme", b =>
                {
                    b.Property<int>("ObjectiveId")
                        .HasColumnType("int");

                    b.Property<int>("ProgrammeId")
                        .HasColumnType("int");

                    b.Property<int>("SubProgrammeId")
                        .HasColumnType("int");

                    b.HasKey("ObjectiveId", "ProgrammeId", "SubProgrammeId");

                    b.HasIndex("ProgrammeId");

                    b.HasIndex("SubProgrammeId");

                    b.ToTable("Objectives_Programmes", "mapping");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.RolePermission", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("Roles_Permissions", "mapping");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            PermissionId = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 2
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 3
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 4
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 5
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 6
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 7
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 8
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 9
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 10
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 11
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 12
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 13
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 14
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 15
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 16
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 17
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 18
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 19
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 20
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 21
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 22
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 23
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 24
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 25
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 26
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 27
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 28
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 29
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 30
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 31
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 32
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 33
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 34
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 35
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 36
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 37
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 38
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 39
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 40
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 41
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 42
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 43
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 44
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 45
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 46
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 47
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 48
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 49
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 50
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 51
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 52
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 53
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 54
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 55
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 56
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 57
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 58
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 59
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 60
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 61
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 62
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 63
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 64
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 65
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.UserDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UserId");

                    b.ToTable("Users_Departments", "mapping");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 1,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.UserNpo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("NpoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccessStatusId");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("NpoId");

                    b.HasIndex("UpdatedUserId");

                    b.HasIndex("UserId");

                    b.ToTable("Users_Npos", "mapping");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("Users_Roles", "mapping");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = false,
                            RoleId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsActive = false,
                            RoleId = 1,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Core.DocumentStore", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.DocumentType", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeId");

                    b.Navigation("DocumentType");
                });

            modelBuilder.Entity("NPOMS.Domain.Core.EmailQueue", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.EmailTemplate", "EmailTemplate")
                        .WithMany()
                        .HasForeignKey("EmailTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailTemplate");
                });

            modelBuilder.Entity("NPOMS.Domain.Core.EmailTemplate", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.EmailAccount", "EmailAccount")
                        .WithMany()
                        .HasForeignKey("EmailAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailAccount");
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.FacilitySubDistrict", b =>
                {
                    b.HasOne("NPOMS.Domain.Dropdown.FacilityDistrict", "FacilityDistrict")
                        .WithMany()
                        .HasForeignKey("FacilityDistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FacilityDistrict");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Activity", b =>
                {
                    b.HasOne("NPOMS.Domain.Lookup.ActivityList", "ActivityList")
                        .WithMany()
                        .HasForeignKey("ActivityListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.ActivityType", "ActivityType")
                        .WithMany()
                        .HasForeignKey("ActivityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Entities.Objective", "Objective")
                        .WithMany()
                        .HasForeignKey("ObjectiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivityList");

                    b.Navigation("ActivityType");

                    b.Navigation("Objective");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.AddressInformation", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.NpoProfile", null)
                        .WithOne("AddressInformation")
                        .HasForeignKey("NPOMS.Domain.Entities.AddressInformation", "NpoProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Application", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.ApplicationPeriod", "ApplicationPeriod")
                        .WithMany()
                        .HasForeignKey("ApplicationPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Entities.Npo", "Npo")
                        .WithMany()
                        .HasForeignKey("NpoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Entities.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationPeriod");

                    b.Navigation("Npo");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ApplicationApproval", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedUser");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ApplicationAudit", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Entities.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedUser");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ApplicationComment", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedUser");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ApplicationPeriod", b =>
                {
                    b.HasOne("NPOMS.Domain.Dropdown.ApplicationType", "ApplicationType")
                        .WithMany()
                        .HasForeignKey("ApplicationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Core.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Core.FinancialYear", "FinancialYear")
                        .WithMany()
                        .HasForeignKey("FinancialYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.Programme", "Programme")
                        .WithMany()
                        .HasForeignKey("ProgrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.SubProgramme", "SubProgramme")
                        .WithMany()
                        .HasForeignKey("SubProgrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationType");

                    b.Navigation("Department");

                    b.Navigation("FinancialYear");

                    b.Navigation("Programme");

                    b.Navigation("SubProgramme");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ContactInformation", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.Npo", null)
                        .WithMany("ContactInformation")
                        .HasForeignKey("NpoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.Title", "Title")
                        .WithMany()
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Npo", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.AccessStatus", "ApprovalStatus")
                        .WithMany()
                        .HasForeignKey("ApprovalStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Core.User", "ApprovalUser")
                        .WithMany()
                        .HasForeignKey("ApprovalUserId");

                    b.HasOne("NPOMS.Domain.Core.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.OrganisationType", "OrganisationType")
                        .WithMany()
                        .HasForeignKey("OrganisationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovalStatus");

                    b.Navigation("ApprovalUser");

                    b.Navigation("CreatedUser");

                    b.Navigation("OrganisationType");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.NpoProfile", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.Npo", "Npo")
                        .WithMany()
                        .HasForeignKey("NpoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Npo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Objective", b =>
                {
                    b.HasOne("NPOMS.Domain.Dropdown.RecipientType", "RecipientType")
                        .WithMany()
                        .HasForeignKey("RecipientTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecipientType");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Resource", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.AllocationType", "AllocationType")
                        .WithMany()
                        .HasForeignKey("AllocationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.ProvisionType", "ProvisionType")
                        .WithMany()
                        .HasForeignKey("ProvisionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Lookup.ResourceList", "ResourceList")
                        .WithMany()
                        .HasForeignKey("ResourceListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.ResourceType", "ResourceType")
                        .WithMany()
                        .HasForeignKey("ResourceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.ServiceType", "ServiceType")
                        .WithMany()
                        .HasForeignKey("ServiceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("AllocationType");

                    b.Navigation("ProvisionType");

                    b.Navigation("ResourceList");

                    b.Navigation("ResourceType");

                    b.Navigation("ServiceType");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ServicesRendered", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.NpoProfile", null)
                        .WithMany("ServicesRendered")
                        .HasForeignKey("NpoProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.SustainabilityPlan", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("NPOMS.Domain.Indicator.WorkplanActual", b =>
                {
                    b.HasOne("NPOMS.Domain.Dropdown.FrequencyPeriod", "FrequencyPeriod")
                        .WithMany()
                        .HasForeignKey("FrequencyPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FrequencyPeriod");
                });

            modelBuilder.Entity("NPOMS.Domain.Indicator.WorkplanComment", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedUser");
                });

            modelBuilder.Entity("NPOMS.Domain.Indicator.WorkplanTarget", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.FinancialYear", "FinancialYear")
                        .WithMany()
                        .HasForeignKey("FinancialYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.Frequency", "Frequency")
                        .WithMany()
                        .HasForeignKey("FrequencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinancialYear");

                    b.Navigation("Frequency");
                });

            modelBuilder.Entity("NPOMS.Domain.Lookup.FacilityList", b =>
                {
                    b.HasOne("NPOMS.Domain.Dropdown.FacilityClass", "FacilityClass")
                        .WithMany()
                        .HasForeignKey("FacilityClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.FacilitySubDistrict", "FacilitySubDistrict")
                        .WithMany()
                        .HasForeignKey("FacilitySubDistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.FacilityType", "FacilityType")
                        .WithMany()
                        .HasForeignKey("FacilityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FacilityClass");

                    b.Navigation("FacilitySubDistrict");

                    b.Navigation("FacilityType");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.ActivityFacilityList", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.Activity", null)
                        .WithMany("ActivityFacilityLists")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Lookup.FacilityList", "FacilityList")
                        .WithMany()
                        .HasForeignKey("FacilityListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FacilityList");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.ActivitySubProgramme", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.Activity", null)
                        .WithMany("ActivitySubProgrammes")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.SubProgramme", "SubProgramme")
                        .WithMany()
                        .HasForeignKey("SubProgrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubProgramme");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.NpoProfileFacilityList", b =>
                {
                    b.HasOne("NPOMS.Domain.Lookup.FacilityList", "FacilityList")
                        .WithMany()
                        .HasForeignKey("FacilityListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Entities.NpoProfile", null)
                        .WithMany("NpoProfileFacilityLists")
                        .HasForeignKey("NpoProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FacilityList");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.ObjectiveProgramme", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.Objective", null)
                        .WithMany("ObjectiveProgrammes")
                        .HasForeignKey("ObjectiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.Programme", "Programme")
                        .WithMany("SubProgrammes")
                        .HasForeignKey("ProgrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.SubProgramme", "SubProgramme")
                        .WithMany("Programmes")
                        .HasForeignKey("SubProgrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programme");

                    b.Navigation("SubProgramme");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.RolePermission", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.Permission", "Permission")
                        .WithMany("Roles")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Core.Role", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.UserDepartment", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Core.User", null)
                        .WithMany("Departments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.UserNpo", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.AccessStatus", "AccessStatus")
                        .WithMany()
                        .HasForeignKey("AccessStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Core.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Entities.Npo", "Npo")
                        .WithMany()
                        .HasForeignKey("NpoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Core.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserId");

                    b.HasOne("NPOMS.Domain.Core.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccessStatus");

                    b.Navigation("CreatedUser");

                    b.Navigation("Npo");

                    b.Navigation("UpdatedUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.UserRole", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Core.User", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("NPOMS.Domain.Core.Permission", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("NPOMS.Domain.Core.Role", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("NPOMS.Domain.Core.User", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.Programme", b =>
                {
                    b.Navigation("SubProgrammes");
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.SubProgramme", b =>
                {
                    b.Navigation("Programmes");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Activity", b =>
                {
                    b.Navigation("ActivityFacilityLists");

                    b.Navigation("ActivitySubProgrammes");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Npo", b =>
                {
                    b.Navigation("ContactInformation");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.NpoProfile", b =>
                {
                    b.Navigation("AddressInformation");

                    b.Navigation("NpoProfileFacilityLists");

                    b.Navigation("ServicesRendered");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Objective", b =>
                {
                    b.Navigation("ObjectiveProgrammes");
                });
#pragma warning restore 612, 618
        }
    }
}
