// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NPOMS.Repository;

#nullable disable

namespace NPOMS.Repository.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20231221100716_AddedQuarterlyPeriodTable")]
    partial class AddedQuarterlyPeriodTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NPOMS.Domain.Budget.DepartmentBudget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("FinancialYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DepartmentBudgets", "budget");
                });

            modelBuilder.Entity("NPOMS.Domain.Budget.DirectorateBudget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentBudgetId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("DirectorateId")
                        .HasColumnType("int");

                    b.Property<int>("FinancialYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DirectorateBudgets", "budget");
                });

            modelBuilder.Entity("NPOMS.Domain.Budget.ProgrammeBudget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("DirectorateBudgetId")
                        .HasColumnType("int");

                    b.Property<int>("FinancialYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProgrammeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProgrammeBudgets", "budget");
                });

            modelBuilder.Entity("NPOMS.Domain.Core.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Departments", "core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "ALL",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = true,
                            Name = "All Departments"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "DEDAT",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Economic Development and Tourism"
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "DTPW",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Transport and Public Works"
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "WCED",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Education"
                        },
                        new
                        {
                            Id = 5,
                            Abbreviation = "DotP",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Premier"
                        },
                        new
                        {
                            Id = 6,
                            Abbreviation = "PT",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Provincial Treasury"
                        },
                        new
                        {
                            Id = 7,
                            Abbreviation = "DSD",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Social Development"
                        },
                        new
                        {
                            Id = 8,
                            Abbreviation = "DoA",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Agriculture"
                        },
                        new
                        {
                            Id = 9,
                            Abbreviation = "DCS",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Community Safety"
                        },
                        new
                        {
                            Id = 10,
                            Abbreviation = "DCAS",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Cultural Affairs and Sport"
                        },
                        new
                        {
                            Id = 11,
                            Abbreviation = "DoH",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = true,
                            Name = "Health"
                        },
                        new
                        {
                            Id = 12,
                            Abbreviation = "DHS",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Human Settlements"
                        },
                        new
                        {
                            Id = 13,
                            Abbreviation = "DLG",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Local Government"
                        },
                        new
                        {
                            Id = 14,
                            Abbreviation = "WCPP",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Provincial Parliament"
                        },
                        new
                        {
                            Id = 15,
                            Abbreviation = "DEA&DP",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Environmental Affairs and Development Planning"
                        },
                        new
                        {
                            Id = 16,
                            Abbreviation = "NONE",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = true,
                            Name = "None"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Core.DocumentStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Entity")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<int>("EntityTypeId")
                        .HasColumnType("int");

                    b.Property<string>("FileSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RefNo")
                        .IsRequired()
                        .HasColumnType("char(15)");

                    b.Property<string>("ResourceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocumentTypeId");

                    b.ToTable("DocumentStores", "core");
                });

            modelBuilder.Entity("NPOMS.Domain.Core.DocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsCompulsory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DocumentTypes", "core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            IsCompulsory = false,
                            Location = "Workplan",
                            Name = "SLA"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            IsCompulsory = false,
                            Location = "Workplan",
                            Name = "Signed SLA"
                        },
                        new
                        {
                            Id = 20,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Signed Declaration of Interest",
                            IsActive = true,
                            IsCompulsory = false,
                            Location = "FundApp",
                            Name = "Signed Declaration of Interest"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "NPO Registration Certificate (copy)",
                            IsActive = true,
                            IsCompulsory = false,
                            Location = "FundApp",
                            Name = "NPO Reg Cert"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Organisation Constitution (most recent copy)",
                            IsActive = true,
                            IsCompulsory = false,
                            Location = "FundApp",
                            Name = "Constitution"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Statutory Registration Certificates (copies of all applicable)",
                            IsActive = true,
                            IsCompulsory = false,
                            Location = "FundApp",
                            Name = "Supporting"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Bank details confirmation letter (New applicants only)",
                            IsActive = true,
                            IsCompulsory = false,
                            Location = "FundApp",
                            Name = "Bank Letter"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "A copy of the Organisations’ most recent",
                            IsActive = true,
                            IsCompulsory = false,
                            Location = "FundApp",
                            Name = "Audited Annual Financial Statement"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "A copy of the Organisations’ most recent Certified Financial Statements by a registered accountant, if income is less than R600 000.00 per annum",
                            IsActive = true,
                            IsCompulsory = false,
                            Location = "FundApp",
                            Name = "Certified Financial Statement"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Written assurance in terms of Section 38 of the PFMA",
                            IsActive = true,
                            IsCompulsory = false,
                            Location = "FundApp",
                            Name = "PFMA"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Organisations last 3 month’s Bank Statements \r\n\r\n(Only applicable for organisations not funded in 2023/24 applying for less than R600 000.00 funding) ",
                            IsActive = true,
                            IsCompulsory = false,
                            Location = "FundApp",
                            Name = "Bank Statements"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "BAS Entity Form (NPOs funded in 2023/24 only)",
                            IsActive = true,
                            IsCompulsory = false,
                            Location = "FundApp",
                            Name = "BAS Entity Form"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Application Declaration",
                            IsActive = true,
                            IsCompulsory = false,
                            Location = "FundApp",
                            Name = "Application Declaration"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Schedule A: Enrolment Form",
                            IsActive = true,
                            IsCompulsory = false,
                            Location = "FundApp",
                            Name = "Enrolment Form"
                        },
                        new
                        {
                            Id = 21,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "NPO Supporting Documents",
                            IsActive = true,
                            IsCompulsory = false,
                            Location = "QuickCapture",
                            Name = "NPO Supporting Documents"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Core.EmailAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("EnableSSL")
                        .HasColumnType("bit");

                    b.Property<string>("FromDisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FromEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("EmailAccounts", "core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "default account",
                            EnableSSL = false,
                            FromDisplayName = "NPO Management System",
                            FromEmail = "no-reply@westerncape.gov.za",
                            Host = "https://wa-taps-smtp-nonprod-zan.azurewebsites.net/api/user/EmailSend",
                            Port = 25
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Core.EmailQueue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmailTemplateId")
                        .HasColumnType("int");

                    b.Property<string>("FromEmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FromEmailName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RecipientEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RecipientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("SentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EmailTemplateId");

                    b.ToTable("EmailQueues", "core");
                });

            modelBuilder.Entity("NPOMS.Domain.Core.EmailTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("EmailAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EmailAccountId");

                    b.ToTable("EmailTemplates", "core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "<p>Dear {ToUserFullName},</p><p>Access to <span style=\"font-weight: bold;\">{NpoName}</span> has been sent to be reviewed.</p><p>Please <a href=\"{url}\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "NewAccessRequest",
                            Subject = "Access Request Created"
                        },
                        new
                        {
                            Id = 2,
                            Body = "<p>Dear {ToUserFullName},</p><p>Please review access for <span style=\"font-weight: bold;\">{UserAccessFullName}</span> to the following Organisation: <span style=\"font-weight: bold;\">{NpoName}</span>.</p><p>Please <a href=\"{url}/#/access-review\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "AccessRequestPending",
                            Subject = "Access Request Submitted"
                        },
                        new
                        {
                            Id = 3,
                            Body = "<p>Dear {ToUserFullName},</p><p>Access to <span style=\"font-weight: bold;\">{NpoName}</span> has been approved.</p><p>Please <a href=\"{url}\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "AccessRequestApproved",
                            Subject = "Access Request Approved"
                        },
                        new
                        {
                            Id = 4,
                            Body = "<p>Dear {ToUserFullName},</p><p>Access to <span style=\"font-weight: bold;\">{NpoName}</span> has been rejected.</p><p>Please <a href=\"{url}\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "AccessRequestRejected",
                            Subject = "Access Request Rejected"
                        },
                        new
                        {
                            Id = 5,
                            Body = "<p>Dear {ToUserFullName},</p><p>The application for <span style=\"font-weight: bold;\">{NPO}</span> has been sent to be reviewed. The Reference Number is <span style=\"font-weight: bold;\">{ApplicationRefNo}</span>.</p><p>Please <a href=\"{url}/#/applications\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "NewApplication",
                            Subject = "Application Submitted - {NPO}"
                        },
                        new
                        {
                            Id = 6,
                            Body = "<p>Dear {ToUserFullName},</p><p>The application with Reference Number <span style=\"font-weight: bold;\">{ApplicationRefNo}</span> has been submitted for you to review.</p><p>Please <a href=\"{url}/#/applications\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "StatusChangedPendingReview",
                            Subject = "Application Pending Review - {NPO}"
                        },
                        new
                        {
                            Id = 7,
                            Body = "<p>Dear {ToUserFullName},</p><p>There are changes required to the application with Reference Number <span style=\"font-weight: bold;\">{ApplicationRefNo}</span>.</p><p>Please <a href=\"{url}/#/applications\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "StatusChangedAmendmentsRequired",
                            Subject = "Amendments Required - {NPO}"
                        },
                        new
                        {
                            Id = 8,
                            Body = "<p>Dear {ToUserFullName},</p><p>The application with Reference Number <span style=\"font-weight: bold;\">{ApplicationRefNo}</span> has been sent for you to approve.</p><p>Please <a href=\"{url}/#/applications\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "StatusChangedPendingApproval",
                            Subject = "Application Pending Approval - {NPO}"
                        },
                        new
                        {
                            Id = 9,
                            Body = "<p>Dear {ToUserFullName},</p><p>The application with Reference Number <span style=\"font-weight: bold;\">{ApplicationRefNo}</span> has been rejected.</p><p>Please <a href=\"{url}/#/applications\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "StatusChangedRejected",
                            Subject = "Application Rejected - {NPO}"
                        },
                        new
                        {
                            Id = 10,
                            Body = "<p>Dear {ToUserFullName},</p><p>The application with Reference Number <span style=\"font-weight: bold;\">{ApplicationRefNo}</span> has been approved.</p><p>Please upload the SLA document.</p><p>Please <a href=\"{url}/#/applications\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "StatusChangedPendingSLA",
                            Subject = "Application Pending SLA - {NPO}"
                        },
                        new
                        {
                            Id = 11,
                            Body = "<p>Dear {ToUserFullName},</p><p>The application with Reference Number <span style=\"font-weight: bold;\">{ApplicationRefNo}</span> has been approved.</p><p>Please download the SLA document that requires your signature and upload the signed SLA document.</p><p>Please <a href=\"{url}/#/applications\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "StatusChangedPendingSignedSLA",
                            Subject = "Application Pending Signed SLA - {NPO}"
                        },
                        new
                        {
                            Id = 12,
                            Body = "<p>Dear {ToUserFullName},</p><p>The signed SLA document has been uploaded for application with Reference Number <span style=\"font-weight: bold;\">{ApplicationRefNo}</span>.</p><p>Please <a href=\"{url}/#/applications\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "StatusChangedAcceptedSLA",
                            Subject = "Application Accepted SLA - {NPO}"
                        },
                        new
                        {
                            Id = 13,
                            Body = "<p>Dear {ToUserFullName},</p><p>Please review the comments regarding the SLA document for application with Reference Number <span style=\"font-weight: bold;\">{ApplicationRefNo}</span>.</p><p>Please <a href=\"{url}/#/applications\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "StatusChangedDeptComments",
                            Subject = "Review SLA Comments by Department - {NPO}"
                        },
                        new
                        {
                            Id = 14,
                            Body = "<p>Dear {ToUserFullName},</p><p>Please review the comments regarding the SLA document for application with Reference Number <span style=\"font-weight: bold;\">{ApplicationRefNo}</span>.</p><p>Please <a href=\"{url}/#/applications\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "StatusChangedOrgComments",
                            Subject = "Review SLA Comments by Organisation - {NPO}"
                        },
                        new
                        {
                            Id = 15,
                            Body = "<p>Dear {ToUserFullName},</p><p>Organisation Profile for <span style=\"font-weight: bold;\">{NpoName}</span> has been updated and sent to be reviewed.</p><p>Please <a href=\"{url}\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "NewOrganisationApproval",
                            Subject = "Organisation Profile Updated - {NpoName}"
                        },
                        new
                        {
                            Id = 16,
                            Body = "<p>Dear {ToUserFullName},</p><p>Please review the following Organisation: <span style=\"font-weight: bold;\">{NpoName}</span>.</p><p>Please <a href=\"{url}/#/npo-approval\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "PendingOrganisationApproval",
                            Subject = "Pending Organisation Approval - {NpoName}"
                        },
                        new
                        {
                            Id = 17,
                            Body = "<p>Dear {ToUserFullName},</p><p>The following Organisation: <span style=\"font-weight: bold;\">{NpoName}</span> has been approved.</p><p>Please <a href=\"{url}\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "ApprovedOrganisationApproval",
                            Subject = "Organisation Approved - {NpoName}"
                        },
                        new
                        {
                            Id = 18,
                            Body = "<p>Dear {ToUserFullName},</p><p>The following Organisation: <span style=\"font-weight: bold;\">{NpoName}</span> has been rejected.</p><p>Please <a href=\"{url}\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "RejectedOrganisationApproval",
                            Subject = "Organisation Rejected - {NpoName}"
                        },
                        new
                        {
                            Id = 19,
                            Body = "<p>Dear {ToUserFullName},</p><p>The indicator actuals for application with Reference Number <span style=\"font-weight: bold;\">{ApplicationRefNo}</span> has been updated with a status of <span style=\"font-weight: bold;\">{status}</span>.</p><p>The financial year and month is <span style=\"font-weight: bold;\">{financialYear}</span> and <span style=\"font-weight: bold;\">{frequencyPeriod}</span> respectively.</p><p>Please <a href=\"{url}/#/workplan-indicator/manage/{npoId}\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "WorkplanActualStatusChanged",
                            Subject = "Indicator Actuals {status} - {NPO}"
                        },
                        new
                        {
                            Id = 20,
                            Body = "<p>Dear {ToUserFullName},</p><p>The indicator actuals for application with Reference Number <span style=\"font-weight: bold;\">{ApplicationRefNo}</span> has been submitted for you to review.</p><p>The financial year and month is <span style=\"font-weight: bold;\">{financialYear}</span> and <span style=\"font-weight: bold;\">{frequencyPeriod}</span> respectively.</p><p>Please <a href=\"{url}/#/workplan-indicator/manage/{npoId}\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "WorkplanActualPendingReview",
                            Subject = "Indicator Actuals Pending Review - {NPO}"
                        },
                        new
                        {
                            Id = 21,
                            Body = "<p>Dear {ToUserFullName},</p><p>The indicator actuals for application with Reference Number <span style=\"font-weight: bold;\">{ApplicationRefNo}</span> has been sent for you to approve.</p><p>The financial year and month is <span style=\"font-weight: bold;\">{financialYear}</span> and <span style=\"font-weight: bold;\">{frequencyPeriod}</span> respectively.</p><p>Please <a href=\"{url}/#/workplan-indicator/manage/{npoId}\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "WorkplanActualPendingApproval",
                            Subject = "Indicator Actuals Pending Approval - {NPO}"
                        },
                        new
                        {
                            Id = 22,
                            Body = "<p>Dear {ToUserFullName},</p><p>The application with Reference Number <span style=\"font-weight: bold;\">{ApplicationRefNo}</span> has been sent to you to indicate your reviewer satisfaction.</p><p>Please ignore this email if you have indicated your reviewer satisfaction.</p><p>Please <a href=\"{url}/#/applications\">click here</a> to access the NPO MS application.</p><p>Kind Regards,<br>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "StatusChangedPendingReviewerSatisfaction",
                            Subject = "Application Pending Reviewer Satisfaction - {NPO}"
                        },
                        new
                        {
                            Id = 23,
                            Body = "<p>Dear {ToUserFullName}</p><p>The Scorecard for application with reference number</p><p><strong>{ApplicationRefNo}</strong> for financial year<strong> {financialYear} </strong> has been completed.</p><p>To view the scorecard summary please&nbsp;</p><p><a href=\"{url}/#/reviewScorecard/{npoId}(print:print/{npoId}/2)\">click here</a> to download a printable version.</p><p>Kind Regards,</p><p>NPO MS Team</p>",
                            EmailAccountId = 0,
                            IsActive = false,
                            Name = "ScorecardSummary",
                            Subject = "Scorecard Summary Review - {NPO}"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Core.EmbeddedReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(2000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ReportId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("WorkspaceId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmbeddedReports", "core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Dashboard",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Dashboard view everything on the system",
                            IsActive = false,
                            Name = "Dashboard",
                            ReportId = "270ec198-88c7-4e9b-b429-b6b99ace164f",
                            WorkspaceId = "38cbb1ed-23d8-4c7d-830a-4f7a39086eca"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Core.EntityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EntityTypes", "core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Name = "Supporting Documents",
                            SystemName = "SupportingDocuments"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Name = "SLA",
                            SystemName = "SLA"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Name = "Workplan Actuals",
                            SystemName = "WorkplanActuals"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Core.FinancialYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FinancialYears", "core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            EndDate = new DateTime(2022, 3, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsActive = false,
                            Name = "2021/22",
                            StartDate = new DateTime(2021, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2021
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            EndDate = new DateTime(2023, 3, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsActive = false,
                            Name = "2022/23",
                            StartDate = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2022
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            EndDate = new DateTime(2024, 3, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsActive = false,
                            Name = "2023/24",
                            StartDate = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2023
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            EndDate = new DateTime(2025, 3, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsActive = false,
                            Name = "2024/25",
                            StartDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2024
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            EndDate = new DateTime(2026, 3, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsActive = false,
                            Name = "2025/26",
                            StartDate = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2025
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            EndDate = new DateTime(2027, 3, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsActive = false,
                            Name = "2026/27",
                            StartDate = new DateTime(2026, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2026
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            EndDate = new DateTime(2028, 3, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsActive = false,
                            Name = "2027/28",
                            StartDate = new DateTime(2027, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2027
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            EndDate = new DateTime(2029, 3, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsActive = false,
                            Name = "2028/29",
                            StartDate = new DateTime(2028, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2028
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Core.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Permissions", "core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "User Administration",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Add Users",
                            SystemName = "UA.AU"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "User Administration",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of Users",
                            SystemName = "UA.VU"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "User Administration",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Users",
                            SystemName = "UA.EU"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Utilities Management",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Add Utilities",
                            SystemName = "UM.AU"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Utilities Management",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of Utilities",
                            SystemName = "UM.VU"
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "Utilities Management",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Utilities",
                            SystemName = "UM.EU"
                        },
                        new
                        {
                            Id = 7,
                            CategoryName = "Permission Management",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of Permissions",
                            SystemName = "PM.VP"
                        },
                        new
                        {
                            Id = 8,
                            CategoryName = "Permission Management",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Permissions",
                            SystemName = "PM.EP"
                        },
                        new
                        {
                            Id = 9,
                            CategoryName = "Top Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Admin Menu",
                            SystemName = "TN.VAM"
                        },
                        new
                        {
                            Id = 10,
                            CategoryName = "Top Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Organisation Profile Menu",
                            SystemName = "TN.VPM"
                        },
                        new
                        {
                            Id = 11,
                            CategoryName = "Organisation Profile",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Add Organisation Profile",
                            SystemName = "NP.ANP"
                        },
                        new
                        {
                            Id = 12,
                            CategoryName = "Organisation Profile",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Organisation Profile",
                            SystemName = "NP.ENP"
                        },
                        new
                        {
                            Id = 13,
                            CategoryName = "Organisation Profile",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of Organisation Profiles",
                            SystemName = "NP.VNP"
                        },
                        new
                        {
                            Id = 14,
                            CategoryName = "Organisation Profile",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Show Organisation Profile Action Buttons",
                            SystemName = "NP.SPA"
                        },
                        new
                        {
                            Id = 15,
                            CategoryName = "User Administration",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Show User Administration Action Buttons",
                            SystemName = "UA.SUA"
                        },
                        new
                        {
                            Id = 16,
                            CategoryName = "Top Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Apply For Access Menu",
                            SystemName = "TN.VAAM"
                        },
                        new
                        {
                            Id = 17,
                            CategoryName = "Top Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Access Review Menu",
                            SystemName = "TN.VARM"
                        },
                        new
                        {
                            Id = 18,
                            CategoryName = "User Access Management",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Add User Requests - Apply for access",
                            SystemName = "UAM.AUR"
                        },
                        new
                        {
                            Id = 19,
                            CategoryName = "User Access Management",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit User Requests - Review access requests",
                            SystemName = "UAM.EUR"
                        },
                        new
                        {
                            Id = 20,
                            CategoryName = "User Access Management",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of User Requests",
                            SystemName = "UAM.VUR"
                        },
                        new
                        {
                            Id = 21,
                            CategoryName = "Top Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Organisations Menu",
                            SystemName = "TN.VNM"
                        },
                        new
                        {
                            Id = 22,
                            CategoryName = "Organisation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Add Organisation",
                            SystemName = "NPO.Add"
                        },
                        new
                        {
                            Id = 23,
                            CategoryName = "Organisation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Organisation",
                            SystemName = "NPO.Edit"
                        },
                        new
                        {
                            Id = 24,
                            CategoryName = "Organisation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of Organisations",
                            SystemName = "NPO.View"
                        },
                        new
                        {
                            Id = 25,
                            CategoryName = "Organisation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Show Organisation Action Buttons",
                            SystemName = "NPO.SNA"
                        },
                        new
                        {
                            Id = 26,
                            CategoryName = "Top Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Application Period (Programme Selection) Menu",
                            SystemName = "TN.VAPM"
                        },
                        new
                        {
                            Id = 27,
                            CategoryName = "Application Period (Programme Selection)",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Add Application Period (Programme Selection)",
                            SystemName = "AP.Add"
                        },
                        new
                        {
                            Id = 28,
                            CategoryName = "Application Period (Programme Selection)",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Application Period (Programme Selection)",
                            SystemName = "AP.Edit"
                        },
                        new
                        {
                            Id = 29,
                            CategoryName = "Application Period (Programme Selection)",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of Application Periods (Programme Selection)",
                            SystemName = "AP.View"
                        },
                        new
                        {
                            Id = 30,
                            CategoryName = "Application Period (Programme Selection)",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Show Application Period (Programme Selection) Action Buttons",
                            SystemName = "AP.SAPA"
                        },
                        new
                        {
                            Id = 31,
                            CategoryName = "Top Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Captured Applications Menu",
                            SystemName = "TN.VAppM"
                        },
                        new
                        {
                            Id = 32,
                            CategoryName = "Application",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Add Application",
                            SystemName = "App.Add"
                        },
                        new
                        {
                            Id = 33,
                            CategoryName = "Application",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Application",
                            SystemName = "App.Edit"
                        },
                        new
                        {
                            Id = 34,
                            CategoryName = "Application",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of Applications",
                            SystemName = "App.View"
                        },
                        new
                        {
                            Id = 35,
                            CategoryName = "Application",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Show Application Action Buttons",
                            SystemName = "App.SAA"
                        },
                        new
                        {
                            Id = 36,
                            CategoryName = "Top Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Organisation Approval Menu",
                            SystemName = "TN.VNA"
                        },
                        new
                        {
                            Id = 37,
                            CategoryName = "Organisation Approval Management",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Organisation Approval",
                            SystemName = "NAM.ENR"
                        },
                        new
                        {
                            Id = 38,
                            CategoryName = "Organisation Approval Management",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of Organisations for approval requests",
                            SystemName = "NAM.VNR"
                        },
                        new
                        {
                            Id = 39,
                            CategoryName = "Application",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Review Application",
                            SystemName = "App.Review"
                        },
                        new
                        {
                            Id = 40,
                            CategoryName = "Application",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Approve Application",
                            SystemName = "App.Approve"
                        },
                        new
                        {
                            Id = 41,
                            CategoryName = "Application",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Upload SLA Document",
                            SystemName = "App.Upload"
                        },
                        new
                        {
                            Id = 42,
                            CategoryName = "Application",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Accepted SLA Application",
                            SystemName = "App.VAA"
                        },
                        new
                        {
                            Id = 43,
                            CategoryName = "Utilities Management",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Show Utilities Action Buttons",
                            SystemName = "UM.SUA"
                        },
                        new
                        {
                            Id = 44,
                            CategoryName = "Top Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Dashboard Menu",
                            SystemName = "TN.VDM"
                        },
                        new
                        {
                            Id = 45,
                            CategoryName = "PowerBI Dashboard",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View PowerBI Dashboard",
                            SystemName = "PBI.VD"
                        },
                        new
                        {
                            Id = 46,
                            CategoryName = "Top Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Training Menu",
                            SystemName = "TN.VTM"
                        },
                        new
                        {
                            Id = 47,
                            CategoryName = "Training Material",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of Training Materials",
                            SystemName = "TM.VTM"
                        },
                        new
                        {
                            Id = 48,
                            CategoryName = "Budgets",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Add Department Budget",
                            SystemName = "Bud.Add"
                        },
                        new
                        {
                            Id = 49,
                            CategoryName = "Budgets",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Department Budget",
                            SystemName = "Bud.Edit"
                        },
                        new
                        {
                            Id = 50,
                            CategoryName = "Budgets",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of Department Budgets",
                            SystemName = "Bud.View"
                        },
                        new
                        {
                            Id = 51,
                            CategoryName = "Budgets",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Add Directorate Budget",
                            SystemName = "Bud.ADB"
                        },
                        new
                        {
                            Id = 52,
                            CategoryName = "Budgets",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Directorate Budget",
                            SystemName = "Bud.EDB"
                        },
                        new
                        {
                            Id = 53,
                            CategoryName = "Budgets",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of Directorate Budgets",
                            SystemName = "Bud.VDB"
                        },
                        new
                        {
                            Id = 54,
                            CategoryName = "Budgets",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Add Programme Budget",
                            SystemName = "Bud.APB"
                        },
                        new
                        {
                            Id = 55,
                            CategoryName = "Budgets",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Programme Budget",
                            SystemName = "Bud.EPB"
                        },
                        new
                        {
                            Id = 56,
                            CategoryName = "Budgets",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View List of Programme Budgets",
                            SystemName = "Bud.VPB"
                        },
                        new
                        {
                            Id = 57,
                            CategoryName = "Administration - Side Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Security Side Menu",
                            SystemName = "SN.Security"
                        },
                        new
                        {
                            Id = 58,
                            CategoryName = "Administration - Side Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Users Side Menu",
                            SystemName = "SN.Users"
                        },
                        new
                        {
                            Id = 59,
                            CategoryName = "Administration - Side Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Permissions Side Menu",
                            SystemName = "SN.Permissions"
                        },
                        new
                        {
                            Id = 60,
                            CategoryName = "Administration - Side Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Settings Side Menu",
                            SystemName = "SN.Settings"
                        },
                        new
                        {
                            Id = 61,
                            CategoryName = "Administration - Side Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Utilities Sub Menu",
                            SystemName = "SN.Utilities"
                        },
                        new
                        {
                            Id = 62,
                            CategoryName = "Administration - Side Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Budgets Sub Menu",
                            SystemName = "SN.Budgets"
                        },
                        new
                        {
                            Id = 63,
                            CategoryName = "Administration - Side Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Department Budget Sub Menu",
                            SystemName = "SN.DeptBudget"
                        },
                        new
                        {
                            Id = 64,
                            CategoryName = "Administration - Side Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Directorate Budget Sub Menu",
                            SystemName = "SN.DirectorateBudget"
                        },
                        new
                        {
                            Id = 65,
                            CategoryName = "Administration - Side Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Programme Budget Sub Menu",
                            SystemName = "SN.ProgBudget"
                        },
                        new
                        {
                            Id = 66,
                            CategoryName = "Top Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Funding Menu",
                            SystemName = "TN.VFM"
                        },
                        new
                        {
                            Id = 67,
                            CategoryName = "Funding",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Add NPO/Organisation Funding",
                            SystemName = "Fund.ANF"
                        },
                        new
                        {
                            Id = 68,
                            CategoryName = "Funding",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit NPO/Organisation Funding",
                            SystemName = "Fund.ENF"
                        },
                        new
                        {
                            Id = 69,
                            CategoryName = "Funding",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View NPO/Organisation Funding",
                            SystemName = "Fund.VNF"
                        },
                        new
                        {
                            Id = 70,
                            CategoryName = "Funding",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Delete NPO/Organisation Funding",
                            SystemName = "Fund.DNF"
                        },
                        new
                        {
                            Id = 71,
                            CategoryName = "Funding",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Payment Schedule",
                            SystemName = "Fund.VPS"
                        },
                        new
                        {
                            Id = 72,
                            CategoryName = "Funding",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Compliance Check",
                            SystemName = "Fund.CC"
                        },
                        new
                        {
                            Id = 73,
                            CategoryName = "Funding",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Show NPO/Organisation Funding Action Buttons",
                            SystemName = "Fund.SNFA"
                        },
                        new
                        {
                            Id = 74,
                            CategoryName = "Administration - Side Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Compliant Cycle Sub Menu",
                            SystemName = "SN.CompliantCycle"
                        },
                        new
                        {
                            Id = 75,
                            CategoryName = "Administration - Side Navigation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Payment Schedule Sub Menu",
                            SystemName = "SN.PaymentSchedule"
                        },
                        new
                        {
                            Id = 76,
                            CategoryName = "Compliant Cycle",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Add Compliant Cycle",
                            SystemName = "CC.Add"
                        },
                        new
                        {
                            Id = 77,
                            CategoryName = "Compliant Cycle",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Compliant Cycle",
                            SystemName = "CC.View"
                        },
                        new
                        {
                            Id = 78,
                            CategoryName = "Compliant Cycle",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Compliant Cycle",
                            SystemName = "CC.Edit"
                        },
                        new
                        {
                            Id = 79,
                            CategoryName = "Compliant Cycle",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Delete Compliant Cycle",
                            SystemName = "CC.Delete"
                        },
                        new
                        {
                            Id = 80,
                            CategoryName = "Payment Schedule",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Add Payment Schedule",
                            SystemName = "PS.Add"
                        },
                        new
                        {
                            Id = 81,
                            CategoryName = "Payment Schedule",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Payment Schedule",
                            SystemName = "PS.View"
                        },
                        new
                        {
                            Id = 82,
                            CategoryName = "Payment Schedule",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Payment Schedule",
                            SystemName = "PS.Edit"
                        },
                        new
                        {
                            Id = 83,
                            CategoryName = "Payment Schedule",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Delete Payment Schedule",
                            SystemName = "PS.Delete"
                        },
                        new
                        {
                            Id = 84,
                            CategoryName = "Workplan Indicators",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Workplan Indicator Options",
                            SystemName = "Indicators.Options"
                        },
                        new
                        {
                            Id = 85,
                            CategoryName = "Workplan Indicators",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Manage Indicators Option",
                            SystemName = "Indicators.Manage"
                        },
                        new
                        {
                            Id = 86,
                            CategoryName = "Workplan Indicators",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Capture Workplan Target",
                            SystemName = "Indicators.CaptureTarget"
                        },
                        new
                        {
                            Id = 87,
                            CategoryName = "Workplan Indicators",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Show Workplan Target Action Buttons",
                            SystemName = "Indicators.SWTA"
                        },
                        new
                        {
                            Id = 88,
                            CategoryName = "Workplan Indicators",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Capture Workplan Actual",
                            SystemName = "Indicators.CaptureActual"
                        },
                        new
                        {
                            Id = 89,
                            CategoryName = "Workplan Indicators",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Review or Verify Workplan Actual",
                            SystemName = "Indicators.ReviewActual"
                        },
                        new
                        {
                            Id = 90,
                            CategoryName = "Workplan Indicators",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Approve Workplan Actual",
                            SystemName = "Indicators.ApproveActual"
                        },
                        new
                        {
                            Id = 91,
                            CategoryName = "Workplan Indicators",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Summary Option",
                            SystemName = "Indicators.Summary"
                        },
                        new
                        {
                            Id = 92,
                            CategoryName = "Workplan Indicators",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Export Summary",
                            SystemName = "Indicators.ExportSummary"
                        },
                        new
                        {
                            Id = 93,
                            CategoryName = "Funding Application",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pre-evaluate Application",
                            SystemName = "FA.PreEvaluate"
                        },
                        new
                        {
                            Id = 94,
                            CategoryName = "Funding Application",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Evaluate Application",
                            SystemName = "FA.Evaluate"
                        },
                        new
                        {
                            Id = 95,
                            CategoryName = "Funding Application",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Adjudicate Application",
                            SystemName = "FA.Adjudicate"
                        },
                        new
                        {
                            Id = 96,
                            CategoryName = "Quick Capture",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Quick Capture",
                            SystemName = "QC.View"
                        },
                        new
                        {
                            Id = 97,
                            CategoryName = "Quick Capture",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Quick Capture",
                            SystemName = "QC.Edit"
                        },
                        new
                        {
                            Id = 98,
                            CategoryName = "View Application",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Submitted Application",
                            SystemName = "WFA.View"
                        },
                        new
                        {
                            Id = 99,
                            CategoryName = "Download Application",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Download Submitted Application",
                            SystemName = "WFA.Download"
                        },
                        new
                        {
                            Id = 100,
                            CategoryName = "Download Application",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Edit Application",
                            SystemName = "WFA.Edit"
                        },
                        new
                        {
                            Id = 101,
                            CategoryName = "Delete Application",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Delete Application",
                            SystemName = "WFA.Delete"
                        },
                        new
                        {
                            Id = 102,
                            CategoryName = "Pre Evaluate",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pre Evaluate",
                            SystemName = "WFA.PreEvaluate"
                        },
                        new
                        {
                            Id = 104,
                            CategoryName = "Pending PreEvaluation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pending PreEvaluation",
                            SystemName = "WFA.PendingPreEvaluation"
                        },
                        new
                        {
                            Id = 105,
                            CategoryName = "Pending Adjudication",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pending Adjudication",
                            SystemName = "WFA.PendingAdjudication"
                        },
                        new
                        {
                            Id = 106,
                            CategoryName = "Adjudicate",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Adjudicate",
                            SystemName = "WFA.Adjudicate"
                        },
                        new
                        {
                            Id = 107,
                            CategoryName = "Pending Evaluation",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pending Evaluation",
                            SystemName = "WFA.PendingEvaluation"
                        },
                        new
                        {
                            Id = 108,
                            CategoryName = "Evaluate",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Evaluate",
                            SystemName = "WFA.Evaluate"
                        },
                        new
                        {
                            Id = 109,
                            CategoryName = "Pending Approval",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pending Approval",
                            SystemName = "WFA.PendingApproval"
                        },
                        new
                        {
                            Id = 110,
                            CategoryName = "Approve",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Approve",
                            SystemName = "WFA.Approve"
                        },
                        new
                        {
                            Id = 111,
                            CategoryName = "Application",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Update Programme Selection on Funding Applications",
                            SystemName = "App.UAP"
                        },
                        new
                        {
                            Id = 112,
                            CategoryName = "AddScorecard",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Add Score card",
                            SystemName = "WFA.AddScorecard"
                        },
                        new
                        {
                            Id = 113,
                            CategoryName = "ReviewScorecard",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Review Score card",
                            SystemName = "WFA.ReviewScorecard"
                        },
                        new
                        {
                            Id = 114,
                            CategoryName = "ViewScorecard",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Score card",
                            SystemName = "WFA.ViewScorecard"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Core.QuarterlyPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("QuarterlyPeriod", "core");
                });

            modelBuilder.Entity("NPOMS.Domain.Core.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Roles", "core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "System Administrator",
                            SystemName = "SystemAdmin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Administrator",
                            SystemName = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Applicant",
                            SystemName = "Applicant"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Reviewer",
                            SystemName = "Reviewer"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Main Reviewer",
                            SystemName = "MainReviewer"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "PreEvaluator",
                            SystemName = "PreEvaluator"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Evaluator",
                            SystemName = "Evaluator"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Adjudicator",
                            SystemName = "Adjudicator"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Approver",
                            SystemName = "Approver"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "View Only",
                            SystemName = "ViewOnly"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Core.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsB2C")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Users", "core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Email = "npoms.admin@westerncape.gov.za",
                            FirstName = "System",
                            IsActive = false,
                            IsB2C = false,
                            LastName = "User",
                            UserName = "npoms.admin@westerncape.gov.za"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Email = "Taariq.Kamaar@westerncape.gov.za",
                            FirstName = "Taariq",
                            IsActive = false,
                            IsB2C = false,
                            LastName = "Kamaar",
                            UserName = "Taariq.Kamaar@westerncape.gov.za"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Core.Utility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AngularRedirectUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("SystemAdminUtility")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Utilities", "core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AngularRedirectUrl = "utilities/department",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update departments",
                            IsActive = false,
                            Name = "Department",
                            SystemAdminUtility = true
                        },
                        new
                        {
                            Id = 2,
                            AngularRedirectUrl = "utilities/document-type",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update document types",
                            IsActive = false,
                            Name = "Document Type",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 3,
                            AngularRedirectUrl = "utilities/email-account",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update email accounts",
                            IsActive = false,
                            Name = "Email Account",
                            SystemAdminUtility = true
                        },
                        new
                        {
                            Id = 4,
                            AngularRedirectUrl = "utilities/financial-year",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update financial years",
                            IsActive = false,
                            Name = "Financial Year",
                            SystemAdminUtility = true
                        },
                        new
                        {
                            Id = 5,
                            AngularRedirectUrl = "utilities/role",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update roles",
                            IsActive = false,
                            Name = "Role",
                            SystemAdminUtility = true
                        },
                        new
                        {
                            Id = 6,
                            AngularRedirectUrl = "utilities/access-status",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update access statuses",
                            IsActive = false,
                            Name = "Access Status",
                            SystemAdminUtility = true
                        },
                        new
                        {
                            Id = 7,
                            AngularRedirectUrl = "utilities/status",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update statuses",
                            IsActive = false,
                            Name = "Status",
                            SystemAdminUtility = true
                        },
                        new
                        {
                            Id = 8,
                            AngularRedirectUrl = "utilities/activity-type",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update activity types",
                            IsActive = false,
                            Name = "Activity Type",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 9,
                            AngularRedirectUrl = "utilities/allocation-type",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update allocation types",
                            IsActive = false,
                            Name = "Allocation Type",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 10,
                            AngularRedirectUrl = "utilities/application-type",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update application types",
                            IsActive = false,
                            Name = "Application Type",
                            SystemAdminUtility = true
                        },
                        new
                        {
                            Id = 11,
                            AngularRedirectUrl = "utilities/facility-class",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update facility classes",
                            IsActive = false,
                            Name = "Facility Class",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 12,
                            AngularRedirectUrl = "utilities/facility-district",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update facility districts",
                            IsActive = false,
                            Name = "Facility District",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 13,
                            AngularRedirectUrl = "utilities/facility-sub-district",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update facility sub-districts",
                            IsActive = false,
                            Name = "Facility Sub-District",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 14,
                            AngularRedirectUrl = "utilities/facility-type",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update facility types",
                            IsActive = false,
                            Name = "Facility Type",
                            SystemAdminUtility = true
                        },
                        new
                        {
                            Id = 15,
                            AngularRedirectUrl = "utilities/organisation-type",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update organisation types",
                            IsActive = false,
                            Name = "Organisation Type",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 16,
                            AngularRedirectUrl = "utilities/position",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update positions",
                            IsActive = false,
                            Name = "Position",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 17,
                            AngularRedirectUrl = "utilities/programme",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update programmes",
                            IsActive = false,
                            Name = "Programme",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 18,
                            AngularRedirectUrl = "utilities/provision-type",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update provision types",
                            IsActive = false,
                            Name = "Provision Type",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 19,
                            AngularRedirectUrl = "utilities/recipient-type",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update recipient types",
                            IsActive = false,
                            Name = "Recipient Type",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 20,
                            AngularRedirectUrl = "utilities/resource-type",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update resource types",
                            IsActive = false,
                            Name = "Resource Type",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 21,
                            AngularRedirectUrl = "utilities/service-type",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update service types",
                            IsActive = false,
                            Name = "Service Type",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 22,
                            AngularRedirectUrl = "utilities/sub-programme",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update sub-programmes",
                            IsActive = false,
                            Name = "Sub-Programme",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 23,
                            AngularRedirectUrl = "utilities/title",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update titles",
                            IsActive = false,
                            Name = "Title",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 24,
                            AngularRedirectUrl = "utilities/management",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update utility management",
                            IsActive = false,
                            Name = "Utility Management",
                            SystemAdminUtility = true
                        },
                        new
                        {
                            Id = 25,
                            AngularRedirectUrl = "utilities/sub-programme-type",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update sub-programme types",
                            IsActive = false,
                            Name = "Sub-Programme Type",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 26,
                            AngularRedirectUrl = "utilities/directorate",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update directorates",
                            IsActive = false,
                            Name = "Directorate",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 27,
                            AngularRedirectUrl = "utilities/bank",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update banks",
                            IsActive = false,
                            Name = "Bank",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 28,
                            AngularRedirectUrl = "utilities/branch",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update branches",
                            IsActive = false,
                            Name = "Branch",
                            SystemAdminUtility = false
                        },
                        new
                        {
                            Id = 29,
                            AngularRedirectUrl = "utilities/account-type",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Add and/or Update account types",
                            IsActive = false,
                            Name = "Account Type",
                            SystemAdminUtility = false
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.AccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AccountTypes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "SAVINGS"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "CURRENT"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "TRANSMISSION"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Subscription Share"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "BOND"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.ActivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ActivityTypes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "New",
                            SystemName = "New"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Ongoing",
                            SystemName = "Ongoing"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.AllocationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AllocationTypes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Province",
                            SystemName = "Province"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "City of Cape Town",
                            SystemName = "CoCT"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.ApplicationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ApplicationTypes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Funding Application",
                            SystemName = "FA"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Service Provision",
                            SystemName = "SP"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Quick Capture",
                            SystemName = "QC"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Business Plan",
                            SystemName = "BP"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Banks", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "632005",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "ABSA Bank"
                        },
                        new
                        {
                            Id = 2,
                            Code = "470010",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Capitec Bank"
                        },
                        new
                        {
                            Id = 3,
                            Code = "250655",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "First National Bank"
                        },
                        new
                        {
                            Id = 4,
                            Code = "198675",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "NedBank"
                        },
                        new
                        {
                            Id = 5,
                            Code = "051001",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Standard Bank"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "International Bank"
                        },
                        new
                        {
                            Id = 7,
                            Code = "580105",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Investec Bank"
                        },
                        new
                        {
                            Id = 8,
                            Code = "460005",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Post Bank"
                        },
                        new
                        {
                            Id = 9,
                            Code = "000000",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Default"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Bidvest"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Branches", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "All Branches"
                        },
                        new
                        {
                            Id = 2,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Barrydale"
                        },
                        new
                        {
                            Id = 3,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Beaufort West"
                        },
                        new
                        {
                            Id = 4,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Bellville"
                        },
                        new
                        {
                            Id = 5,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Bonnievale"
                        },
                        new
                        {
                            Id = 6,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Brackenfell"
                        },
                        new
                        {
                            Id = 7,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Bredasdorp"
                        },
                        new
                        {
                            Id = 8,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Caledon"
                        },
                        new
                        {
                            Id = 9,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Cape Gate"
                        },
                        new
                        {
                            Id = 10,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Centurion"
                        },
                        new
                        {
                            Id = 11,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Century City"
                        },
                        new
                        {
                            Id = 12,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Ceres"
                        },
                        new
                        {
                            Id = 13,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Citrusdal"
                        },
                        new
                        {
                            Id = 14,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Clanwilliam"
                        },
                        new
                        {
                            Id = 15,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Claremont"
                        },
                        new
                        {
                            Id = 16,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "De Doorns"
                        },
                        new
                        {
                            Id = 17,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Durbanville"
                        },
                        new
                        {
                            Id = 18,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "George"
                        },
                        new
                        {
                            Id = 19,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Helderberg"
                        },
                        new
                        {
                            Id = 20,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Hermanus"
                        },
                        new
                        {
                            Id = 21,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Kenilworth"
                        },
                        new
                        {
                            Id = 22,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Kraaifontein"
                        },
                        new
                        {
                            Id = 23,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Kuilsriver"
                        },
                        new
                        {
                            Id = 24,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Malmesbury"
                        },
                        new
                        {
                            Id = 25,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Montagu"
                        },
                        new
                        {
                            Id = 26,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mossel Bay"
                        },
                        new
                        {
                            Id = 27,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mountain Mill"
                        },
                        new
                        {
                            Id = 28,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mowbray"
                        },
                        new
                        {
                            Id = 29,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Oudtshoorn"
                        },
                        new
                        {
                            Id = 30,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Paarl"
                        },
                        new
                        {
                            Id = 31,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Parow"
                        },
                        new
                        {
                            Id = 32,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Phillipi"
                        },
                        new
                        {
                            Id = 33,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Plein Street"
                        },
                        new
                        {
                            Id = 34,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Plettenberg Bay"
                        },
                        new
                        {
                            Id = 35,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Porterville"
                        },
                        new
                        {
                            Id = 36,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Promenade"
                        },
                        new
                        {
                            Id = 37,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Riebeek Road"
                        },
                        new
                        {
                            Id = 38,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Riviersonderend"
                        },
                        new
                        {
                            Id = 39,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Robertson"
                        },
                        new
                        {
                            Id = 40,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Santyger"
                        },
                        new
                        {
                            Id = 41,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Somerset mall"
                        },
                        new
                        {
                            Id = 42,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Stellenbosch"
                        },
                        new
                        {
                            Id = 43,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Strand"
                        },
                        new
                        {
                            Id = 44,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Swellendam"
                        },
                        new
                        {
                            Id = 45,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Tulbagh"
                        },
                        new
                        {
                            Id = 46,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Tyger Manor"
                        },
                        new
                        {
                            Id = 47,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Uniondale"
                        },
                        new
                        {
                            Id = 48,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Villiersdorp"
                        },
                        new
                        {
                            Id = 49,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Vredendal"
                        },
                        new
                        {
                            Id = 50,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Wellington"
                        },
                        new
                        {
                            Id = 51,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Worcester"
                        },
                        new
                        {
                            Id = 52,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Wynberg"
                        },
                        new
                        {
                            Id = 53,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Zevenwacht"
                        },
                        new
                        {
                            Id = 54,
                            BankId = 1,
                            BranchCode = "631309",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Athlone"
                        },
                        new
                        {
                            Id = 55,
                            BankId = 1,
                            BranchCode = "505210",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Boston Street"
                        },
                        new
                        {
                            Id = 56,
                            BankId = 1,
                            BranchCode = "630126",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Durban City"
                        },
                        new
                        {
                            Id = 57,
                            BankId = 1,
                            BranchCode = "334708",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Prince Albert"
                        },
                        new
                        {
                            Id = 58,
                            BankId = 1,
                            BranchCode = "421109",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Rondebosch"
                        },
                        new
                        {
                            Id = 59,
                            BankId = 1,
                            BranchCode = "503107",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Stockenstroom Street"
                        },
                        new
                        {
                            Id = 60,
                            BankId = 1,
                            BranchCode = "334507",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Wolseley"
                        },
                        new
                        {
                            Id = 61,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Knysna"
                        },
                        new
                        {
                            Id = 62,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Cape Town Adderley Street"
                        },
                        new
                        {
                            Id = 63,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "KUILSRIVIER"
                        },
                        new
                        {
                            Id = 64,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "McTyre Street, Parow"
                        },
                        new
                        {
                            Id = 65,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "plettenburg"
                        },
                        new
                        {
                            Id = 66,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "RIEBEECKWEG KUILSRIVIER"
                        },
                        new
                        {
                            Id = 67,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "SOMERSET WEST"
                        },
                        new
                        {
                            Id = 68,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "TYGER MALL"
                        },
                        new
                        {
                            Id = 69,
                            BankId = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "ZEVENWACHT MALL"
                        },
                        new
                        {
                            Id = 70,
                            BankId = 1,
                            BranchCode = "632005",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Riversdal"
                        },
                        new
                        {
                            Id = 71,
                            BankId = 1,
                            BranchCode = "000000",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Default"
                        },
                        new
                        {
                            Id = 72,
                            BankId = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Bellville"
                        },
                        new
                        {
                            Id = 73,
                            BankId = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Khayelitsha KBD"
                        },
                        new
                        {
                            Id = 74,
                            BankId = 2,
                            BranchCode = "200712",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Villiersdorp"
                        },
                        new
                        {
                            Id = 75,
                            BankId = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "All Branches"
                        },
                        new
                        {
                            Id = 76,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Beaufort West"
                        },
                        new
                        {
                            Id = 77,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Khayelitsha"
                        },
                        new
                        {
                            Id = 78,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Langeberg Mall"
                        },
                        new
                        {
                            Id = 79,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Lansdowne"
                        },
                        new
                        {
                            Id = 80,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mossel Bay"
                        },
                        new
                        {
                            Id = 81,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "N1 City"
                        },
                        new
                        {
                            Id = 82,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Paarl"
                        },
                        new
                        {
                            Id = 83,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Plumstead"
                        },
                        new
                        {
                            Id = 84,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Promenade"
                        },
                        new
                        {
                            Id = 85,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Symphony Walk"
                        },
                        new
                        {
                            Id = 86,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Vangate Mall"
                        },
                        new
                        {
                            Id = 87,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Vineyard"
                        },
                        new
                        {
                            Id = 88,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Wellington"
                        },
                        new
                        {
                            Id = 89,
                            BankId = 3,
                            BranchCode = "200206",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Clanwilliam"
                        },
                        new
                        {
                            Id = 90,
                            BankId = 3,
                            BranchCode = "210554",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Commercial Account Services"
                        },
                        new
                        {
                            Id = 91,
                            BankId = 3,
                            BranchCode = "200406",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Garies"
                        },
                        new
                        {
                            Id = 92,
                            BankId = 3,
                            BranchCode = "201409",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Gugulethu"
                        },
                        new
                        {
                            Id = 93,
                            BankId = 3,
                            BranchCode = "260557",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Gugulethu Mall"
                        },
                        new
                        {
                            Id = 94,
                            BankId = 3,
                            BranchCode = "260557",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Gugulethu Square"
                        },
                        new
                        {
                            Id = 95,
                            BankId = 3,
                            BranchCode = "200809",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Heerengracth"
                        },
                        new
                        {
                            Id = 96,
                            BankId = 3,
                            BranchCode = "200113",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Heidelberg"
                        },
                        new
                        {
                            Id = 97,
                            BankId = 3,
                            BranchCode = "271344",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Helderberg"
                        },
                        new
                        {
                            Id = 98,
                            BankId = 3,
                            BranchCode = "200109",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Kenilworth"
                        },
                        new
                        {
                            Id = 99,
                            BankId = 3,
                            BranchCode = "200512",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "MAIN STREET"
                        },
                        new
                        {
                            Id = 100,
                            BankId = 3,
                            BranchCode = "200209",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Maitland"
                        },
                        new
                        {
                            Id = 101,
                            BankId = 3,
                            BranchCode = "200507",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Malmesbury"
                        },
                        new
                        {
                            Id = 102,
                            BankId = 3,
                            BranchCode = "250040",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mitchell Plain"
                        },
                        new
                        {
                            Id = 103,
                            BankId = 3,
                            BranchCode = "204709",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Montagu"
                        },
                        new
                        {
                            Id = 104,
                            BankId = 3,
                            BranchCode = "200111",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Moorreesburg"
                        },
                        new
                        {
                            Id = 105,
                            BankId = 3,
                            BranchCode = "250937",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Neelsie"
                        },
                        new
                        {
                            Id = 106,
                            BankId = 3,
                            BranchCode = "260209",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pinelands"
                        },
                        new
                        {
                            Id = 107,
                            BankId = 3,
                            BranchCode = "261251",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Sandton Square"
                        },
                        new
                        {
                            Id = 108,
                            BankId = 3,
                            BranchCode = "201809",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Sea Point"
                        },
                        new
                        {
                            Id = 109,
                            BankId = 3,
                            BranchCode = "210229",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Sedgefield"
                        },
                        new
                        {
                            Id = 110,
                            BankId = 3,
                            BranchCode = "202309",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Simons Town"
                        },
                        new
                        {
                            Id = 111,
                            BankId = 3,
                            BranchCode = "202509",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Thibault Sqaure"
                        },
                        new
                        {
                            Id = 112,
                            BankId = 3,
                            BranchCode = "201410",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Tygerberg"
                        },
                        new
                        {
                            Id = 113,
                            BankId = 3,
                            BranchCode = "210655",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Willowbridge"
                        },
                        new
                        {
                            Id = 114,
                            BankId = 3,
                            BranchCode = "210114",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "York Street"
                        },
                        new
                        {
                            Id = 115,
                            BankId = 3,
                            BranchCode = "201409",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Adderley Street"
                        },
                        new
                        {
                            Id = 116,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "All Branches"
                        },
                        new
                        {
                            Id = 117,
                            BankId = 3,
                            BranchCode = "202409",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Athlone"
                        },
                        new
                        {
                            Id = 118,
                            BankId = 3,
                            BranchCode = "200409",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Blue Route"
                        },
                        new
                        {
                            Id = 119,
                            BankId = 3,
                            BranchCode = "200212",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Caledon"
                        },
                        new
                        {
                            Id = 120,
                            BankId = 3,
                            BranchCode = "201409",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Cape Town"
                        },
                        new
                        {
                            Id = 121,
                            BankId = 3,
                            BranchCode = "200107",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Ceres"
                        },
                        new
                        {
                            Id = 122,
                            BankId = 3,
                            BranchCode = "200109",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Claremont"
                        },
                        new
                        {
                            Id = 123,
                            BankId = 3,
                            BranchCode = "200207",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "De Doorns"
                        },
                        new
                        {
                            Id = 124,
                            BankId = 3,
                            BranchCode = "200810",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Epping"
                        },
                        new
                        {
                            Id = 125,
                            BankId = 3,
                            BranchCode = "202309",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Fish Hoek"
                        },
                        new
                        {
                            Id = 126,
                            BankId = 3,
                            BranchCode = "210114",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "george"
                        },
                        new
                        {
                            Id = 127,
                            BankId = 3,
                            BranchCode = "200312",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Grabouw"
                        },
                        new
                        {
                            Id = 128,
                            BankId = 3,
                            BranchCode = "203109",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Grassy Park"
                        },
                        new
                        {
                            Id = 129,
                            BankId = 3,
                            BranchCode = "200412",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Hermanus"
                        },
                        new
                        {
                            Id = 130,
                            BankId = 3,
                            BranchCode = "204009",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Hout Bay"
                        },
                        new
                        {
                            Id = 131,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Klawer"
                        },
                        new
                        {
                            Id = 132,
                            BankId = 3,
                            BranchCode = "210214",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "knysna"
                        },
                        new
                        {
                            Id = 133,
                            BankId = 3,
                            BranchCode = "201110",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Kuilsriver"
                        },
                        new
                        {
                            Id = 134,
                            BankId = 3,
                            BranchCode = "200213",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Ladismith"
                        },
                        new
                        {
                            Id = 135,
                            BankId = 3,
                            BranchCode = "210754",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Makhaza"
                        },
                        new
                        {
                            Id = 136,
                            BankId = 3,
                            BranchCode = "203309",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Milnerton"
                        },
                        new
                        {
                            Id = 137,
                            BankId = 3,
                            BranchCode = "204709",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Montague Gardens"
                        },
                        new
                        {
                            Id = 138,
                            BankId = 3,
                            BranchCode = "200309",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mowbray"
                        },
                        new
                        {
                            Id = 139,
                            BankId = 3,
                            BranchCode = "202709",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Newlands"
                        },
                        new
                        {
                            Id = 140,
                            BankId = 3,
                            BranchCode = "210414",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Oudtshoorn"
                        },
                        new
                        {
                            Id = 141,
                            BankId = 3,
                            BranchCode = "200510",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Parow"
                        },
                        new
                        {
                            Id = 142,
                            BankId = 3,
                            BranchCode = "200211",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Piketberg"
                        },
                        new
                        {
                            Id = 143,
                            BankId = 3,
                            BranchCode = "210514",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Plettenberg Bay"
                        },
                        new
                        {
                            Id = 144,
                            BankId = 3,
                            BranchCode = "200413",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Robertson"
                        },
                        new
                        {
                            Id = 145,
                            BankId = 3,
                            BranchCode = "201509",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Rondebosch"
                        },
                        new
                        {
                            Id = 146,
                            BankId = 3,
                            BranchCode = "200411",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Saldanha"
                        },
                        new
                        {
                            Id = 147,
                            BankId = 3,
                            BranchCode = "200912",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Somerset mall"
                        },
                        new
                        {
                            Id = 148,
                            BankId = 3,
                            BranchCode = "200610",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Stellenbosch"
                        },
                        new
                        {
                            Id = 149,
                            BankId = 3,
                            BranchCode = "200612",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Strand"
                        },
                        new
                        {
                            Id = 150,
                            BankId = 3,
                            BranchCode = "200513",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Swellendam"
                        },
                        new
                        {
                            Id = 151,
                            BankId = 3,
                            BranchCode = "203809",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Table View"
                        },
                        new
                        {
                            Id = 152,
                            BankId = 3,
                            BranchCode = "202509",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Thibault Square"
                        },
                        new
                        {
                            Id = 153,
                            BankId = 3,
                            BranchCode = "200409",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Tokai"
                        },
                        new
                        {
                            Id = 154,
                            BankId = 3,
                            BranchCode = "250040",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Town Centre Mitchell's Plain"
                        },
                        new
                        {
                            Id = 155,
                            BankId = 3,
                            BranchCode = "200307",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Tulbagh"
                        },
                        new
                        {
                            Id = 156,
                            BankId = 3,
                            BranchCode = "220323",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Tygervalley"
                        },
                        new
                        {
                            Id = 157,
                            BankId = 3,
                            BranchCode = "200712",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Villiersdorp"
                        },
                        new
                        {
                            Id = 158,
                            BankId = 3,
                            BranchCode = "200311",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Vredenburg"
                        },
                        new
                        {
                            Id = 159,
                            BankId = 3,
                            BranchCode = "200406",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Vredendal"
                        },
                        new
                        {
                            Id = 160,
                            BankId = 3,
                            BranchCode = "201909",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Woodstock"
                        },
                        new
                        {
                            Id = 161,
                            BankId = 3,
                            BranchCode = "200407",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Worcester"
                        },
                        new
                        {
                            Id = 162,
                            BankId = 3,
                            BranchCode = "202209",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Wynberg"
                        },
                        new
                        {
                            Id = 163,
                            BankId = 3,
                            BranchCode = "260214",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Zevenwacht"
                        },
                        new
                        {
                            Id = 164,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Town Centre"
                        },
                        new
                        {
                            Id = 165,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Durbanville"
                        },
                        new
                        {
                            Id = 166,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "250555"
                        },
                        new
                        {
                            Id = 167,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Adderley Str. Cape Town"
                        },
                        new
                        {
                            Id = 168,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Adderley Street Cape Town"
                        },
                        new
                        {
                            Id = 169,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Adderley Street, Cape Town"
                        },
                        new
                        {
                            Id = 170,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Adderley Street,Cape Town"
                        },
                        new
                        {
                            Id = 171,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "ADDERLY STREET"
                        },
                        new
                        {
                            Id = 172,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "BLUE ROUTE MALL"
                        },
                        new
                        {
                            Id = 173,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "BLUE ROUTE TOKAI"
                        },
                        new
                        {
                            Id = 174,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "EPPINDUST"
                        },
                        new
                        {
                            Id = 175,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "EPPINGDUST"
                        },
                        new
                        {
                            Id = 176,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Eppingindust"
                        },
                        new
                        {
                            Id = 177,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "GRASSY PARK CAPE TOWN"
                        },
                        new
                        {
                            Id = 178,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Grassy Park, Cape Town"
                        },
                        new
                        {
                            Id = 179,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "KLAWER SERVICE BRANCHE"
                        },
                        new
                        {
                            Id = 180,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Kuilsrivier"
                        },
                        new
                        {
                            Id = 181,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "ladiesmith"
                        },
                        new
                        {
                            Id = 182,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Makhaza Shopping Centre"
                        },
                        new
                        {
                            Id = 183,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mlnerton"
                        },
                        new
                        {
                            Id = 184,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mobray"
                        },
                        new
                        {
                            Id = 185,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "montague"
                        },
                        new
                        {
                            Id = 186,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mosselbay"
                        },
                        new
                        {
                            Id = 187,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "PAROW 002"
                        },
                        new
                        {
                            Id = 188,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "SALDAHNA"
                        },
                        new
                        {
                            Id = 189,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "SANDTON"
                        },
                        new
                        {
                            Id = 190,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "SANDTON SQUARE CRAIGHALL"
                        },
                        new
                        {
                            Id = 191,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "SOMERSET WEST"
                        },
                        new
                        {
                            Id = 192,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Somerset West Mall"
                        },
                        new
                        {
                            Id = 193,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Stellenbosch C.P"
                        },
                        new
                        {
                            Id = 194,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Symphony"
                        },
                        new
                        {
                            Id = 195,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "TYGERVALIE"
                        },
                        new
                        {
                            Id = 196,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "VANGATE"
                        },
                        new
                        {
                            Id = 197,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Vangate Mall Athlone"
                        },
                        new
                        {
                            Id = 198,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "VILLIERSDORD"
                        },
                        new
                        {
                            Id = 199,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "villierssdorp"
                        },
                        new
                        {
                            Id = 200,
                            BankId = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Zevenwacht Mall"
                        },
                        new
                        {
                            Id = 201,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Ceres"
                        },
                        new
                        {
                            Id = 202,
                            BankId = 4,
                            BranchCode = "198765",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Avonwood"
                        },
                        new
                        {
                            Id = 203,
                            BankId = 4,
                            BranchCode = "198765",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Beaufort West"
                        },
                        new
                        {
                            Id = 204,
                            BankId = 4,
                            BranchCode = "103210",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Bellville East"
                        },
                        new
                        {
                            Id = 205,
                            BankId = 4,
                            BranchCode = "103310",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Brackenfell"
                        },
                        new
                        {
                            Id = 206,
                            BankId = 4,
                            BranchCode = "149821",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "BUSINESS WINELANDS"
                        },
                        new
                        {
                            Id = 207,
                            BankId = 4,
                            BranchCode = "441010",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Cape Commercial"
                        },
                        new
                        {
                            Id = 208,
                            BankId = 4,
                            BranchCode = "145209",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Cavendish Square"
                        },
                        new
                        {
                            Id = 209,
                            BankId = 4,
                            BranchCode = "167005",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Franschhoek"
                        },
                        new
                        {
                            Id = 210,
                            BankId = 4,
                            BranchCode = "101009",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Gardens"
                        },
                        new
                        {
                            Id = 211,
                            BankId = 4,
                            BranchCode = "100909",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Gardens Centre"
                        },
                        new
                        {
                            Id = 212,
                            BankId = 4,
                            BranchCode = "122005",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "GRAHAMSTOWN"
                        },
                        new
                        {
                            Id = 213,
                            BankId = 4,
                            BranchCode = "103109",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Heerengracht"
                        },
                        new
                        {
                            Id = 214,
                            BankId = 4,
                            BranchCode = "441012",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Helderberg Commercial"
                        },
                        new
                        {
                            Id = 215,
                            BankId = 4,
                            BranchCode = "198765",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Inland Garden Route Paarl"
                        },
                        new
                        {
                            Id = 216,
                            BankId = 4,
                            BranchCode = "198760",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Kenilworth"
                        },
                        new
                        {
                            Id = 217,
                            BankId = 4,
                            BranchCode = "172305",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Khayaelitsha Mall"
                        },
                        new
                        {
                            Id = 218,
                            BankId = 4,
                            BranchCode = "155405",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Makhaza"
                        },
                        new
                        {
                            Id = 219,
                            BankId = 4,
                            BranchCode = "198765",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mbekweni"
                        },
                        new
                        {
                            Id = 220,
                            BankId = 4,
                            BranchCode = "107909",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mitchell Plain"
                        },
                        new
                        {
                            Id = 221,
                            BankId = 4,
                            BranchCode = "198765",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Montague Gardens"
                        },
                        new
                        {
                            Id = 222,
                            BankId = 4,
                            BranchCode = "128505",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Moorreesburg"
                        },
                        new
                        {
                            Id = 223,
                            BankId = 4,
                            BranchCode = "198765",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Nomzamo"
                        },
                        new
                        {
                            Id = 224,
                            BankId = 4,
                            BranchCode = "118602",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Northern Peninsula"
                        },
                        new
                        {
                            Id = 225,
                            BankId = 4,
                            BranchCode = "198765",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Paarl Mall"
                        },
                        new
                        {
                            Id = 226,
                            BankId = 4,
                            BranchCode = "115909",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Peoples Athlone"
                        },
                        new
                        {
                            Id = 227,
                            BankId = 4,
                            BranchCode = "107909",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Promenade"
                        },
                        new
                        {
                            Id = 228,
                            BankId = 4,
                            BranchCode = "198765",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Robertson"
                        },
                        new
                        {
                            Id = 229,
                            BankId = 4,
                            BranchCode = "106909",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Sea Point"
                        },
                        new
                        {
                            Id = 230,
                            BankId = 4,
                            BranchCode = "123209",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Southern Peninsula"
                        },
                        new
                        {
                            Id = 231,
                            BankId = 4,
                            BranchCode = "184705",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Stilbaai"
                        },
                        new
                        {
                            Id = 232,
                            BankId = 4,
                            BranchCode = "128505",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Swartland"
                        },
                        new
                        {
                            Id = 233,
                            BankId = 4,
                            BranchCode = "118602",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "The Bridge"
                        },
                        new
                        {
                            Id = 234,
                            BankId = 4,
                            BranchCode = "198765",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Tokai"
                        },
                        new
                        {
                            Id = 235,
                            BankId = 4,
                            BranchCode = "103910",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Tygervalley"
                        },
                        new
                        {
                            Id = 236,
                            BankId = 4,
                            BranchCode = "128505",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Vredenburg"
                        },
                        new
                        {
                            Id = 237,
                            BankId = 4,
                            BranchCode = "198765",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Vredendal"
                        },
                        new
                        {
                            Id = 238,
                            BankId = 4,
                            BranchCode = "102905",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Wellington"
                        },
                        new
                        {
                            Id = 239,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "All Branches"
                        },
                        new
                        {
                            Id = 240,
                            BankId = 4,
                            BranchCode = "193765",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Atlantis"
                        },
                        new
                        {
                            Id = 241,
                            BankId = 4,
                            BranchCode = "120405",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Belhar"
                        },
                        new
                        {
                            Id = 242,
                            BankId = 4,
                            BranchCode = "108110",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Bellville"
                        },
                        new
                        {
                            Id = 243,
                            BankId = 4,
                            BranchCode = "125142",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Bredasdorp"
                        },
                        new
                        {
                            Id = 244,
                            BankId = 4,
                            BranchCode = "196005",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Caledon"
                        },
                        new
                        {
                            Id = 245,
                            BankId = 4,
                            BranchCode = "100909",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Cape Town"
                        },
                        new
                        {
                            Id = 246,
                            BankId = 4,
                            BranchCode = "100989",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Cape Town Station"
                        },
                        new
                        {
                            Id = 247,
                            BankId = 4,
                            BranchCode = "153305",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Clanwilliam"
                        },
                        new
                        {
                            Id = 248,
                            BankId = 4,
                            BranchCode = "104609",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Claremont"
                        },
                        new
                        {
                            Id = 249,
                            BankId = 4,
                            BranchCode = "101109",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Constantia"
                        },
                        new
                        {
                            Id = 250,
                            BankId = 4,
                            BranchCode = "103710",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Durbanville"
                        },
                        new
                        {
                            Id = 251,
                            BankId = 4,
                            BranchCode = "153614",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Garden Route"
                        },
                        new
                        {
                            Id = 252,
                            BankId = 4,
                            BranchCode = "198765",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Garden Route Mall"
                        },
                        new
                        {
                            Id = 253,
                            BankId = 4,
                            BranchCode = "109114",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "George"
                        },
                        new
                        {
                            Id = 254,
                            BankId = 4,
                            BranchCode = "134512",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Hermanus"
                        },
                        new
                        {
                            Id = 255,
                            BankId = 4,
                            BranchCode = "187505",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Inland Garden Route"
                        },
                        new
                        {
                            Id = 256,
                            BankId = 4,
                            BranchCode = "172305",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Khayelitsha"
                        },
                        new
                        {
                            Id = 257,
                            BankId = 4,
                            BranchCode = "172305",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Khayelitsha Mall"
                        },
                        new
                        {
                            Id = 258,
                            BankId = 4,
                            BranchCode = "108914",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Knysna"
                        },
                        new
                        {
                            Id = 259,
                            BankId = 4,
                            BranchCode = "112305",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Kraaifontein"
                        },
                        new
                        {
                            Id = 260,
                            BankId = 4,
                            BranchCode = "115310",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Kuilsriver"
                        },
                        new
                        {
                            Id = 261,
                            BankId = 4,
                            BranchCode = "154605",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Malmesbury"
                        },
                        new
                        {
                            Id = 262,
                            BankId = 4,
                            BranchCode = "144905",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mitchells Plain"
                        },
                        new
                        {
                            Id = 263,
                            BankId = 4,
                            BranchCode = "144905",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mitchell's Plain"
                        },
                        new
                        {
                            Id = 264,
                            BankId = 4,
                            BranchCode = "168905",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mossel Bay"
                        },
                        new
                        {
                            Id = 265,
                            BankId = 4,
                            BranchCode = "110634",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Nonqubela"
                        },
                        new
                        {
                            Id = 266,
                            BankId = 4,
                            BranchCode = "175205",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Oudtshoorn"
                        },
                        new
                        {
                            Id = 267,
                            BankId = 4,
                            BranchCode = "102210",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Paarl"
                        },
                        new
                        {
                            Id = 268,
                            BankId = 4,
                            BranchCode = "114810",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Paarl Lady Grey St"
                        },
                        new
                        {
                            Id = 269,
                            BankId = 4,
                            BranchCode = "102510",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Parow"
                        },
                        new
                        {
                            Id = 270,
                            BankId = 4,
                            BranchCode = "107510",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Phillipi"
                        },
                        new
                        {
                            Id = 271,
                            BankId = 4,
                            BranchCode = "104709",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pinelands"
                        },
                        new
                        {
                            Id = 272,
                            BankId = 4,
                            BranchCode = "107909",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Promenade Mall"
                        },
                        new
                        {
                            Id = 273,
                            BankId = 4,
                            BranchCode = "162645",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Riversdal"
                        },
                        new
                        {
                            Id = 274,
                            BankId = 4,
                            BranchCode = "104809",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Rondebosch"
                        },
                        new
                        {
                            Id = 275,
                            BankId = 4,
                            BranchCode = "114145",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Somerset mall"
                        },
                        new
                        {
                            Id = 276,
                            BankId = 4,
                            BranchCode = "107110",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Stellenbosch"
                        },
                        new
                        {
                            Id = 277,
                            BankId = 4,
                            BranchCode = "132105",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Swellendam"
                        },
                        new
                        {
                            Id = 278,
                            BankId = 4,
                            BranchCode = "144905",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Town Centre"
                        },
                        new
                        {
                            Id = 279,
                            BankId = 4,
                            BranchCode = "118602",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Tygerberg"
                        },
                        new
                        {
                            Id = 280,
                            BankId = 4,
                            BranchCode = "149821",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Winelands Stellenbosch"
                        },
                        new
                        {
                            Id = 281,
                            BankId = 4,
                            BranchCode = "101507",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Worcester"
                        },
                        new
                        {
                            Id = 282,
                            BankId = 4,
                            BranchCode = "109114",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "York Street"
                        },
                        new
                        {
                            Id = 283,
                            BankId = 4,
                            BranchCode = "147005",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Zomelust Estate Paarl"
                        },
                        new
                        {
                            Id = 284,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "147005"
                        },
                        new
                        {
                            Id = 285,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "ANTIANTIC"
                        },
                        new
                        {
                            Id = 286,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "ANTLANTIS"
                        },
                        new
                        {
                            Id = 287,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Beaufort - West"
                        },
                        new
                        {
                            Id = 288,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Bellville CBD"
                        },
                        new
                        {
                            Id = 289,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "BELLVILLE CDB"
                        },
                        new
                        {
                            Id = 290,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "caldeon"
                        },
                        new
                        {
                            Id = 291,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "CAVENDISH"
                        },
                        new
                        {
                            Id = 292,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "CHURCH SQUARE  KUILS RIVIER"
                        },
                        new
                        {
                            Id = 293,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "HELDERBERG KOMMERSIELE"
                        },
                        new
                        {
                            Id = 294,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "KAAP KOMMERSIEEL"
                        },
                        new
                        {
                            Id = 295,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "KUILSRIVIER"
                        },
                        new
                        {
                            Id = 296,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mitchells Plain Town Centre"
                        },
                        new
                        {
                            Id = 297,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mitchell's Plain, Promenade Mall"
                        },
                        new
                        {
                            Id = 298,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Montaque Gardens"
                        },
                        new
                        {
                            Id = 299,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mosselbay"
                        },
                        new
                        {
                            Id = 300,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "PROMINADE"
                        },
                        new
                        {
                            Id = 301,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Seapoint"
                        },
                        new
                        {
                            Id = 302,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Somerset"
                        },
                        new
                        {
                            Id = 303,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Somerset Wesr"
                        },
                        new
                        {
                            Id = 304,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "SOMERSET WEST"
                        },
                        new
                        {
                            Id = 305,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "TYGERBERG WINELANDS"
                        },
                        new
                        {
                            Id = 306,
                            BankId = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Winelands"
                        },
                        new
                        {
                            Id = 307,
                            BankId = 4,
                            BranchCode = "50212",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "grabouw"
                        },
                        new
                        {
                            Id = 308,
                            BankId = 5,
                            BranchCode = "26609",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Athlone"
                        },
                        new
                        {
                            Id = 309,
                            BankId = 5,
                            BranchCode = "51001",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Bayside"
                        },
                        new
                        {
                            Id = 310,
                            BankId = 5,
                            BranchCode = "4805",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Braamfontein"
                        },
                        new
                        {
                            Id = 311,
                            BankId = 5,
                            BranchCode = "30310",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Brackenfell"
                        },
                        new
                        {
                            Id = 312,
                            BankId = 5,
                            BranchCode = "50011",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Citrusdal"
                        },
                        new
                        {
                            Id = 313,
                            BankId = 5,
                            BranchCode = "50106",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Clanwilliam"
                        },
                        new
                        {
                            Id = 314,
                            BankId = 5,
                            BranchCode = "31010",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Goodwood"
                        },
                        new
                        {
                            Id = 315,
                            BankId = 5,
                            BranchCode = "51108",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Lainsburg"
                        },
                        new
                        {
                            Id = 316,
                            BankId = 5,
                            BranchCode = "51001",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "LYNNWOOD RIDGE"
                        },
                        new
                        {
                            Id = 317,
                            BankId = 5,
                            BranchCode = "6105",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mellville"
                        },
                        new
                        {
                            Id = 318,
                            BankId = 5,
                            BranchCode = "6305",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Northcliff"
                        },
                        new
                        {
                            Id = 319,
                            BankId = 5,
                            BranchCode = "51001",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Parow West"
                        },
                        new
                        {
                            Id = 320,
                            BankId = 5,
                            BranchCode = "25309",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Plumstead"
                        },
                        new
                        {
                            Id = 321,
                            BankId = 5,
                            BranchCode = "25009",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Rondeboch"
                        },
                        new
                        {
                            Id = 322,
                            BankId = 5,
                            BranchCode = "24109",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Sea Point"
                        },
                        new
                        {
                            Id = 323,
                            BankId = 5,
                            BranchCode = "33112",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Strand"
                        },
                        new
                        {
                            Id = 324,
                            BankId = 5,
                            BranchCode = "51001",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Thembalethu George"
                        },
                        new
                        {
                            Id = 325,
                            BankId = 5,
                            BranchCode = "20909",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Thibault Sqaure"
                        },
                        new
                        {
                            Id = 326,
                            BankId = 5,
                            BranchCode = "50307",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Tulbagh"
                        },
                        new
                        {
                            Id = 327,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "All Branches"
                        },
                        new
                        {
                            Id = 328,
                            BankId = 5,
                            BranchCode = "50008",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Beaufort West"
                        },
                        new
                        {
                            Id = 329,
                            BankId = 5,
                            BranchCode = "51001",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Bellville"
                        },
                        new
                        {
                            Id = 330,
                            BankId = 5,
                            BranchCode = "25609",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Blue Route"
                        },
                        new
                        {
                            Id = 331,
                            BankId = 5,
                            BranchCode = "50112",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Caledon"
                        },
                        new
                        {
                            Id = 332,
                            BankId = 5,
                            BranchCode = "50014",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Calitzdorp"
                        },
                        new
                        {
                            Id = 333,
                            BankId = 5,
                            BranchCode = "23910",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Cape Gate"
                        },
                        new
                        {
                            Id = 334,
                            BankId = 5,
                            BranchCode = "20009",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Cape Town"
                        },
                        new
                        {
                            Id = 335,
                            BankId = 5,
                            BranchCode = "50007",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Ceres"
                        },
                        new
                        {
                            Id = 336,
                            BankId = 5,
                            BranchCode = "25109",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Claremont"
                        },
                        new
                        {
                            Id = 337,
                            BankId = 5,
                            BranchCode = "25309",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Constantia"
                        },
                        new
                        {
                            Id = 338,
                            BankId = 5,
                            BranchCode = "50111",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Darling"
                        },
                        new
                        {
                            Id = 339,
                            BankId = 5,
                            BranchCode = "50107",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "De Doorns"
                        },
                        new
                        {
                            Id = 340,
                            BankId = 5,
                            BranchCode = "50114",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "De rust"
                        },
                        new
                        {
                            Id = 341,
                            BankId = 5,
                            BranchCode = "36009",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Fish Hoek"
                        },
                        new
                        {
                            Id = 342,
                            BankId = 5,
                            BranchCode = "25909",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Gatesville"
                        },
                        new
                        {
                            Id = 343,
                            BankId = 5,
                            BranchCode = "50214",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "George"
                        },
                        new
                        {
                            Id = 344,
                            BankId = 5,
                            BranchCode = "50212",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Grabouw"
                        },
                        new
                        {
                            Id = 345,
                            BankId = 5,
                            BranchCode = "33012",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Helderberg"
                        },
                        new
                        {
                            Id = 346,
                            BankId = 5,
                            BranchCode = "50312",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Hermanus"
                        },
                        new
                        {
                            Id = 347,
                            BankId = 5,
                            BranchCode = "25909",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Khayelitsha"
                        },
                        new
                        {
                            Id = 348,
                            BankId = 5,
                            BranchCode = "50314",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Knysna"
                        },
                        new
                        {
                            Id = 349,
                            BankId = 5,
                            BranchCode = "26209",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Kromboom"
                        },
                        new
                        {
                            Id = 350,
                            BankId = 5,
                            BranchCode = "50611",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Laaiplek"
                        },
                        new
                        {
                            Id = 351,
                            BankId = 5,
                            BranchCode = "50113",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Ladismith"
                        },
                        new
                        {
                            Id = 352,
                            BankId = 5,
                            BranchCode = "50206",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Lamberts Bay"
                        },
                        new
                        {
                            Id = 353,
                            BankId = 5,
                            BranchCode = "50507",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Malmesbury"
                        },
                        new
                        {
                            Id = 354,
                            BankId = 5,
                            BranchCode = "26509",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Milnerton"
                        },
                        new
                        {
                            Id = 355,
                            BankId = 5,
                            BranchCode = "50213",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Montagu"
                        },
                        new
                        {
                            Id = 356,
                            BankId = 5,
                            BranchCode = "50414",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mossel Bay"
                        },
                        new
                        {
                            Id = 357,
                            BankId = 5,
                            BranchCode = "24909",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mowbray"
                        },
                        new
                        {
                            Id = 358,
                            BankId = 5,
                            BranchCode = "50514",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Oudtshoorn"
                        },
                        new
                        {
                            Id = 359,
                            BankId = 5,
                            BranchCode = "50210",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Paarl"
                        },
                        new
                        {
                            Id = 360,
                            BankId = 5,
                            BranchCode = "31110",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Parow"
                        },
                        new
                        {
                            Id = 361,
                            BankId = 5,
                            BranchCode = "50411",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Piketberg"
                        },
                        new
                        {
                            Id = 362,
                            BankId = 5,
                            BranchCode = "36309",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pinelands"
                        },
                        new
                        {
                            Id = 363,
                            BankId = 5,
                            BranchCode = "50714",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Plettenberg Bay"
                        },
                        new
                        {
                            Id = 364,
                            BankId = 5,
                            BranchCode = "50207",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Porterville"
                        },
                        new
                        {
                            Id = 365,
                            BankId = 5,
                            BranchCode = "26609",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Promenade"
                        },
                        new
                        {
                            Id = 366,
                            BankId = 5,
                            BranchCode = "50413",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Robertson"
                        },
                        new
                        {
                            Id = 367,
                            BankId = 5,
                            BranchCode = "25009",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Rondebosch"
                        },
                        new
                        {
                            Id = 368,
                            BankId = 5,
                            BranchCode = "33012",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Somerset mall"
                        },
                        new
                        {
                            Id = 369,
                            BankId = 5,
                            BranchCode = "50610",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Stellenbosch"
                        },
                        new
                        {
                            Id = 370,
                            BankId = 5,
                            BranchCode = "50513",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Swellendam"
                        },
                        new
                        {
                            Id = 371,
                            BankId = 5,
                            BranchCode = "102510",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Thibault Square"
                        },
                        new
                        {
                            Id = 372,
                            BankId = 5,
                            BranchCode = "50410",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Tyger Manor"
                        },
                        new
                        {
                            Id = 373,
                            BankId = 5,
                            BranchCode = "50215",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Uniondale"
                        },
                        new
                        {
                            Id = 374,
                            BankId = 5,
                            BranchCode = "25909",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Vangate Mall"
                        },
                        new
                        {
                            Id = 375,
                            BankId = 5,
                            BranchCode = "50511",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Vredenburg"
                        },
                        new
                        {
                            Id = 376,
                            BankId = 5,
                            BranchCode = "50706",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Vredendal"
                        },
                        new
                        {
                            Id = 377,
                            BankId = 5,
                            BranchCode = "50710",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Wellington"
                        },
                        new
                        {
                            Id = 378,
                            BankId = 5,
                            BranchCode = "50407",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Worcester"
                        },
                        new
                        {
                            Id = 379,
                            BankId = 5,
                            BranchCode = "25309",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Wynberg"
                        },
                        new
                        {
                            Id = 380,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Beaufort- West"
                        },
                        new
                        {
                            Id = 381,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Blue Route Centre"
                        },
                        new
                        {
                            Id = 382,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "BLUE ROUTE MALL, TOKAI"
                        },
                        new
                        {
                            Id = 383,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Hyde Park"
                        },
                        new
                        {
                            Id = 384,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Johannesburg"
                        },
                        new
                        {
                            Id = 385,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Kroomboom"
                        },
                        new
                        {
                            Id = 386,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "LAMBERSBAAI"
                        },
                        new
                        {
                            Id = 387,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "LAMBERTSBAAI"
                        },
                        new
                        {
                            Id = 388,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Lambertsbay"
                        },
                        new
                        {
                            Id = 389,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "MISGUND"
                        },
                        new
                        {
                            Id = 390,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mobray"
                        },
                        new
                        {
                            Id = 391,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mosselbaai"
                        },
                        new
                        {
                            Id = 392,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mosselbay"
                        },
                        new
                        {
                            Id = 393,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mowbray Cape Town"
                        },
                        new
                        {
                            Id = 394,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Parow centre"
                        },
                        new
                        {
                            Id = 395,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "PORTVILLE"
                        },
                        new
                        {
                            Id = 396,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Promenade 1"
                        },
                        new
                        {
                            Id = 397,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Prominade"
                        },
                        new
                        {
                            Id = 398,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "PROMINADE 1"
                        },
                        new
                        {
                            Id = 399,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Somerset West"
                        },
                        new
                        {
                            Id = 400,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Thibaullt Square"
                        },
                        new
                        {
                            Id = 401,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Tygar Manor"
                        },
                        new
                        {
                            Id = 402,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "TYGER MINOR"
                        },
                        new
                        {
                            Id = 403,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "tyger minor duplicate"
                        },
                        new
                        {
                            Id = 404,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "TYGERMINOR"
                        },
                        new
                        {
                            Id = 405,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "TYGOR MINOR"
                        },
                        new
                        {
                            Id = 406,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Universal Code"
                        },
                        new
                        {
                            Id = 407,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Van Rhynsdorp"
                        },
                        new
                        {
                            Id = 408,
                            BankId = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "VANGATE"
                        },
                        new
                        {
                            Id = 409,
                            BankId = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Walvis Bay"
                        },
                        new
                        {
                            Id = 410,
                            BankId = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "All Branches"
                        },
                        new
                        {
                            Id = 411,
                            BankId = 7,
                            BranchCode = "450109",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Cape Town"
                        },
                        new
                        {
                            Id = 412,
                            BankId = 7,
                            BranchCode = "198765",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Oudtshoorn"
                        },
                        new
                        {
                            Id = 413,
                            BankId = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "All Branches"
                        },
                        new
                        {
                            Id = 414,
                            BankId = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Bloemfontein"
                        },
                        new
                        {
                            Id = 415,
                            BankId = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "LANGA"
                        },
                        new
                        {
                            Id = 416,
                            BankId = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Phillipi Post Office"
                        },
                        new
                        {
                            Id = 417,
                            BankId = 8,
                            BranchCode = "26209",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Kromboom"
                        },
                        new
                        {
                            Id = 418,
                            BankId = 8,
                            BranchCode = "51001",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Oudtshoorn"
                        },
                        new
                        {
                            Id = 419,
                            BankId = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "All Branches"
                        },
                        new
                        {
                            Id = 420,
                            BankId = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Kroomboom"
                        },
                        new
                        {
                            Id = 421,
                            BankId = 9,
                            BranchCode = "000000",
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Default"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.Directorate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Directorates", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "",
                            IsActive = false,
                            Name = "Children and Families"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "",
                            IsActive = false,
                            Name = "Community Development"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "",
                            IsActive = false,
                            Name = "ECD & Partial Care"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "",
                            IsActive = false,
                            Name = "Facility Management"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "",
                            IsActive = false,
                            Name = "Partnership Development"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Restorative Services new 2021 VEP, CP, SA",
                            IsActive = false,
                            Name = "Restorative Services"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "",
                            IsActive = false,
                            Name = "Social Crime Prevention"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "",
                            IsActive = false,
                            Name = "Special Programmes"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.DistrictCouncil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DistrictCouncils", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Cape Winelands"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Central Karoo"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "City of Cape Town"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Eden"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Overberg"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "West Coast"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.FacilityClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FacilityClasses", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mobile Service"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Health Post"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Special School"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Non-medical Site"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Reproductive Health Centre"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Primary School"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Community Day Centre"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Intermediate Care"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Private Pharmacy"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Occupational Health Centre"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Clinic"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Independent Cons Rooms - General Practitioner"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Private Hospital"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Independent Cons Rooms - Registered Practitioner"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Community Health Centre"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Private Clinic"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Community Health Centre (After hours)"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Dental Clinic"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Day Care Centre"
                        },
                        new
                        {
                            Id = 20,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Home Based Care"
                        },
                        new
                        {
                            Id = 21,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Correctional Centre"
                        },
                        new
                        {
                            Id = 22,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Hospice unit"
                        },
                        new
                        {
                            Id = 23,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Satellite Clinic"
                        },
                        new
                        {
                            Id = 24,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Specialised Rehabilitation Unit"
                        },
                        new
                        {
                            Id = 25,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Specialised TB Hospital"
                        },
                        new
                        {
                            Id = 26,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Community Health Centre / Clinic"
                        },
                        new
                        {
                            Id = 27,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "District Hospital"
                        },
                        new
                        {
                            Id = 28,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Sickbay"
                        },
                        new
                        {
                            Id = 29,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pharmacy Depot"
                        },
                        new
                        {
                            Id = 30,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Step Down Facility"
                        },
                        new
                        {
                            Id = 31,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Environmental Health Office"
                        },
                        new
                        {
                            Id = 32,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Health Promotion Service"
                        },
                        new
                        {
                            Id = 33,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Special Clinic"
                        },
                        new
                        {
                            Id = 34,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "EMS Station"
                        },
                        new
                        {
                            Id = 35,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Frail Care Centre"
                        },
                        new
                        {
                            Id = 36,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Specialised Oral Health Centre"
                        },
                        new
                        {
                            Id = 37,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Regional Hospital"
                        },
                        new
                        {
                            Id = 38,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Medical Centre"
                        },
                        new
                        {
                            Id = 39,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Forensic Pathology Service"
                        },
                        new
                        {
                            Id = 40,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Specialised Hospital"
                        },
                        new
                        {
                            Id = 41,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Midwife Obstetrics Unit"
                        },
                        new
                        {
                            Id = 42,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Independent Cons Rooms - Specialist"
                        },
                        new
                        {
                            Id = 43,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "National Central Hospital"
                        },
                        new
                        {
                            Id = 44,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Engineering services"
                        },
                        new
                        {
                            Id = 45,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "School Health Services Unit"
                        },
                        new
                        {
                            Id = 46,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Early Childhood Development Centre"
                        },
                        new
                        {
                            Id = 47,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Educare Centre"
                        },
                        new
                        {
                            Id = 48,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pre-primary School"
                        },
                        new
                        {
                            Id = 49,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Creche"
                        },
                        new
                        {
                            Id = 50,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Secondary School"
                        },
                        new
                        {
                            Id = 51,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Combined School"
                        },
                        new
                        {
                            Id = 52,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Intermediate School"
                        },
                        new
                        {
                            Id = 53,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Preparatory School"
                        },
                        new
                        {
                            Id = 54,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Military Hospital"
                        },
                        new
                        {
                            Id = 55,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Specialised Psychiatric Hospital"
                        },
                        new
                        {
                            Id = 56,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Tertiary Hospital"
                        },
                        new
                        {
                            Id = 57,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Laundry Service"
                        },
                        new
                        {
                            Id = 58,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Organisational unit"
                        },
                        new
                        {
                            Id = 59,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Primary Distribution Site"
                        },
                        new
                        {
                            Id = 60,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Records Repository"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.FacilityDistrict", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FacilityDistricts", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Cape Winelands District Municipality"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "City of Cape Town Metropolitan Municipality"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "West Coast District Municipality"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Overberg District Municipality"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Garden Route District Municipality"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Central Karoo District Municipality"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.FacilitySubDistrict", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<int>("FacilityDistrictId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilityDistrictId");

                    b.ToTable("FacilitySubDistricts", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 1,
                            IsActive = false,
                            Name = "Breede Valley Local Municipality"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 1,
                            IsActive = false,
                            Name = "Stellenbosch Local Municipality"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 1,
                            IsActive = false,
                            Name = "Drakenstein Local Municipality"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 1,
                            IsActive = false,
                            Name = "Witzenberg Local Municipality"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 1,
                            IsActive = false,
                            Name = "Langeberg Local Municipality"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 2,
                            IsActive = false,
                            Name = "Khayelitsha Health sub-District"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 2,
                            IsActive = false,
                            Name = "Cape Town Eastern Health sub-District"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 2,
                            IsActive = false,
                            Name = "Cape Town Southern Health sub-District"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 2,
                            IsActive = false,
                            Name = "Cape Town Northern Health sub-District"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 2,
                            IsActive = false,
                            Name = "Klipfontein Health sub-District"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 2,
                            IsActive = false,
                            Name = "Cape Town Western Health sub-District"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 2,
                            IsActive = false,
                            Name = "Tygerberg Health sub-District"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 2,
                            IsActive = false,
                            Name = "Mitchells Plain Health sub-District"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 3,
                            IsActive = false,
                            Name = "Matzikama Local Municipality"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 3,
                            IsActive = false,
                            Name = "Saldanha Bay Local Municipality"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 3,
                            IsActive = false,
                            Name = "Cederberg Local Municipality"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 3,
                            IsActive = false,
                            Name = "Bergrivier Local Municipality"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 3,
                            IsActive = false,
                            Name = "Swartland Local Municipality"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 4,
                            IsActive = false,
                            Name = "Overstrand Local Municipality"
                        },
                        new
                        {
                            Id = 20,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 4,
                            IsActive = false,
                            Name = "Theewaterskloof Local Municipality"
                        },
                        new
                        {
                            Id = 21,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 4,
                            IsActive = false,
                            Name = "Cape Agulhas Local Municipality"
                        },
                        new
                        {
                            Id = 22,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 4,
                            IsActive = false,
                            Name = "Swellendam Local Municipality"
                        },
                        new
                        {
                            Id = 23,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 5,
                            IsActive = false,
                            Name = "Bitou Local Municipality"
                        },
                        new
                        {
                            Id = 24,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 5,
                            IsActive = false,
                            Name = "Mossel Bay Local Municipality"
                        },
                        new
                        {
                            Id = 25,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 5,
                            IsActive = false,
                            Name = "Knysna Local Municipality"
                        },
                        new
                        {
                            Id = 26,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 5,
                            IsActive = false,
                            Name = "George Local Municipality"
                        },
                        new
                        {
                            Id = 27,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 5,
                            IsActive = false,
                            Name = "Hessequa Local Municipality"
                        },
                        new
                        {
                            Id = 28,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 5,
                            IsActive = false,
                            Name = "Kannaland Local Municipality"
                        },
                        new
                        {
                            Id = 29,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 5,
                            IsActive = false,
                            Name = "Oudtshoorn Local Municipality"
                        },
                        new
                        {
                            Id = 30,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 6,
                            IsActive = false,
                            Name = "Beaufort West Local Municipality"
                        },
                        new
                        {
                            Id = 31,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 6,
                            IsActive = false,
                            Name = "Laingsburg Local Municipality"
                        },
                        new
                        {
                            Id = 32,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FacilityDistrictId = 6,
                            IsActive = false,
                            Name = "Prince Albert Local Municipality"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.FacilityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FacilityTypes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Facility"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Community Place"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.Frequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Frequencies", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Annually",
                            SystemName = "Annually"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Monthly",
                            SystemName = "Monthly"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Quarterly",
                            SystemName = "Quarterly"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Adhoc",
                            SystemName = "Adhoc"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.FrequencyPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<int>("FrequencyId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FrequencyPeriods", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 1,
                            IsActive = false,
                            Name = "Annual",
                            SystemName = "Annual"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 2,
                            IsActive = false,
                            Name = "April",
                            SystemName = "Apr"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 2,
                            IsActive = false,
                            Name = "May",
                            SystemName = "May"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 2,
                            IsActive = false,
                            Name = "June",
                            SystemName = "Jun"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 2,
                            IsActive = false,
                            Name = "July",
                            SystemName = "Jul"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 2,
                            IsActive = false,
                            Name = "August",
                            SystemName = "Aug"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 2,
                            IsActive = false,
                            Name = "September",
                            SystemName = "Sep"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 2,
                            IsActive = false,
                            Name = "October",
                            SystemName = "Oct"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 2,
                            IsActive = false,
                            Name = "November",
                            SystemName = "Nov"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 2,
                            IsActive = false,
                            Name = "December",
                            SystemName = "Dec"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 2,
                            IsActive = false,
                            Name = "January",
                            SystemName = "Jan"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 2,
                            IsActive = false,
                            Name = "February",
                            SystemName = "Feb"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 2,
                            IsActive = false,
                            Name = "March",
                            SystemName = "Mar"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 3,
                            IsActive = false,
                            Name = "Quarter1",
                            SystemName = "Q1"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 3,
                            IsActive = false,
                            Name = "Quarter2",
                            SystemName = "Q2"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 3,
                            IsActive = false,
                            Name = "Quarter3",
                            SystemName = "Q3"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            FrequencyId = 3,
                            IsActive = false,
                            Name = "Quarter4",
                            SystemName = "Q4"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.FundingTemplateType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FundingTemplateTypes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = true,
                            Name = "Funding Application Template",
                            SystemName = "FundingApplicationTemplate"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = true,
                            Name = "Score Card Template",
                            SystemName = "ScoreCardTemplate"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Gender", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Female"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Male"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Languages", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Afrikaans"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "English"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "isiXhosha"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.LocalMunicipality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<int>("DistrictCouncilId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DistrictCouncilId");

                    b.ToTable("LocalMunicipalities", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 26,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 8,
                            IsActive = false,
                            Name = "Beaufort West"
                        },
                        new
                        {
                            Id = 27,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 12,
                            IsActive = false,
                            Name = "Bergrivier"
                        },
                        new
                        {
                            Id = 28,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 10,
                            IsActive = false,
                            Name = "Bitou"
                        },
                        new
                        {
                            Id = 29,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 7,
                            IsActive = false,
                            Name = "Breede Valley"
                        },
                        new
                        {
                            Id = 30,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 11,
                            IsActive = false,
                            Name = "Cape Agulhas"
                        },
                        new
                        {
                            Id = 31,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 12,
                            IsActive = false,
                            Name = "Cederberg"
                        },
                        new
                        {
                            Id = 32,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 9,
                            IsActive = false,
                            Name = "City of Cape Town"
                        },
                        new
                        {
                            Id = 33,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 7,
                            IsActive = false,
                            Name = "Drakenstein"
                        },
                        new
                        {
                            Id = 34,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 10,
                            IsActive = false,
                            Name = "George "
                        },
                        new
                        {
                            Id = 35,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 10,
                            IsActive = false,
                            Name = "Hessequa"
                        },
                        new
                        {
                            Id = 36,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 10,
                            IsActive = false,
                            Name = "Kannaland"
                        },
                        new
                        {
                            Id = 37,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 10,
                            IsActive = false,
                            Name = "Knysna"
                        },
                        new
                        {
                            Id = 38,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 8,
                            IsActive = false,
                            Name = "Laingsburg"
                        },
                        new
                        {
                            Id = 39,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 7,
                            IsActive = false,
                            Name = "Langeberg"
                        },
                        new
                        {
                            Id = 40,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 12,
                            IsActive = false,
                            Name = "Matzikama"
                        },
                        new
                        {
                            Id = 41,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 10,
                            IsActive = false,
                            Name = "Mossel Bay"
                        },
                        new
                        {
                            Id = 42,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 10,
                            IsActive = false,
                            Name = "Oudtshoorn"
                        },
                        new
                        {
                            Id = 43,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 11,
                            IsActive = false,
                            Name = "Overstrand"
                        },
                        new
                        {
                            Id = 44,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 8,
                            IsActive = false,
                            Name = "Prince Albert"
                        },
                        new
                        {
                            Id = 45,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 12,
                            IsActive = false,
                            Name = "Saldanha Bay"
                        },
                        new
                        {
                            Id = 46,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 7,
                            IsActive = false,
                            Name = "Stellenbosch"
                        },
                        new
                        {
                            Id = 47,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 12,
                            IsActive = false,
                            Name = "Swartland"
                        },
                        new
                        {
                            Id = 48,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 11,
                            IsActive = false,
                            Name = "Swellendam"
                        },
                        new
                        {
                            Id = 49,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 11,
                            IsActive = false,
                            Name = "Theewaterskloof"
                        },
                        new
                        {
                            Id = 50,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DistrictCouncilId = 7,
                            IsActive = false,
                            Name = "Witzenberg"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.OrganisationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OrganisationTypes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Non Profit Organisation",
                            IsActive = false,
                            Name = "NPO"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Non Profit Company registered as NPO",
                            IsActive = false,
                            Name = "NPO/NPC"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Trust registered as NPO",
                            IsActive = false,
                            Name = "NPO/Trust"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Voluntary organization registered as NPO",
                            IsActive = false,
                            Name = "NPO/VA"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Other Description",
                            IsActive = false,
                            Name = "Others"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Section 21 Company",
                            IsActive = false,
                            Name = "Section 21 Company"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Sport Description",
                            IsActive = false,
                            Name = "Sport"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Trust Description",
                            IsActive = false,
                            Name = "Trust"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Pty Ltd",
                            IsActive = false,
                            Name = "Pty Ltd"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Close Corporation",
                            IsActive = false,
                            Name = "CC"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "In Process of ECD Registration",
                            IsActive = false,
                            Name = "Reg-ECD"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "In Progress of Older Person Registration",
                            IsActive = false,
                            Name = "Reg-Old Person"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Non Governmental Organisation",
                            IsActive = false,
                            Name = "NGO"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("ExternalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServiceDeliveryAreaId")
                        .HasColumnType("int");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServiceDeliveryAreaId");

                    b.ToTable("Places", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Athlone",
                            ServiceDeliveryAreaId = 175,
                            SystemName = "PL9"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Atlantis",
                            ServiceDeliveryAreaId = 176,
                            SystemName = "PL12"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Belhar",
                            ServiceDeliveryAreaId = 178,
                            SystemName = "PL19"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Bellville",
                            ServiceDeliveryAreaId = 178,
                            SystemName = "PL21"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Cape Farms",
                            ServiceDeliveryAreaId = 176,
                            SystemName = "PL51"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Cape Metro",
                            ServiceDeliveryAreaId = 176,
                            SystemName = "PL52"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Cape Metro",
                            ServiceDeliveryAreaId = 178,
                            SystemName = "PL53"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Cape Town",
                            ServiceDeliveryAreaId = 175,
                            SystemName = "PL54"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Positions", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Admin Assistant"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Administrative Manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Board Member"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "CEO"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "COO"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Director"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Finance Officer"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Fundraising Officer"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Grants Manager"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Operations Director"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Supervisor"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Other"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Principal"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "ECD Learner"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Chairperson"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Deputy Chairperson"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Secretary"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Treasurer"
                        },
                        new
                        {
                            Id = 20,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Additional Member"
                        },
                        new
                        {
                            Id = 21,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Social Service Clerk"
                        },
                        new
                        {
                            Id = 22,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Project Manager"
                        },
                        new
                        {
                            Id = 23,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Programme Manager"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.Programme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("DirectorateId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Programmes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 1,
                            Description = "All Programmes",
                            IsActive = false,
                            Name = "All Programmes"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 11,
                            Description = "Chronic Diseases and Non-Communicable Diseases",
                            IsActive = false,
                            Name = "Chronic Diseases and Non-Communicable Diseases"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 11,
                            Description = "HIV/AIDS, TB, STI",
                            IsActive = false,
                            Name = "HIV/AIDS, TB, STI"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 11,
                            Description = "Maternal, Women and Child Health",
                            IsActive = false,
                            Name = "Maternal, Women and Child Health"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 11,
                            Description = "Theatre, Surgery and Aneasthetics",
                            IsActive = false,
                            Name = "Theatre, Surgery and Aneasthetics"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 11,
                            Description = "Mental Health",
                            IsActive = false,
                            Name = "Mental Health"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 11,
                            Description = "Emergency Centre Presures",
                            IsActive = false,
                            Name = "Emergency Centre Presures"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "Care and Support to Families",
                            DirectorateId = 1,
                            IsActive = false,
                            Name = "Care and Support to Families"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "Child Care and Protection Services",
                            DirectorateId = 1,
                            IsActive = false,
                            Name = "Child Care and Protection Services"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "Crime Prevention",
                            DirectorateId = 7,
                            IsActive = false,
                            Name = "Crime Prevention"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "ECD & Partial Care",
                            DirectorateId = 3,
                            IsActive = false,
                            Name = "ECD & Partial Care"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "EPWP",
                            DirectorateId = 2,
                            IsActive = false,
                            Name = "EPWP"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "Facility Managment",
                            DirectorateId = 4,
                            IsActive = false,
                            Name = "Facility Managment"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "Institutional Capacity Building",
                            DirectorateId = 5,
                            IsActive = false,
                            Name = "Institutional Capacity Building"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "Care and Services to Older Persons",
                            DirectorateId = 8,
                            IsActive = false,
                            Name = "Care and Services to Older Persons"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "Services to persons with Disabilities",
                            DirectorateId = 8,
                            IsActive = false,
                            Name = "Services to persons with Disabilities"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "Substance Abuse",
                            DirectorateId = 8,
                            IsActive = false,
                            Name = "Substance Abuse"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "Sustainable Livelihood",
                            DirectorateId = 2,
                            IsActive = false,
                            Name = "Sustainable Livelihood"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "Victim Empowerment",
                            DirectorateId = 7,
                            IsActive = false,
                            Name = "Victim Empowerment"
                        },
                        new
                        {
                            Id = 20,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "Youth Development",
                            DirectorateId = 2,
                            IsActive = false,
                            Name = "Youth Development"
                        },
                        new
                        {
                            Id = 21,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "Child and Youth Care Centres",
                            DirectorateId = 4,
                            IsActive = false,
                            Name = "Child and Youth Care Centres"
                        },
                        new
                        {
                            Id = 22,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            DepartmentId = 7,
                            Description = "ECD Conditional Grant",
                            DirectorateId = 3,
                            IsActive = false,
                            Name = "ECD Conditional Grant"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.PropertySubType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserID")
                        .HasColumnType("int");

                    b.Property<int?>("Frequency")
                        .HasColumnType("int");

                    b.Property<bool>("HaveComment")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyTypeID")
                        .HasColumnType("int");

                    b.Property<bool>("Repeatable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropertyTypeID");

                    b.ToTable("PropertySubTypes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7815),
                            CreatedUserID = 3,
                            Frequency = 12,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Monthly",
                            PropertyTypeID = 3,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7817),
                            CreatedUserID = 3,
                            Frequency = 1,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Annually",
                            PropertyTypeID = 3,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7818),
                            CreatedUserID = 3,
                            Frequency = 264,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "264 Days",
                            PropertyTypeID = 3,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7820),
                            CreatedUserID = 3,
                            Frequency = 240,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "240 Days",
                            PropertyTypeID = 3,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7821),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Social Worker",
                            PropertyTypeID = 2,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7822),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Social Worker Supervisor",
                            PropertyTypeID = 2,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7823),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Social Auxiliary Worker",
                            PropertyTypeID = 2,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7824),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Social Worker Manager",
                            PropertyTypeID = 2,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7825),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Community Development Practitioner",
                            PropertyTypeID = 2,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7827),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Community Development Assistant",
                            PropertyTypeID = 2,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7828),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Facilitator",
                            PropertyTypeID = 4,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7829),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Catering",
                            PropertyTypeID = 4,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7830),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Transport",
                            PropertyTypeID = 4,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7831),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Telephone",
                            PropertyTypeID = 4,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 15,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7832),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Venue Hire",
                            PropertyTypeID = 4,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 16,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7834),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Traveling",
                            PropertyTypeID = 4,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 17,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7835),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Accommodation",
                            PropertyTypeID = 4,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 18,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7836),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Training",
                            PropertyTypeID = 4,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 19,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7837),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Governance Norms and Standards",
                            PropertyTypeID = 4,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 20,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7838),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Management Fee",
                            PropertyTypeID = 4,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 21,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7839),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Other",
                            PropertyTypeID = 4,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 22,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7840),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Admin Fee",
                            PropertyTypeID = 4,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 23,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7848),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "UIF & COIDA",
                            PropertyTypeID = 4,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 24,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7864),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Social",
                            PropertyTypeID = 4,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 25,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7866),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "AAA",
                            PropertyTypeID = 4,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 26,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7867),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Skill Development",
                            PropertyTypeID = 4,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 27,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7868),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Security Upgrade & OHS Compliance 1",
                            PropertyTypeID = 4,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 28,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7869),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Security Upgrade & OHS Compliance 2",
                            PropertyTypeID = 4,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 29,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7870),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Security Upgrade & OHS Compliance 3",
                            PropertyTypeID = 4,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 30,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7871),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Travel Cost",
                            PropertyTypeID = 4,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 31,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7872),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Specialized services",
                            PropertyTypeID = 4,
                            Repeatable = true
                        },
                        new
                        {
                            Id = 32,
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7873),
                            CreatedUserID = 3,
                            HaveComment = false,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "House Mothers",
                            PropertyTypeID = 4,
                            Repeatable = true
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.PropertyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("CanDefineName")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserID")
                        .HasColumnType("int");

                    b.Property<bool>("HaveBreakDown")
                        .HasColumnType("bit");

                    b.Property<bool>("HaveFrequency")
                        .HasColumnType("bit");

                    b.Property<bool>("HaveRelatedProperty")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBusinessRule")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OnGeneralLevel")
                        .HasColumnType("bit");

                    b.Property<bool>("OnSubsidyLevel")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserID")
                        .HasColumnType("int");

                    b.Property<bool>("ValueOnGeneralLevel")
                        .HasColumnType("bit");

                    b.Property<bool>("ValueOnSybsidyLevel")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PropertyTypes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CanDefineName = false,
                            Code = "AdministrationFee",
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7719),
                            CreatedUserID = 3,
                            HaveBreakDown = false,
                            HaveFrequency = false,
                            HaveRelatedProperty = false,
                            IsActive = true,
                            IsBusinessRule = false,
                            IsDeleted = false,
                            Name = "Administration Fee (%)",
                            OnGeneralLevel = true,
                            OnSubsidyLevel = false,
                            ValueOnGeneralLevel = false,
                            ValueOnSybsidyLevel = true
                        },
                        new
                        {
                            Id = 2,
                            CanDefineName = false,
                            Code = "PostItem",
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7740),
                            CreatedUserID = 3,
                            HaveBreakDown = true,
                            HaveFrequency = false,
                            HaveRelatedProperty = false,
                            IsActive = true,
                            IsBusinessRule = false,
                            IsDeleted = false,
                            Name = "Post Cost",
                            OnGeneralLevel = true,
                            OnSubsidyLevel = true,
                            ValueOnGeneralLevel = true,
                            ValueOnSybsidyLevel = false
                        },
                        new
                        {
                            Id = 3,
                            CanDefineName = true,
                            Code = "UnitItem",
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7742),
                            CreatedUserID = 3,
                            HaveBreakDown = true,
                            HaveFrequency = true,
                            HaveRelatedProperty = false,
                            IsActive = true,
                            IsBusinessRule = false,
                            IsDeleted = false,
                            Name = "Unit Cost",
                            OnGeneralLevel = false,
                            OnSubsidyLevel = true,
                            ValueOnGeneralLevel = false,
                            ValueOnSybsidyLevel = true
                        },
                        new
                        {
                            Id = 4,
                            CanDefineName = false,
                            Code = "OperationalItem",
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7744),
                            CreatedUserID = 3,
                            HaveBreakDown = true,
                            HaveFrequency = false,
                            HaveRelatedProperty = true,
                            IsActive = true,
                            IsBusinessRule = false,
                            IsDeleted = false,
                            Name = "Operational Cost (With Break Down)",
                            OnGeneralLevel = false,
                            OnSubsidyLevel = true,
                            ValueOnGeneralLevel = false,
                            ValueOnSybsidyLevel = false
                        },
                        new
                        {
                            Id = 6,
                            CanDefineName = false,
                            Code = "RuleForSocialWorkers",
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7746),
                            CreatedUserID = 3,
                            HaveBreakDown = false,
                            HaveFrequency = false,
                            HaveRelatedProperty = true,
                            IsActive = true,
                            IsBusinessRule = true,
                            IsDeleted = false,
                            Name = "Rule For Social Workers",
                            OnGeneralLevel = false,
                            OnSubsidyLevel = true,
                            ValueOnGeneralLevel = false,
                            ValueOnSybsidyLevel = false
                        },
                        new
                        {
                            Id = 7,
                            CanDefineName = false,
                            Code = "UIFFee",
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7747),
                            CreatedUserID = 3,
                            HaveBreakDown = false,
                            HaveFrequency = false,
                            HaveRelatedProperty = false,
                            IsActive = true,
                            IsBusinessRule = false,
                            IsDeleted = false,
                            Name = "UIF Fee (%)",
                            OnGeneralLevel = true,
                            OnSubsidyLevel = true,
                            ValueOnGeneralLevel = true,
                            ValueOnSybsidyLevel = false
                        },
                        new
                        {
                            Id = 8,
                            CanDefineName = false,
                            Code = "COIDAFee",
                            CreatedDateTime = new DateTime(2023, 12, 21, 12, 7, 5, 686, DateTimeKind.Local).AddTicks(7749),
                            CreatedUserID = 3,
                            HaveBreakDown = false,
                            HaveFrequency = false,
                            HaveRelatedProperty = false,
                            IsActive = true,
                            IsBusinessRule = false,
                            IsDeleted = false,
                            Name = "COIDA Fee (%)",
                            OnGeneralLevel = true,
                            OnSubsidyLevel = false,
                            ValueOnGeneralLevel = true,
                            ValueOnSybsidyLevel = false
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.ProvisionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProvisionTypes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Provided",
                            SystemName = "Provided"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Required",
                            SystemName = "Required"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Races", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = " Black African"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Indian"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Coloured"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "White"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.RecipientType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RecipientTypes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Primary",
                            SystemName = "Primary"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Sub-Recipient",
                            SystemName = "SubRecipient"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Sub-SubRecipient",
                            SystemName = "SubSubRecipient"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<int>("LocalMunicipalityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocalMunicipalityId");

                    b.ToTable("Regions", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 49,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            LocalMunicipalityId = 32,
                            Name = "Metro East"
                        },
                        new
                        {
                            Id = 50,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            LocalMunicipalityId = 32,
                            Name = "Metro North"
                        },
                        new
                        {
                            Id = 51,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            LocalMunicipalityId = 32,
                            Name = "Metro South"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.RegistrationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RegistrationStatuses", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Registered",
                            SystemName = "Registered"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Not Registered",
                            SystemName = "NotRegistered"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "In Progress",
                            SystemName = "InProgress"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.ResourceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ResourceTypes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "HR",
                            SystemName = "HR"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Other than HR",
                            SystemName = "Other"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.ServiceDeliveryArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<int?>("ExternalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("ServiceDeliveryAreas", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 175,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Athlone",
                            RegionId = 51
                        },
                        new
                        {
                            Id = 176,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Atlantis",
                            RegionId = 50
                        },
                        new
                        {
                            Id = 178,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Bellville",
                            RegionId = 50
                        },
                        new
                        {
                            Id = 183,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Cape Town",
                            RegionId = 50
                        },
                        new
                        {
                            Id = 185,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Delft",
                            RegionId = 50
                        },
                        new
                        {
                            Id = 187,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Eersterivier",
                            RegionId = 49
                        },
                        new
                        {
                            Id = 188,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Elsies Rivier",
                            RegionId = 50
                        },
                        new
                        {
                            Id = 189,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Fish Hoek",
                            RegionId = 51
                        },
                        new
                        {
                            Id = 190,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Gugulethu",
                            RegionId = 51
                        },
                        new
                        {
                            Id = 191,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Khayelitsha",
                            RegionId = 49
                        },
                        new
                        {
                            Id = 192,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Khayelitsha 2",
                            RegionId = 49
                        },
                        new
                        {
                            Id = 193,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Khayelitsha 3",
                            RegionId = 49
                        },
                        new
                        {
                            Id = 194,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Kraaifontein",
                            RegionId = 49
                        },
                        new
                        {
                            Id = 195,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Langa",
                            RegionId = 50
                        },
                        new
                        {
                            Id = 196,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Milnerton",
                            RegionId = 50
                        },
                        new
                        {
                            Id = 197,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mitchell's Plain 1",
                            RegionId = 51
                        },
                        new
                        {
                            Id = 198,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mitchell's Plain 2",
                            RegionId = 51
                        },
                        new
                        {
                            Id = 199,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Philippi",
                            RegionId = 51
                        },
                        new
                        {
                            Id = 200,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Retreat",
                            RegionId = 51
                        },
                        new
                        {
                            Id = 201,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Somerset West",
                            RegionId = 49
                        },
                        new
                        {
                            Id = 202,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Wynberg",
                            RegionId = 51
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.ServiceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ServiceTypes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Direct Service Delivery",
                            SystemName = "Direct"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Non-Direct Service Delivery",
                            SystemName = "Non-Direct"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.StaffCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StaffCategories", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Managers",
                            SystemName = "Managers"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Professional staff",
                            SystemName = "ProfessionalStaff"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Admin support",
                            SystemName = "AdminSupport"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Part-time staff",
                            SystemName = "PartTimeStaff"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Volunteers",
                            SystemName = "Volunteers"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Other",
                            SystemName = "Other"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.SubPlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("ExternalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.ToTable("SubPlaces", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Athlone SP",
                            PlaceId = 1,
                            SystemName = "SP28"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Belgravia(Athlone)",
                            PlaceId = 1,
                            SystemName = "SP66"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Atlantis Industrial",
                            PlaceId = 2,
                            SystemName = "SP29"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Avondale SP1",
                            PlaceId = 2,
                            SystemName = "SP36"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Belhar 1",
                            PlaceId = 3,
                            SystemName = "SP68"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Belhar 10",
                            PlaceId = 3,
                            SystemName = "SP69"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Bellville Central",
                            PlaceId = 4,
                            SystemName = "SP95"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Bellville Lot 1",
                            PlaceId = 4,
                            SystemName = "SP96"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Papekuil Outspan",
                            PlaceId = 5,
                            SystemName = "SP1040"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Cape Metro NU1",
                            PlaceId = 6,
                            SystemName = "SP239"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Cape Metro NU2",
                            PlaceId = 6,
                            SystemName = "SP240"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Cape Metro NU3",
                            PlaceId = 7,
                            SystemName = "SP241"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Buckingham",
                            PlaceId = 8,
                            SystemName = "SP226"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Crawford",
                            PlaceId = 8,
                            SystemName = "SP289"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.SubProgramme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ProgrammeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SubProgrammes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "All Sub-Programmes",
                            IsActive = false,
                            Name = "All Sub-Programmes",
                            ProgrammeId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Chronic Diseases",
                            IsActive = false,
                            Name = "Chronic Diseases",
                            ProgrammeId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "NCDs",
                            IsActive = false,
                            Name = "NCDs",
                            ProgrammeId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "HIV/AIDS",
                            IsActive = false,
                            Name = "HIV/AIDS",
                            ProgrammeId = 3
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "TB",
                            IsActive = false,
                            Name = "TB",
                            ProgrammeId = 3
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "STI",
                            IsActive = false,
                            Name = "STI",
                            ProgrammeId = 3
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Maternal Health",
                            IsActive = false,
                            Name = "Maternal Health",
                            ProgrammeId = 4
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Women's Health",
                            IsActive = false,
                            Name = "Women's Health",
                            ProgrammeId = 4
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Child and Adolescent Health",
                            IsActive = false,
                            Name = "Child and Adolescent Health",
                            ProgrammeId = 4
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Theatre",
                            IsActive = false,
                            Name = "Theatre",
                            ProgrammeId = 5
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Surgery",
                            IsActive = false,
                            Name = "Surgery",
                            ProgrammeId = 5
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Anaethetics",
                            IsActive = false,
                            Name = "Anaethetics",
                            ProgrammeId = 5
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Mental Health",
                            IsActive = false,
                            Name = "Mental Health",
                            ProgrammeId = 6
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Emerency Centre Pressures",
                            IsActive = false,
                            Name = "Emerency Centre Pressures",
                            ProgrammeId = 7
                        },
                        new
                        {
                            Id = 15,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            ProgrammeId = 8
                        },
                        new
                        {
                            Id = 16,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Shelter For Adults",
                            IsActive = false,
                            Name = "Shelter For Adults",
                            ProgrammeId = 8
                        },
                        new
                        {
                            Id = 17,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            ProgrammeId = 8
                        },
                        new
                        {
                            Id = 18,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Drop In Centres",
                            IsActive = false,
                            Name = "Drop In Centres",
                            ProgrammeId = 9
                        },
                        new
                        {
                            Id = 19,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            ProgrammeId = 9
                        },
                        new
                        {
                            Id = 20,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            ProgrammeId = 9
                        },
                        new
                        {
                            Id = 21,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Shelter for Children",
                            IsActive = false,
                            Name = "Shelter for Children",
                            ProgrammeId = 9
                        },
                        new
                        {
                            Id = 22,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "HIV - Aids",
                            IsActive = false,
                            Name = "HIV - Aids",
                            ProgrammeId = 9
                        },
                        new
                        {
                            Id = 23,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            ProgrammeId = 10
                        },
                        new
                        {
                            Id = 24,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            ProgrammeId = 10
                        },
                        new
                        {
                            Id = 25,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "After School Centres",
                            IsActive = false,
                            Name = "After School Centres",
                            ProgrammeId = 11
                        },
                        new
                        {
                            Id = 26,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Creches",
                            IsActive = false,
                            Name = "Creches",
                            ProgrammeId = 11
                        },
                        new
                        {
                            Id = 27,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            ProgrammeId = 11
                        },
                        new
                        {
                            Id = 28,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            ProgrammeId = 11
                        },
                        new
                        {
                            Id = 29,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            ProgrammeId = 12
                        },
                        new
                        {
                            Id = 30,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "EPWP - Conditional Grant",
                            IsActive = false,
                            Name = "EPWP - Conditional Grant",
                            ProgrammeId = 12
                        },
                        new
                        {
                            Id = 31,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            ProgrammeId = 12
                        },
                        new
                        {
                            Id = 32,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Child and Youth Care Centres",
                            IsActive = false,
                            Name = "Child and Youth Care Centres",
                            ProgrammeId = 13
                        },
                        new
                        {
                            Id = 33,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            ProgrammeId = 13
                        },
                        new
                        {
                            Id = 34,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Shelter for Childen",
                            IsActive = false,
                            Name = "Shelter for Childen",
                            ProgrammeId = 13
                        },
                        new
                        {
                            Id = 35,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            ProgrammeId = 14
                        },
                        new
                        {
                            Id = 36,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            ProgrammeId = 14
                        },
                        new
                        {
                            Id = 37,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Assisted Living",
                            IsActive = false,
                            Name = "Assisted Living",
                            ProgrammeId = 15
                        },
                        new
                        {
                            Id = 38,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Homes for the Aged",
                            IsActive = false,
                            Name = "Homes for the Aged",
                            ProgrammeId = 15
                        },
                        new
                        {
                            Id = 39,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            ProgrammeId = 15
                        },
                        new
                        {
                            Id = 40,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            ProgrammeId = 15
                        },
                        new
                        {
                            Id = 41,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Service Centres",
                            IsActive = false,
                            Name = "Service Centres",
                            ProgrammeId = 15
                        },
                        new
                        {
                            Id = 42,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Independent Living",
                            IsActive = false,
                            Name = "Independent Living",
                            ProgrammeId = 15
                        },
                        new
                        {
                            Id = 43,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Community Based Care and Support Services",
                            IsActive = false,
                            Name = "Community Based Care and Support Services",
                            ProgrammeId = 15
                        },
                        new
                        {
                            Id = 44,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Homes for the Disabled",
                            IsActive = false,
                            Name = "Homes for the Disabled",
                            ProgrammeId = 16
                        },
                        new
                        {
                            Id = 45,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            ProgrammeId = 16
                        },
                        new
                        {
                            Id = 46,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Protective Workshops",
                            IsActive = false,
                            Name = "Protective Workshops",
                            ProgrammeId = 16
                        },
                        new
                        {
                            Id = 47,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            ProgrammeId = 16
                        },
                        new
                        {
                            Id = 48,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Special Day Care Centres",
                            IsActive = false,
                            Name = "Special Day Care Centres",
                            ProgrammeId = 16
                        },
                        new
                        {
                            Id = 49,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Day Care Centre",
                            IsActive = false,
                            Name = "Day Care Centre",
                            ProgrammeId = 16
                        },
                        new
                        {
                            Id = 50,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Homes for the Aged",
                            IsActive = false,
                            Name = "Homes for the Aged",
                            ProgrammeId = 16
                        },
                        new
                        {
                            Id = 51,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Aftercare",
                            IsActive = false,
                            Name = "Aftercare",
                            ProgrammeId = 17
                        },
                        new
                        {
                            Id = 52,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Awareness",
                            IsActive = false,
                            Name = "Awareness",
                            ProgrammeId = 17
                        },
                        new
                        {
                            Id = 53,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Community Based Treatment",
                            IsActive = false,
                            Name = "Community Based Treatment",
                            ProgrammeId = 17
                        },
                        new
                        {
                            Id = 54,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Early Intervention",
                            IsActive = false,
                            Name = "Early Intervention",
                            ProgrammeId = 17
                        },
                        new
                        {
                            Id = 55,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            ProgrammeId = 17
                        },
                        new
                        {
                            Id = 56,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            ProgrammeId = 17
                        },
                        new
                        {
                            Id = 57,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Treatment Centres",
                            IsActive = false,
                            Name = "Treatment Centres",
                            ProgrammeId = 17
                        },
                        new
                        {
                            Id = 58,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            ProgrammeId = 18
                        },
                        new
                        {
                            Id = 59,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            ProgrammeId = 19
                        },
                        new
                        {
                            Id = 60,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Shelter For Victims of Violence",
                            IsActive = false,
                            Name = "Shelter For Victims of Violence",
                            ProgrammeId = 19
                        },
                        new
                        {
                            Id = 61,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            ProgrammeId = 19
                        },
                        new
                        {
                            Id = 62,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            ProgrammeId = 20
                        },
                        new
                        {
                            Id = 63,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            ProgrammeId = 20
                        },
                        new
                        {
                            Id = 64,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Youth Cafe",
                            IsActive = false,
                            Name = "Youth Cafe",
                            ProgrammeId = 20
                        },
                        new
                        {
                            Id = 65,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Childrens Homes",
                            IsActive = false,
                            Name = "Childrens Homes",
                            ProgrammeId = 21
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.SubProgrammeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("SubProgrammeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SubProgrammeTypes", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "All Sub-Programme Types",
                            IsActive = false,
                            Name = "All Sub-Programme Types",
                            SubProgrammeId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Chronic Diseases",
                            IsActive = false,
                            Name = "Chronic Diseases",
                            SubProgrammeId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "NCDs",
                            IsActive = false,
                            Name = "NCDs",
                            SubProgrammeId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "HIV/AIDS",
                            IsActive = false,
                            Name = "HIV/AIDS",
                            SubProgrammeId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "TB",
                            IsActive = false,
                            Name = "TB",
                            SubProgrammeId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "STI",
                            IsActive = false,
                            Name = "STI",
                            SubProgrammeId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Maternal Health",
                            IsActive = false,
                            Name = "Maternal Health",
                            SubProgrammeId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Women's Health",
                            IsActive = false,
                            Name = "Women's Health",
                            SubProgrammeId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Child and Adolescent Health",
                            IsActive = false,
                            Name = "Child and Adolescent Health",
                            SubProgrammeId = 9
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Theatre",
                            IsActive = false,
                            Name = "Theatre",
                            SubProgrammeId = 10
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Surgery",
                            IsActive = false,
                            Name = "Surgery",
                            SubProgrammeId = 11
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Anaethetics",
                            IsActive = false,
                            Name = "Anaethetics",
                            SubProgrammeId = 12
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Mental Health",
                            IsActive = false,
                            Name = "Mental Health",
                            SubProgrammeId = 13
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Emerency Centre Pressures",
                            IsActive = false,
                            Name = "Emerency Centre Pressures",
                            SubProgrammeId = 14
                        },
                        new
                        {
                            Id = 15,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Shelter For Adults",
                            IsActive = false,
                            Name = "Shelter For Adults",
                            SubProgrammeId = 16
                        },
                        new
                        {
                            Id = 16,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 17
                        },
                        new
                        {
                            Id = 17,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "HIV",
                            IsActive = false,
                            Name = "HIV",
                            SubProgrammeId = 20
                        },
                        new
                        {
                            Id = 18,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 20
                        },
                        new
                        {
                            Id = 19,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Childrens Homes",
                            IsActive = false,
                            Name = "Childrens Homes",
                            SubProgrammeId = 21
                        },
                        new
                        {
                            Id = 20,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Drop In Centre",
                            IsActive = false,
                            Name = "Drop In Centre",
                            SubProgrammeId = 21
                        },
                        new
                        {
                            Id = 21,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Organisation",
                            IsActive = false,
                            Name = "Organisation",
                            SubProgrammeId = 21
                        },
                        new
                        {
                            Id = 22,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Shelter for Children",
                            IsActive = false,
                            Name = "Shelter for Children",
                            SubProgrammeId = 21
                        },
                        new
                        {
                            Id = 23,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Organisations",
                            IsActive = false,
                            Name = "Organisations",
                            SubProgrammeId = 22
                        },
                        new
                        {
                            Id = 24,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            SubProgrammeId = 24
                        },
                        new
                        {
                            Id = 25,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 24
                        },
                        new
                        {
                            Id = 26,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "After School Centres",
                            IsActive = false,
                            Name = "After School Centres",
                            SubProgrammeId = 25
                        },
                        new
                        {
                            Id = 27,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Creches",
                            IsActive = false,
                            Name = "Creches",
                            SubProgrammeId = 26
                        },
                        new
                        {
                            Id = 28,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 28
                        },
                        new
                        {
                            Id = 29,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 29
                        },
                        new
                        {
                            Id = 30,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "EPWP",
                            IsActive = false,
                            Name = "EPWP",
                            SubProgrammeId = 30
                        },
                        new
                        {
                            Id = 31,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 31
                        },
                        new
                        {
                            Id = 32,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 36
                        },
                        new
                        {
                            Id = 33,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Assisted Living",
                            IsActive = false,
                            Name = "Assisted Living",
                            SubProgrammeId = 38
                        },
                        new
                        {
                            Id = 34,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Independant Living",
                            IsActive = false,
                            Name = "Independant Living",
                            SubProgrammeId = 38
                        },
                        new
                        {
                            Id = 35,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Residential Facilities",
                            IsActive = false,
                            Name = "Residential Facilities",
                            SubProgrammeId = 38
                        },
                        new
                        {
                            Id = 36,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 40
                        },
                        new
                        {
                            Id = 37,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Service Centre",
                            IsActive = false,
                            Name = "Service Centre",
                            SubProgrammeId = 41
                        },
                        new
                        {
                            Id = 38,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Home Based Care Services",
                            IsActive = false,
                            Name = "Home Based Care Services",
                            SubProgrammeId = 43
                        },
                        new
                        {
                            Id = 39,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Service Centre",
                            IsActive = false,
                            Name = "Service Centre",
                            SubProgrammeId = 43
                        },
                        new
                        {
                            Id = 40,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Residential Facilities",
                            IsActive = false,
                            Name = "Residential Facilities",
                            SubProgrammeId = 44
                        },
                        new
                        {
                            Id = 41,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Protective Workshop",
                            IsActive = false,
                            Name = "Protective Workshop",
                            SubProgrammeId = 46
                        },
                        new
                        {
                            Id = 42,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Day Care Centre",
                            IsActive = false,
                            Name = "Day Care Centre",
                            SubProgrammeId = 47
                        },
                        new
                        {
                            Id = 43,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 47
                        },
                        new
                        {
                            Id = 44,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Special Day Care Centre",
                            IsActive = false,
                            Name = "Special Day Care Centre",
                            SubProgrammeId = 47
                        },
                        new
                        {
                            Id = 45,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Special Day Care Centres",
                            IsActive = false,
                            Name = "Special Day Care Centres",
                            SubProgrammeId = 48
                        },
                        new
                        {
                            Id = 46,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Day Care Centre",
                            IsActive = false,
                            Name = "Day Care Centre",
                            SubProgrammeId = 49
                        },
                        new
                        {
                            Id = 47,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Residential Facilities",
                            IsActive = false,
                            Name = "Residential Facilities",
                            SubProgrammeId = 50
                        },
                        new
                        {
                            Id = 48,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            SubProgrammeId = 55
                        },
                        new
                        {
                            Id = 49,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Aftercare",
                            IsActive = false,
                            Name = "Aftercare",
                            SubProgrammeId = 56
                        },
                        new
                        {
                            Id = 50,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Awareness & Prevention",
                            IsActive = false,
                            Name = "Awareness & Prevention",
                            SubProgrammeId = 56
                        },
                        new
                        {
                            Id = 51,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Community based treatment",
                            IsActive = false,
                            Name = "Community based treatment",
                            SubProgrammeId = 56
                        },
                        new
                        {
                            Id = 52,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Early Intervention",
                            IsActive = false,
                            Name = "Early Intervention",
                            SubProgrammeId = 56
                        },
                        new
                        {
                            Id = 53,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 56
                        },
                        new
                        {
                            Id = 54,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Youth Programmes",
                            IsActive = false,
                            Name = "Youth Programmes",
                            SubProgrammeId = 56
                        },
                        new
                        {
                            Id = 55,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Community based treatment",
                            IsActive = false,
                            Name = "Community based treatment",
                            SubProgrammeId = 57
                        },
                        new
                        {
                            Id = 56,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "In patient",
                            IsActive = false,
                            Name = "In patient",
                            SubProgrammeId = 57
                        },
                        new
                        {
                            Id = 57,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Out Patient",
                            IsActive = false,
                            Name = "Out Patient",
                            SubProgrammeId = 57
                        },
                        new
                        {
                            Id = 58,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Earmarked Funding",
                            IsActive = false,
                            Name = "Earmarked Funding",
                            SubProgrammeId = 58
                        },
                        new
                        {
                            Id = 59,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Equitable Share",
                            IsActive = false,
                            Name = "Equitable Share",
                            SubProgrammeId = 58
                        },
                        new
                        {
                            Id = 60,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 58
                        },
                        new
                        {
                            Id = 61,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "SRD",
                            IsActive = false,
                            Name = "SRD",
                            SubProgrammeId = 58
                        },
                        new
                        {
                            Id = 62,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Targetted Feeding",
                            IsActive = false,
                            Name = "Targetted Feeding",
                            SubProgrammeId = 58
                        },
                        new
                        {
                            Id = 63,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Programme focus",
                            IsActive = false,
                            Name = "Programme focus",
                            SubProgrammeId = 59
                        },
                        new
                        {
                            Id = 64,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Shelter for Women and Children",
                            IsActive = false,
                            Name = "Shelter for Women and Children",
                            SubProgrammeId = 60
                        },
                        new
                        {
                            Id = 65,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Victims of Crime/Violence/Fam members/significant",
                            IsActive = false,
                            Name = "Victims of Crime/Violence/Fam members/significant",
                            SubProgrammeId = 60
                        },
                        new
                        {
                            Id = 66,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Service Provider",
                            IsActive = false,
                            Name = "Service Provider",
                            SubProgrammeId = 61
                        },
                        new
                        {
                            Id = 67,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 61
                        },
                        new
                        {
                            Id = 68,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Projects",
                            IsActive = false,
                            Name = "Projects",
                            SubProgrammeId = 62
                        },
                        new
                        {
                            Id = 69,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Social Service Organisation",
                            IsActive = false,
                            Name = "Social Service Organisation",
                            SubProgrammeId = 63
                        },
                        new
                        {
                            Id = 70,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Youth Cafe",
                            IsActive = false,
                            Name = "Youth Cafe",
                            SubProgrammeId = 63
                        },
                        new
                        {
                            Id = 71,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Childrens Homes",
                            IsActive = false,
                            Name = "Childrens Homes",
                            SubProgrammeId = 65
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Titles", "dropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mr"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mrs"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Miss"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Dr"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Prof"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Ms"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.AccessStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AccessStatuses", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pending",
                            SystemName = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Approved",
                            SystemName = "Approved"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Rejected",
                            SystemName = "Rejected"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "New",
                            SystemName = "New"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActivityListId")
                        .HasColumnType("int");

                    b.Property<int>("ActivityTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<bool?>("ChangesRequired")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("FinancialYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNew")
                        .HasColumnType("bit");

                    b.Property<int>("ObjectiveId")
                        .HasColumnType("int");

                    b.Property<string>("Quarter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuccessIndicator")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Target")
                        .HasColumnType("int");

                    b.Property<string>("TimelineEndDate")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TimelineStartDate")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityListId");

                    b.HasIndex("ActivityTypeId");

                    b.HasIndex("ObjectiveId");

                    b.ToTable("Activities", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.AddressInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("NpoProfileId")
                        .HasColumnType("int");

                    b.Property<string>("PhysicalAddress")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PostalAddress")
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("PostalSameAsPhysical")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("NpoProfileId")
                        .IsUnique();

                    b.ToTable("AddressInformation", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.AffiliatedOrganisationInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfOrganisation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("npoProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AffiliatedOrganisationInformation", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCloned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsQuickCapture")
                        .HasColumnType("bit");

                    b.Property<int>("NpoId")
                        .HasColumnType("int");

                    b.Property<string>("RefNo")
                        .HasColumnType("char(15)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("Step")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationPeriodId");

                    b.HasIndex("NpoId");

                    b.HasIndex("StatusId");

                    b.ToTable("Applications", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ApplicationApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("ApprovedFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.ToTable("ApplicationApprovals", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ApplicationAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("StatusId");

                    b.ToTable("ApplicationAudits", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ApplicationComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceProvisionStepId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.ToTable("ApplicationComments", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ApplicationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("AmountApplyingFor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FundAppSDADetailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FundAppSDADetailId");

                    b.ToTable("ApplicationDetails", "fa");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ApplicationPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("FinancialYearId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("OpeningDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProgrammeId")
                        .HasColumnType("int");

                    b.Property<string>("RefNo")
                        .HasColumnType("char(15)");

                    b.Property<int>("SubProgrammeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationTypeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FinancialYearId");

                    b.HasIndex("ProgrammeId");

                    b.HasIndex("SubProgrammeId");

                    b.ToTable("ApplicationPeriods", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ApplicationReviewerSatisfaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsSatisfied")
                        .HasColumnType("bit");

                    b.Property<int>("ServiceProvisionStepId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.ToTable("ApplicationReviewerSatisfactions", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("AuditType")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("NewValue")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TablePrimaryKey")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.AuditorOrAffiliation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OrganisationName")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("AuditorOrAffiliations", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.BankDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("int");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("NpoProfileId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BankDetails", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.CompliantCycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CompliantCycleRuleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FinancialYearId")
                        .HasColumnType("int");

                    b.Property<bool>("HasFinancialStatement")
                        .HasColumnType("bit");

                    b.Property<bool>("HasProgressReport")
                        .HasColumnType("bit");

                    b.Property<bool>("HasSignedTPA")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CompliantCycles", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.CompliantCycleRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<int>("CycleNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CompliantCycleRules", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            CycleNumber = 1,
                            IsActive = false
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            CycleNumber = 2,
                            IsActive = false
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            CycleNumber = 3,
                            IsActive = false
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            CycleNumber = 4,
                            IsActive = false
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ContactInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AddressInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfEmployment")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("IdNumber")
                        .HasColumnType("nvarchar(13)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBoardMember")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPrimaryContact")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSignatory")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsWrittenAgreementSignatory")
                        .HasColumnType("bit");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("NpoId")
                        .HasColumnType("int");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<string>("Qualifications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RSAIdNumber")
                        .HasColumnType("bit");

                    b.Property<int?>("RaceId")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("NpoId");

                    b.HasIndex("PositionId");

                    b.HasIndex("RaceId");

                    b.HasIndex("TitleId");

                    b.ToTable("ContactInformation", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.FinancialMatters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("AmountOne")
                        .HasColumnType("numeric(18,6)");

                    b.Property<decimal>("AmountThree")
                        .HasColumnType("numeric(18,6)");

                    b.Property<decimal>("AmountTwo")
                        .HasColumnType("numeric(18,6)");

                    b.Property<bool?>("ChangesRequired")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("FundingApplicationDetailId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNew")
                        .HasColumnType("bit");

                    b.Property<string>("Property")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TotalFundingAmount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FundingApplicationDetailId");

                    b.ToTable("FinancialMatters", "fa");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.FinancialMattersExpenditure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("AmountOneE")
                        .HasColumnType("numeric(18,6)");

                    b.Property<decimal>("AmountThreeE")
                        .HasColumnType("numeric(18,6)");

                    b.Property<decimal>("AmountTwoE")
                        .HasColumnType("numeric(18,6)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("ExpenditureDescription")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("FundingApplicationDetailId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("TotalFundingAmountE")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("npoProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FundingApplicationDetailId");

                    b.ToTable("FinancialMattersExpenditure", "fa");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.FinancialMattersIncome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("AmountOneI")
                        .HasColumnType("numeric(18,6)");

                    b.Property<decimal>("AmountThreeI")
                        .HasColumnType("numeric(18,6)");

                    b.Property<decimal>("AmountTwoI")
                        .HasColumnType("numeric(18,6)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("FundingApplicationDetailId")
                        .HasColumnType("int");

                    b.Property<string>("IncomeDescription")
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("TotalFundingAmountI")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("npoProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FundingApplicationDetailId");

                    b.ToTable("FinancialMattersIncome", "fa");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.FinancialMattersOthers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("AmountOneO")
                        .HasColumnType("numeric(18,6)");

                    b.Property<decimal>("AmountThreeO")
                        .HasColumnType("numeric(18,6)");

                    b.Property<decimal>("AmountTwoO")
                        .HasColumnType("numeric(18,6)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("FundingApplicationDetailId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OtherDescription")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TotalFundingAmountO")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("npoProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FundingApplicationDetailId");

                    b.ToTable("FinancialMattersOthers", "fa");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.FundAppDocuments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DocumentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FundingApplicationDetailId")
                        .HasColumnType("int");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCompulsory")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("npoProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FundAppDocuments", "fa");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.FundAppSDADetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DistrictCouncilId")
                        .HasColumnType("int");

                    b.Property<int>("LocalMunicipalityId")
                        .HasColumnType("int");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DistrictCouncilId");

                    b.HasIndex("LocalMunicipalityId");

                    b.HasIndex("RegionId");

                    b.ToTable("FundAppSDADetail", "fa");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.FundingApplicationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationDetailId")
                        .HasColumnType("int");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<int>("ApplicationPeriodId")
                        .HasColumnType("int");

                    b.Property<int?>("MonitoringEvaluationId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectInformationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationDetailId");

                    b.HasIndex("ApplicationPeriodId");

                    b.HasIndex("MonitoringEvaluationId");

                    b.HasIndex("ProjectInformationId");

                    b.ToTable("FundingApplicationDetails", "fa");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.MonitoringEvaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNew")
                        .HasColumnType("bit");

                    b.Property<string>("MonEvalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MonitoringEvaluation", "fa");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.MyContentLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.ToTable("MyContentLinks", "fa");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Npo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ApprovalDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprovalStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("ApprovalUserId")
                        .HasColumnType("int");

                    b.Property<string>("CCode")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("OrganisationTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PBONumber")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RefNo")
                        .HasColumnType("char(15)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RegistrationStatusId")
                        .HasColumnType("int");

                    b.Property<bool>("Section18Receipts")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("YearRegistered")
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalStatusId");

                    b.HasIndex("ApprovalUserId");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("OrganisationTypeId");

                    b.HasIndex("RegistrationStatusId");

                    b.ToTable("Npos", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.NpoProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("NpoId")
                        .HasColumnType("int");

                    b.Property<string>("RefNo")
                        .HasColumnType("char(15)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NpoId");

                    b.ToTable("NpoProfiles", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Objective", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<decimal>("Budget")
                        .HasColumnType("numeric(18,6)");

                    b.Property<bool?>("ChangesRequired")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("FinancialYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FundingPeriodEndDate")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FundingPeriodStartDate")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FundingSource")
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNew")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Quarter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipientTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipientTypeId");

                    b.ToTable("Objectives", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.PaymentSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CompliantCycleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompliantCycleId");

                    b.ToTable("PaymentSchedules", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.PreviousYearFinance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpenditureAmount")
                        .HasColumnType("int");

                    b.Property<string>("ExpenditureDescription")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("IncomeAmount")
                        .HasColumnType("int");

                    b.Property<string>("IncomeDescription")
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("npoProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PreviousYearFinance", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ProjectImplementation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Beneficiaries")
                        .HasColumnType("int");

                    b.Property<int>("BudgetAmount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FundingApplicationDetailId")
                        .HasColumnType("int");

                    b.Property<int>("NpoProfileId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectObjective")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resources")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Results")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeframeFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeframeTo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FundingApplicationDetailId");

                    b.ToTable("ProjectImplementations", "fa");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ProjectInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("purposeQuestion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectInformation", "fa");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("AllocationTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<bool?>("ChangesRequired")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNew")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfResources")
                        .HasColumnType("int");

                    b.Property<int>("ProvisionTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ResourceListId")
                        .HasColumnType("int");

                    b.Property<int>("ResourceTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("AllocationTypeId");

                    b.HasIndex("ProvisionTypeId");

                    b.HasIndex("ResourceListId");

                    b.HasIndex("ResourceTypeId");

                    b.HasIndex("ServiceTypeId");

                    b.ToTable("Resources", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ServicesRendered", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("NpoProfileId")
                        .HasColumnType("int");

                    b.Property<int>("ProgrammeId")
                        .HasColumnType("int");

                    b.Property<int>("SubProgrammeId")
                        .HasColumnType("int");

                    b.Property<int>("SubProgrammeTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ServicesRendered", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.SourceOfInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdditionalSourceInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("NpoProfileId")
                        .HasColumnType("int");

                    b.Property<int?>("SelectedSourceValue")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SourceOfInformation", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.StaffMemberProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AfricanFemale")
                        .HasColumnType("int");

                    b.Property<int>("AfricanMale")
                        .HasColumnType("int");

                    b.Property<int>("ColouredFemale")
                        .HasColumnType("int");

                    b.Property<int>("ColouredMale")
                        .HasColumnType("int");

                    b.Property<int>("ConsultantsAppointed")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("FilledPosts")
                        .HasColumnType("int");

                    b.Property<int>("IndianFemale")
                        .HasColumnType("int");

                    b.Property<int>("IndianMale")
                        .HasColumnType("int");

                    b.Property<int>("NpoProfileId")
                        .HasColumnType("int");

                    b.Property<string>("OtherSpecify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StaffCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("StaffWithDisabilities")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("VacantPosts")
                        .HasColumnType("int");

                    b.Property<int>("WhiteFemale")
                        .HasColumnType("int");

                    b.Property<int>("WhiteMale")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StaffMemberProfiles", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Statuses", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "New",
                            SystemName = "New"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Saved",
                            SystemName = "Saved"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Submitted – Pending Review",
                            SystemName = "PendingReview"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Amendments Required",
                            SystemName = "AmendmentsRequired"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pending Approval",
                            SystemName = "PendingApproval"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Declined",
                            SystemName = "Declined"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pending SLA",
                            SystemName = "PendingSLA"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pending Signed SLA",
                            SystemName = "PendingSignedSLA"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Accepted SLA",
                            SystemName = "AcceptedSLA"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Approval In Progress",
                            SystemName = "ApprovalInProgress"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "SLA: Comments Submitted (Dept)",
                            SystemName = "DeptComments"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "SLA: Comments Submitted (Org)",
                            SystemName = "OrgComments"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Approved",
                            SystemName = "Approved"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Verified",
                            SystemName = "Verified"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Evaluated",
                            SystemName = "Evaluated"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "EvaluationInProgress",
                            SystemName = "EvaluationInProgress"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "AdjudicationInProgress",
                            SystemName = "AdjudicationInProgress"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Adjudicated",
                            SystemName = "Adjudicated"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Submitted",
                            SystemName = "Submitted"
                        },
                        new
                        {
                            Id = 20,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Recommended",
                            SystemName = "Recommended"
                        },
                        new
                        {
                            Id = 21,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "StronglyRecommended",
                            SystemName = "Strongly Recommended"
                        },
                        new
                        {
                            Id = 22,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "NonCompliance",
                            SystemName = "Non Compliance"
                        },
                        new
                        {
                            Id = 23,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pending Reviewer Satisfaction",
                            SystemName = "PendingReviewerSatisfaction"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.SubRecipient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Budget")
                        .HasColumnType("numeric(18,6)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("FundingPeriodEndDate")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FundingPeriodStartDate")
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ObjectiveId")
                        .HasColumnType("int");

                    b.Property<string>("OrganisationName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RecipientTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ObjectiveId");

                    b.ToTable("SubRecipients", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.SubSubRecipient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Budget")
                        .HasColumnType("numeric(18,6)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("FundingPeriodEndDate")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FundingPeriodStartDate")
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OrganisationName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RecipientTypeId")
                        .HasColumnType("int");

                    b.Property<int>("SubRecipientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubRecipientId");

                    b.ToTable("SubSubRecipients", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.SustainabilityPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<bool?>("ChangesRequired")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNew")
                        .HasColumnType("bit");

                    b.Property<string>("Mitigation")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Risk")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("SustainabilityPlans", "dbo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.TrainingMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("TrainingMaterials", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "DSD Programme Specifications",
                            IsActive = true,
                            Link = "https://www.westerncape.gov.za/site-page/call-proposals-2024-25-programme-specifications",
                            Name = "Programme Specifications"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "UFC 2024-25 NPO Circular",
                            IsActive = true,
                            Link = "https://www.westerncape.gov.za/assets/departments/social-development/CFP/ufc_2024-25_npo_circular.pdf",
                            Name = "NPO Circular"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "UFC 2024-25 Basic Eligibility Criteria and Conditions ",
                            IsActive = true,
                            Link = "https://www.westerncape.gov.za/assets/departments/social-development/CFP/ufc_2024-25_basic_eligibility_criteria_and_conditions.pdf",
                            Name = "Basic Eligibility Criteria and Conditions "
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "DSD NPO Application Form Guide",
                            IsActive = true,
                            Link = "https://www.westerncape.gov.za/assets/departments/social-development/CFP/dsd_npo_application_form_guide.pdf",
                            Name = "NPO Application Form Guide "
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "DSD Call for Proposals -  Online Application User Guide",
                            IsActive = true,
                            Link = "https://www.westerncape.gov.za/assets/departments/social-development/CFP/call_for_proposals_-_online_application_user_guide.pdf",
                            Name = "Online Application User Guide "
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "DSD NPO Application Form with Annexures (collated)",
                            IsActive = true,
                            Link = "https://www.westerncape.gov.za/assets/departments/social-development/CFP/dsd_npo_application_form_with_annexures.pdf",
                            Name = "Application Form with Annexures (collated)"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "DSD NPO Application Form with Annexures (collated)",
                            IsActive = true,
                            Link = "https://www.westerncape.gov.za/assets/departments/social-development/CFP/dsd_npo_application_form.pdf",
                            Name = "DSD NPO Application Form"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "DSD NPO Application Form - Declaration of interest",
                            IsActive = true,
                            Link = "https://www.westerncape.gov.za/assets/departments/social-development/CFP/npo_application_form_-_declaration_of_interest.pdf",
                            Name = "Application Form - Declaration of interest"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "DSD NPO Application Form - BAS entity bank details form",
                            IsActive = true,
                            Link = "https://www.westerncape.gov.za/assets/departments/social-development/CFP/npo_application_form_-_dsd_bas_entity_bank_details_form.pdf",
                            Name = "Application Form - BAS entity bank details form"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "DSD NPO Application Form - Schedule A Enrolment form (After School Care only)",
                            IsActive = true,
                            Link = "https://www.westerncape.gov.za/assets/departments/social-development/CFP/npo_application_form_-_schedule_a_enrolment_form_-_afterschool_care_only.pdf",
                            Name = "Application Form - Schedule A Enrolment form (After School Care only)"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "DSD NPO Application Form - Written Assurance",
                            IsActive = true,
                            Link = "https://www.westerncape.gov.za/assets/departments/social-development/CFP/npo_application_form_-_written_assurance.pdf",
                            Name = "Application Form - Written Assurance"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "DSD NPO Application Declaration - Online Applications only",
                            IsActive = true,
                            Link = "https://www.westerncape.gov.za/assets/departments/social-development/dsd_npo_application_declaration_-_online_applications_only.pdf",
                            Name = "Application Declaration - Online Applications only"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "DSD Call For Proposal Frequently Asked Questions",
                            IsActive = true,
                            Link = "https://www.westerncape.gov.za/assets/departments/social-development/CFP/frequently_asked_questions_-_2023_call_for_proposals.pdf",
                            Name = "Frequently Asked Questions"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Evaluation.CapturedResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("FundingApplicationId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSignedOff")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("isDeclarationAccepted")
                        .HasColumnType("bit");

                    b.Property<int?>("selectedStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.ToTable("CapturedResponses", "eval");
                });

            modelBuilder.Entity("NPOMS.Domain.Evaluation.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("QuestionSectionId")
                        .HasColumnType("int");

                    b.Property<int>("ResponseTypeId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionSectionId");

                    b.HasIndex("ResponseTypeId");

                    b.ToTable("Questions", "eval");
                });

            modelBuilder.Entity("NPOMS.Domain.Evaluation.QuestionCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("FundingTemplateTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("QuestionCategories", "eval");
                });

            modelBuilder.Entity("NPOMS.Domain.Evaluation.QuestionProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("CommentRequired")
                        .HasColumnType("bit");

                    b.Property<bool>("DocumentRequired")
                        .HasColumnType("bit");

                    b.Property<bool>("HasComment")
                        .HasColumnType("bit");

                    b.Property<bool>("HasDocument")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("Weighting")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId")
                        .IsUnique();

                    b.ToTable("QuestionProperties", "eval");
                });

            modelBuilder.Entity("NPOMS.Domain.Evaluation.QuestionSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("QuestionCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionCategoryId");

                    b.ToTable("QuestionSections", "eval");
                });

            modelBuilder.Entity("NPOMS.Domain.Evaluation.Response", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("FundingApplicationId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("ResponseOptionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("ResponseOptionId");

                    b.ToTable("Responses", "eval");
                });

            modelBuilder.Entity("NPOMS.Domain.Evaluation.ResponseHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("FundingApplicationId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("ResponseOptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("ResponseOptionId");

                    b.ToTable("ResponseHistory", "eval");
                });

            modelBuilder.Entity("NPOMS.Domain.Evaluation.ResponseOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ResponseTypeId")
                        .HasColumnType("int");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ResponseOptions", "eval");
                });

            modelBuilder.Entity("NPOMS.Domain.Evaluation.ResponseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ResponseTypes", "eval");
                });

            modelBuilder.Entity("NPOMS.Domain.Evaluation.WorkflowAssessment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfAssessments")
                        .HasColumnType("int");

                    b.Property<int>("QuestionCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WorkflowAssessments", "eval");
                });

            modelBuilder.Entity("NPOMS.Domain.Indicator.WorkplanActual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int?>("Actual")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("DeviationReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FinancialYearId")
                        .HasColumnType("int");

                    b.Property<int>("FrequencyPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("Statement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("WorkplanTargetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FrequencyPeriodId");

                    b.ToTable("WorkplanActuals", "indicator");
                });

            modelBuilder.Entity("NPOMS.Domain.Indicator.WorkplanActualAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("WorkplanActualId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.ToTable("WorkplanActualAudits", "indicator");
                });

            modelBuilder.Entity("NPOMS.Domain.Indicator.WorkplanComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("WorkplanActualId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.ToTable("WorkplanComments", "indicator");
                });

            modelBuilder.Entity("NPOMS.Domain.Indicator.WorkplanTarget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int?>("Annual")
                        .HasColumnType("int");

                    b.Property<int?>("Apr")
                        .HasColumnType("int");

                    b.Property<int?>("Aug")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("Dec")
                        .HasColumnType("int");

                    b.Property<int?>("Feb")
                        .HasColumnType("int");

                    b.Property<int>("FinancialYearId")
                        .HasColumnType("int");

                    b.Property<int>("FrequencyId")
                        .HasColumnType("int");

                    b.Property<int?>("Jan")
                        .HasColumnType("int");

                    b.Property<int?>("Jul")
                        .HasColumnType("int");

                    b.Property<int?>("Jun")
                        .HasColumnType("int");

                    b.Property<int?>("Mar")
                        .HasColumnType("int");

                    b.Property<int?>("May")
                        .HasColumnType("int");

                    b.Property<int?>("Nov")
                        .HasColumnType("int");

                    b.Property<int?>("Oct")
                        .HasColumnType("int");

                    b.Property<int?>("Quarter1")
                        .HasColumnType("int");

                    b.Property<int?>("Quarter2")
                        .HasColumnType("int");

                    b.Property<int?>("Quarter3")
                        .HasColumnType("int");

                    b.Property<int?>("Quarter4")
                        .HasColumnType("int");

                    b.Property<int?>("Sep")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialYearId");

                    b.HasIndex("FrequencyId");

                    b.ToTable("WorkplanTargets", "indicator");
                });

            modelBuilder.Entity("NPOMS.Domain.Lookup.ActivityList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ActivityList", "lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Quarterly reports",
                            IsActive = false,
                            Name = "Quarterly reports"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Quarterly stakeholder engagements",
                            IsActive = false,
                            Name = "Quarterly stakeholder engagements"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provision of resources",
                            IsActive = false,
                            Name = "Provision of resources"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Capacity Development",
                            IsActive = false,
                            Name = "Capacity Development"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Monitoring and Evaluation",
                            IsActive = false,
                            Name = "Monitoring and Evaluation"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Quality Improvement",
                            IsActive = false,
                            Name = "Quality Improvement"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Implementation of Human Rights activities",
                            IsActive = false,
                            Name = "Implementation of Human Rights activities"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Advocacy",
                            IsActive = false,
                            Name = "Advocacy"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "GP referrals",
                            IsActive = false,
                            Name = "GP referrals"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Engagement with taxi industry",
                            IsActive = false,
                            Name = "Engagement with taxi industry"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Awareness campaigns",
                            IsActive = false,
                            Name = "Awareness campaigns"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "HIV Testing",
                            IsActive = false,
                            Name = "HIV Testing"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Health Screening",
                            IsActive = false,
                            Name = "Health Screening"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Introduction of self-screening",
                            IsActive = false,
                            Name = "Introduction of self-screening"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Reduce Stima & Discrimination",
                            IsActive = false,
                            Name = "Reduce Stima & Discrimination"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide Legal Support",
                            IsActive = false,
                            Name = "Provide Legal Support"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Distribution of posters, leaflets and pamphlets",
                            IsActive = false,
                            Name = "Distribution of posters, leaflets and pamphlets"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Advocacy for People Who use and inject Drugs (PWID)",
                            IsActive = false,
                            Name = "Advocacy for PWID"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Decriminalisation of Sex Work ",
                            IsActive = false,
                            Name = "Decriminalisation of Sex Work "
                        },
                        new
                        {
                            Id = 20,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Sesitization engagements",
                            IsActive = false,
                            Name = "Sesitization engagements"
                        },
                        new
                        {
                            Id = 21,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Mapping",
                            IsActive = false,
                            Name = "Mapping"
                        },
                        new
                        {
                            Id = 22,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Providing CBM toolkits",
                            IsActive = false,
                            Name = "Providing CBM toolkits"
                        },
                        new
                        {
                            Id = 23,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Distribute IEC material",
                            IsActive = false,
                            Name = "Distribute IEC material"
                        },
                        new
                        {
                            Id = 24,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Training",
                            IsActive = false,
                            Name = "Training"
                        },
                        new
                        {
                            Id = 25,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Demand creation",
                            IsActive = false,
                            Name = "Demand creation"
                        },
                        new
                        {
                            Id = 26,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Score card development and monitoring",
                            IsActive = false,
                            Name = "Score card development and monitoring"
                        },
                        new
                        {
                            Id = 27,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Skills development",
                            IsActive = false,
                            Name = "Skills development"
                        },
                        new
                        {
                            Id = 28,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Obtain facility start-up kits from NDOH",
                            IsActive = false,
                            Name = "Obtain facility start-up kits from NDOH"
                        },
                        new
                        {
                            Id = 29,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Facility and site assessments",
                            IsActive = false,
                            Name = "Facility and site assessments"
                        },
                        new
                        {
                            Id = 30,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Develop assessment tools",
                            IsActive = false,
                            Name = "Develop assessment tools"
                        },
                        new
                        {
                            Id = 31,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "SOP development",
                            IsActive = false,
                            Name = "SOP development"
                        },
                        new
                        {
                            Id = 32,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Deploy NDOH tools",
                            IsActive = false,
                            Name = "Deploy NDOH tools"
                        },
                        new
                        {
                            Id = 33,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Deploy NDOH tools and Tier.net module to all identified sites",
                            IsActive = false,
                            Name = "Deploy NDOH tools and Tier.net modules"
                        },
                        new
                        {
                            Id = 34,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Update PrEP finder on NDOH website to include facilities",
                            IsActive = false,
                            Name = "Update PrEP finder on NDOH website"
                        },
                        new
                        {
                            Id = 35,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Data quality assessment",
                            IsActive = false,
                            Name = "Data quality assessment"
                        },
                        new
                        {
                            Id = 36,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Facility-level data review",
                            IsActive = false,
                            Name = "Facility-level data review"
                        },
                        new
                        {
                            Id = 37,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Conduct  performance management activities",
                            IsActive = false,
                            Name = "Conduct  performance management activities"
                        },
                        new
                        {
                            Id = 38,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Distribution of MINA collateral, posters an IEC to facilities.",
                            IsActive = false,
                            Name = "Distribution of MINA collateral, posters and IEC"
                        },
                        new
                        {
                            Id = 39,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Facilitate the branding in facilities",
                            IsActive = false,
                            Name = "Facilitate the branding in facilities"
                        },
                        new
                        {
                            Id = 40,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Identification of MINA champion /facility in conjunction with facility manager",
                            IsActive = false,
                            Name = "Identification of MINA champion"
                        },
                        new
                        {
                            Id = 41,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Advocacy for mesn health",
                            IsActive = false,
                            Name = "Advocacy for mesn health"
                        },
                        new
                        {
                            Id = 42,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "HiV prevention",
                            IsActive = false,
                            Name = "HiV prevention"
                        },
                        new
                        {
                            Id = 43,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "HTS",
                            IsActive = false,
                            Name = "HTS"
                        },
                        new
                        {
                            Id = 44,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Care",
                            IsActive = false,
                            Name = "Care"
                        },
                        new
                        {
                            Id = 45,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Treatment/FP Services",
                            IsActive = false,
                            Name = "Treatment/FP Services"
                        },
                        new
                        {
                            Id = 46,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "DREAMS stakeholder engagement",
                            IsActive = false,
                            Name = "DREAMS stakeholder engagement"
                        },
                        new
                        {
                            Id = 47,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "DREAMS Ambassador development",
                            IsActive = false,
                            Name = "DREAMS Ambassador development"
                        },
                        new
                        {
                            Id = 48,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support the establishment of facility and sub-district Adolescent and Youth Friendly Services (AYFS)",
                            IsActive = false,
                            Name = "Support the establishment of AYFS"
                        },
                        new
                        {
                            Id = 49,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Promote provision of integrated HTS/HIV Prevention/FP/SRH services to AGYW at FP units or youth care corners",
                            IsActive = false,
                            Name = "Promote provision of integrated services to AGYW"
                        },
                        new
                        {
                            Id = 50,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Guideline development",
                            IsActive = false,
                            Name = "Guideline development"
                        },
                        new
                        {
                            Id = 51,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "LIVES Training",
                            IsActive = false,
                            Name = "LIVES Training"
                        },
                        new
                        {
                            Id = 52,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Avial adolescent clinics and youth corners",
                            IsActive = false,
                            Name = "Avial adolescent clinics and youth corners"
                        },
                        new
                        {
                            Id = 53,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Mentorship on client engagement",
                            IsActive = false,
                            Name = "Mentorship on client engagement"
                        },
                        new
                        {
                            Id = 54,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Implement PrEP services",
                            IsActive = false,
                            Name = "Implement PrEP services"
                        },
                        new
                        {
                            Id = 55,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Welcome back campaign",
                            IsActive = false,
                            Name = "Welcome back campaign"
                        },
                        new
                        {
                            Id = 56,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Stakeholder enagement",
                            IsActive = false,
                            Name = "Stakeholder enagement"
                        },
                        new
                        {
                            Id = 57,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Site visits and assesssments",
                            IsActive = false,
                            Name = "Site visits and assesssments"
                        },
                        new
                        {
                            Id = 58,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support policy development",
                            IsActive = false,
                            Name = "Support policy development"
                        },
                        new
                        {
                            Id = 59,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Ensure that 90 % of pregnant women are started same day    ",
                            IsActive = false,
                            Name = "Ensure pregnant women are started same day    "
                        },
                        new
                        {
                            Id = 60,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "IQC of HIV Test kits",
                            IsActive = false,
                            Name = "IQC of HIV Test kits"
                        },
                        new
                        {
                            Id = 61,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Rapid test quality improvements",
                            IsActive = false,
                            Name = "Rapid test quality improvements"
                        },
                        new
                        {
                            Id = 62,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support and Conduct 6 monthly SPI -RT assessments in all facilities",
                            IsActive = false,
                            Name = "Conduct 6 monthly SPI -RT assessments"
                        },
                        new
                        {
                            Id = 63,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Quality Assessments",
                            IsActive = false,
                            Name = "Quality Assessments"
                        },
                        new
                        {
                            Id = 64,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Conduct monthly TB register audits to identify gaps in HIV testing",
                            IsActive = false,
                            Name = "Conduct monthly TB register audits"
                        },
                        new
                        {
                            Id = 65,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Review presumptive TB register to indentify confirmed Tb + clients not initiated on ART and fasttrack for initiation",
                            IsActive = false,
                            Name = "Review presumptive TB register"
                        },
                        new
                        {
                            Id = 66,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Analyse IPT Data to improve initiation and completion of IPT",
                            IsActive = false,
                            Name = "Analyse IPT Data to improve completion of IPT"
                        },
                        new
                        {
                            Id = 67,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Conduct monthly PMTCT register reviews",
                            IsActive = false,
                            Name = "Conduct monthly PMTCT register reviews"
                        },
                        new
                        {
                            Id = 68,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Funder prescribed assessments",
                            IsActive = false,
                            Name = "Funder prescribed assessments"
                        },
                        new
                        {
                            Id = 69,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Conduct routine clinical chart and register reviews to identify gaps in HTS/HIV/TB services",
                            IsActive = false,
                            Name = "Conduct routine clinical chart and register review"
                        },
                        new
                        {
                            Id = 70,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Develop facility QIPs in conjunction with facility team  according to the gaps identified",
                            IsActive = false,
                            Name = "Develop facility QIPs"
                        },
                        new
                        {
                            Id = 71,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Monitor implementation of facility QIPs",
                            IsActive = false,
                            Name = "Monitor implementation of facility QIPs"
                        },
                        new
                        {
                            Id = 72,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide coaching  and upskilling in implementation and monitoring of improvement activities (FIP's and QIP's) to facility staff",
                            IsActive = false,
                            Name = "Provide coaching and upskilling"
                        },
                        new
                        {
                            Id = 73,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support the implementation of TB screening for all ART clients at every visit and actioning for TPT or TB testing in supported facilities",
                            IsActive = false,
                            Name = "Support the implementation of TB screening"
                        },
                        new
                        {
                            Id = 74,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Monthly reviews of facility TB screening practices among ART clients flagging for low TPT uptake and <90% screening of all visiting ART clients",
                            IsActive = false,
                            Name = "Monthly reviews of TB screening practices"
                        },
                        new
                        {
                            Id = 75,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Monthly review of Presumptive  register to ensure all Presumptive clients have an HIV and or ART status, clients not initiated on ART and fast track  for initiation.",
                            IsActive = false,
                            Name = "Monthly review of Presumptive register"
                        },
                        new
                        {
                            Id = 76,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Assist with training staff on HTS and ART for Presumptive TB",
                            IsActive = false,
                            Name = "Assist with training staff on HTS"
                        },
                        new
                        {
                            Id = 77,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Assist with training of staff  on TPT guidelines and management of TPT in ART clients",
                            IsActive = false,
                            Name = "Assist with training of staff on TPT"
                        },
                        new
                        {
                            Id = 78,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Monthly review of facility TPT to ART initiation rates to ensure above 85%",
                            IsActive = false,
                            Name = "Monthly review of facility TPT to ART"
                        },
                        new
                        {
                            Id = 79,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Monthly review of facility missed opportunities to initiate TPT in TX_NEW 3 months prior and flag for reassessment of TPT eligibility and TPT initiation",
                            IsActive = false,
                            Name = "Monthly review of facility missed opportunities"
                        },
                        new
                        {
                            Id = 80,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Monthly review of facility TPT outcomes of clients initiated 12 months prior flagging all patients with outstanding TPT outcomes, ensure outcomes are completed.",
                            IsActive = false,
                            Name = "Monthly review of facility TPT outcomes"
                        },
                        new
                        {
                            Id = 81,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Strengthening of results management",
                            IsActive = false,
                            Name = "Strengthening of results management"
                        },
                        new
                        {
                            Id = 82,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Monthly review of specimen rejection rates for   CD4/VL/PCR/TB GenxPert and implement corrective measures    on rejections caused by pre-analytical errors.",
                            IsActive = false,
                            Name = "Monthly review of specimen rejection rates"
                        },
                        new
                        {
                            Id = 83,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support with the roll out and implementation of Post Natal Clubs",
                            IsActive = false,
                            Name = "Support with implementation of Post Natal Clubs"
                        },
                        new
                        {
                            Id = 84,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide oversight support on Post Natal Clubs(coaching of PNC Nurses)",
                            IsActive = false,
                            Name = "Provide support on Post Natal Clubs"
                        },
                        new
                        {
                            Id = 85,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Conduct PMTCT register review to monitor",
                            IsActive = false,
                            Name = "Conduct PMTCT register review to monitor"
                        },
                        new
                        {
                            Id = 86,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Coaching on correct completion of registers",
                            IsActive = false,
                            Name = "Coaching on correct completion of registers"
                        },
                        new
                        {
                            Id = 87,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Participate in PMTCT forums and PNC Forums ",
                            IsActive = false,
                            Name = "Participate in PMTCT forums and PNC Forums "
                        },
                        new
                        {
                            Id = 88,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Active participation in all Data Management platforms",
                            IsActive = false,
                            Name = "Active participation in Data Management platforms"
                        },
                        new
                        {
                            Id = 89,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "TA support: training and support of DOH staff in facilities. strengtening current data systems and structures in facilities.",
                            IsActive = false,
                            Name = "TA support"
                        },
                        new
                        {
                            Id = 90,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Conduct adherence club audits and initiate QIP based on findings",
                            IsActive = false,
                            Name = "Conduct adherence club audits and initiate QIP"
                        },
                        new
                        {
                            Id = 91,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide DSD to improve same day initiations",
                            IsActive = false,
                            Name = "Provide DSD to improve same day initiations"
                        },
                        new
                        {
                            Id = 92,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Integrate Case mangement tool with Facility systems and processes.",
                            IsActive = false,
                            Name = "Integrate Case mangement tool"
                        },
                        new
                        {
                            Id = 93,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support PHDC: with Human Resources,Improve Linkage and retention,comprehensive patient Care; Cross Referencing of data and generation of reports.",
                            IsActive = false,
                            Name = "Support PHDC"
                        },
                        new
                        {
                            Id = 94,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Improvement of Facility level Data-consolidate multiple entries into a unique ID (HPRN)",
                            IsActive = false,
                            Name = "Improve data-consolidate multiple entries"
                        },
                        new
                        {
                            Id = 95,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide ongoing support on coaching and mentoring of DOH / CCT NIMART nurses to scale up same day initiations",
                            IsActive = false,
                            Name = "Provide support on coaching and mentoring"
                        },
                        new
                        {
                            Id = 96,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support the re-authorization of NIMART nurses",
                            IsActive = false,
                            Name = "Support the re-authorization of NIMART nurses"
                        },
                        new
                        {
                            Id = 97,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support DoH and CCT Mentors to complete NIMART training  for  professional nurses  according to Western Cape guidelines/criteria",
                            IsActive = false,
                            Name = "Support Mentors to complete NIMART training"
                        },
                        new
                        {
                            Id = 98,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Identify gaps at Facilities as per program operations requirement. Support facilities in reaching set targets(both facility & DSP targets) by linking DSD staff to identified sites.",
                            IsActive = false,
                            Name = "Identify gaps per program operations requirement"
                        },
                        new
                        {
                            Id = 99,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Build  capacity of facility data/admin staff to support best practices/national /provincial guidelines on patient record keeping/ filing,archiving, registry hygiene",
                            IsActive = false,
                            Name = "Build data/admin staff to support best practices"
                        },
                        new
                        {
                            Id = 100,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide DSD to improve patient  experience and flow through facilities. Increased number of patient medication pick-up points",
                            IsActive = false,
                            Name = "Provide DSD to improve patient experience"
                        },
                        new
                        {
                            Id = 101,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support decanting strategy to improve pharmacy waiting times.",
                            IsActive = false,
                            Name = "Improve pharmacy waiting times."
                        },
                        new
                        {
                            Id = 102,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Strenthgthening appointment system in all Facilities.",
                            IsActive = false,
                            Name = "Strenthgthening appointment system"
                        },
                        new
                        {
                            Id = 103,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Introduce and support pre-retrieval of folders in all Facilities.",
                            IsActive = false,
                            Name = "Introduce and support pre-retrieval of folders"
                        },
                        new
                        {
                            Id = 104,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide support to DoH  /CCT on roll out services during extended working hours at identified facilities ",
                            IsActive = false,
                            Name = "Provide support to on roll out services"
                        },
                        new
                        {
                            Id = 105,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support critical posts within the HAST Directorate",
                            IsActive = false,
                            Name = "Support critical posts within the HAST Directorate"
                        },
                        new
                        {
                            Id = 106,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Regular and on-going feedback with sub structures and facilities on progress towards targets",
                            IsActive = false,
                            Name = "Regular and ongoing feedback with sub structures"
                        },
                        new
                        {
                            Id = 107,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Cultivate a culture of accountability towards facilities, colleagues and clients.",
                            IsActive = false,
                            Name = "Cultivate a culture of accountability"
                        },
                        new
                        {
                            Id = 108,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Individual performance mornitoring and feedback done for all staff ",
                            IsActive = false,
                            Name = "Individual performance mornitoring and feedback"
                        },
                        new
                        {
                            Id = 109,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provision of value clubs",
                            IsActive = false,
                            Name = "Provision of value clubs"
                        },
                        new
                        {
                            Id = 110,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support registering of value clubs (both facility and community) at supported facilities.",
                            IsActive = false,
                            Name = "Support registering of value clubs"
                        },
                        new
                        {
                            Id = 111,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Tracing patient adherence through the other DMOC modalities.",
                            IsActive = false,
                            Name = "Tracing patient adherence"
                        },
                        new
                        {
                            Id = 112,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Working with facility DOH staff to ensure that newly decanted stable patients are added to existing and/or new clubs at supported facilities.",
                            IsActive = false,
                            Name = "Ensure newly decanted patients are added to clubs"
                        },
                        new
                        {
                            Id = 113,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Generation of  Risk of treatment failure client lists to identify gaps and to guide program on resource deployment.",
                            IsActive = false,
                            Name = "Generate Risk of treatment failure client lists"
                        },
                        new
                        {
                            Id = 114,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Weekly Tracking and recall of clients  with virologic failure using Facility Information Systems ",
                            IsActive = false,
                            Name = "Weekly Tracking and recall of clients"
                        },
                        new
                        {
                            Id = 115,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Suport Facilities with  Telephonic tracing and recalls of  for Viral loads(VL) due; missed VLs and  unsuppressed VL's",
                            IsActive = false,
                            Name = "Suport with Telephonic tracing and recalls VL"
                        },
                        new
                        {
                            Id = 116,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Improve clinical management  by providing on site facility training and mentoring of clinical staff",
                            IsActive = false,
                            Name = "Improve clinical management"
                        },
                        new
                        {
                            Id = 117,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support Facilities with Folder Audits to maintain good quality of clinical care and improve VL uptake at Faclity level",
                            IsActive = false,
                            Name = "Support Facilities with Folder Audits"
                        },
                        new
                        {
                            Id = 118,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support Specialised services by providing Advanced clinical care  ( ROTF, pharmacovigilance) ",
                            IsActive = false,
                            Name = "Support with providing Advanced clinical care"
                        },
                        new
                        {
                            Id = 119,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Track VL done on ALL new patients tthough implementation and monitoring of the 100 day Case Management at Siyenza Facilities",
                            IsActive = false,
                            Name = "Track VL done on ALL new patients"
                        },
                        new
                        {
                            Id = 120,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Strengthen viral load monitoring, and capturing  by providing techinal assistance.",
                            IsActive = false,
                            Name = "Strengthen viral load monitoring and capturing"
                        },
                        new
                        {
                            Id = 121,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Mobilize individuals with virologic failure using TIER.net and NHLS and PHCD(Viral load for action reports)",
                            IsActive = false,
                            Name = "Mobilize individuals with virologic failure"
                        },
                        new
                        {
                            Id = 122,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support Specialised services by providing Advanced clinical care for  v  ( ROTF, pharmacovigilance and other co-morbidities)",
                            IsActive = false,
                            Name = "Support by providing Advanced clinical care"
                        },
                        new
                        {
                            Id = 123,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support retention in care through telephonic tracing",
                            IsActive = false,
                            Name = "Support care rentention - telephonic tracing"
                        },
                        new
                        {
                            Id = 124,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support rentention in care through trace and track",
                            IsActive = false,
                            Name = "Support care rentention - trace and track"
                        },
                        new
                        {
                            Id = 125,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support rentention in care by imprving VL uptake and monitoring",
                            IsActive = false,
                            Name = "Support care rentention - improve VL uptake"
                        },
                        new
                        {
                            Id = 126,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support rententions in care through welcome back campaigns",
                            IsActive = false,
                            Name = "Support care rentention - welcome back campaigns"
                        },
                        new
                        {
                            Id = 127,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support retention in care through effective used of pharmacy collection data",
                            IsActive = false,
                            Name = "Support care retention - pharmacy collection data"
                        },
                        new
                        {
                            Id = 128,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support retention in care by supporting facilities in decanting strategies",
                            IsActive = false,
                            Name = "Support care retention - decanting strategies"
                        },
                        new
                        {
                            Id = 129,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support rentention in care by supporting facilities with scripting, planning  and improving adherence clubs",
                            IsActive = false,
                            Name = "Support care rentention - scripting, planning, etc"
                        },
                        new
                        {
                            Id = 130,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide appropriate number of clinicians to facilities to initiate Clients on ART",
                            IsActive = false,
                            Name = "Provide appropriate number of clinicians on ART"
                        },
                        new
                        {
                            Id = 131,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide cross reference between data sytems to track ART initiations",
                            IsActive = false,
                            Name = "Provide cross reference to track ART initiations"
                        },
                        new
                        {
                            Id = 132,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Build capacity of DoH/CCT staff by supporting NIMART mentoring",
                            IsActive = false,
                            Name = "Build capacity of staff with NIMART mentoring"
                        },
                        new
                        {
                            Id = 133,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support DoH/ CCT policy on same day initiations",
                            IsActive = false,
                            Name = "Support DoH/ CCT policy on same day initiations"
                        },
                        new
                        {
                            Id = 134,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support TLD transition ",
                            IsActive = false,
                            Name = "Support TLD transition "
                        },
                        new
                        {
                            Id = 135,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide capacity to sustain medication dispensing to support same day initiation / ART enrolment",
                            IsActive = false,
                            Name = "Provide capacity to sustain medication dispensing"
                        },
                        new
                        {
                            Id = 136,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Identify ART initiation backlogs per facility trough weekly data evaluation meetings for identification of gaps at facility level through DSD",
                            IsActive = false,
                            Name = "Identify ART initiation backlogs"
                        },
                        new
                        {
                            Id = 137,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide case managers to ensure effective linkage and retention in care.",
                            IsActive = false,
                            Name = "Provide case managers"
                        },
                        new
                        {
                            Id = 138,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Increase access to care by expanding pharmacy services into quick pick up points",
                            IsActive = false,
                            Name = "Increase access to care"
                        },
                        new
                        {
                            Id = 139,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support to people who are at risk of lost to follow up ",
                            IsActive = false,
                            Name = "Support people at risk of lost to follow up"
                        },
                        new
                        {
                            Id = 140,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support the DOH Welcome Back Campaign",
                            IsActive = false,
                            Name = "Support the DOH Welcome Back Campaign"
                        },
                        new
                        {
                            Id = 141,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Develop IT support for for tracking of ARV clients for reporting to funders",
                            IsActive = false,
                            Name = "Develop IT support for tracking of ARV clients"
                        },
                        new
                        {
                            Id = 142,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide  NIMART trained nurses ",
                            IsActive = false,
                            Name = "Provide  NIMART trained nurses "
                        },
                        new
                        {
                            Id = 143,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide  Advanced Clinical Care by Medical Officers",
                            IsActive = false,
                            Name = "Provide Advanced Clinical Care by Medical Officers"
                        },
                        new
                        {
                            Id = 144,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support facilities to reach HAST program",
                            IsActive = false,
                            Name = "Support facilities to reach HAST program"
                        },
                        new
                        {
                            Id = 145,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide NIMART mentoring support",
                            IsActive = false,
                            Name = "Provide NIMART mentoring support"
                        },
                        new
                        {
                            Id = 146,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Training on clinical guideline ",
                            IsActive = false,
                            Name = "Training on clinical guideline "
                        },
                        new
                        {
                            Id = 147,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support Facilities in sustained improvement of the HAST core program indicators ( ICT,SDI, TLD, TPT, Decanting) through regular update and review of Facility Improvement Plans",
                            IsActive = false,
                            Name = "Support with improvement of the HAST core programs"
                        },
                        new
                        {
                            Id = 148,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support Facilities with Weekly tracking and Recall of Waiting on ART to improve linkage to care and number of ART initiations.",
                            IsActive = false,
                            Name = "Support with tracking & Recall of Waiting on ART"
                        },
                        new
                        {
                            Id = 149,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Improve retention in care at supported Facilitied through daily and weekly tracking of missed appointments and uLTFU",
                            IsActive = false,
                            Name = "Improve retention in care at supported Facilities"
                        },
                        new
                        {
                            Id = 150,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Facilitate Weekly Data reviews as supported Siyenza Facilities to identify ART initiation and retention gaps.",
                            IsActive = false,
                            Name = "Facilitate Weekly Data reviews"
                        },
                        new
                        {
                            Id = 151,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Facilitate linkage to care",
                            IsActive = false,
                            Name = "Facilitate linkage to care"
                        },
                        new
                        {
                            Id = 152,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Offering targeted HIV testing",
                            IsActive = false,
                            Name = "Offering targeted HIV testing"
                        },
                        new
                        {
                            Id = 153,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide counsellors",
                            IsActive = false,
                            Name = "Provide counsellors"
                        },
                        new
                        {
                            Id = 154,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Targeted HIV testing at ANC, TB,PNC,FP,STI points",
                            IsActive = false,
                            Name = "Targeted HIV testing at ANC, TB,PNC,FP,STI points"
                        },
                        new
                        {
                            Id = 155,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Conduct HIV and TB screening as part of infacility health screening",
                            IsActive = false,
                            Name = "Conduct HIV and TB screening"
                        },
                        new
                        {
                            Id = 156,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Facilitate Index Case Finding of sexual partners and biological children for all HIV positive clients through facility and community",
                            IsActive = false,
                            Name = "Facilitate Index Case Finding of sexual partners"
                        },
                        new
                        {
                            Id = 157,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support the Provincial Department of Health's roll out of HIV Self Screening and Index Case Testing ",
                            IsActive = false,
                            Name = "Support DoH's roll out of HIV Self Screening"
                        },
                        new
                        {
                            Id = 158,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support RTCQI training to ALL counsellors and nurses",
                            IsActive = false,
                            Name = "Support RTCQI training to counsellors and nurses"
                        },
                        new
                        {
                            Id = 159,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Conduct 6 monthly internal SPI-RT assessments",
                            IsActive = false,
                            Name = "Conduct 6 monthly internal SPI-RT assessments"
                        },
                        new
                        {
                            Id = 160,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support weekly independent QC and 6 monthly proficiency testing",
                            IsActive = false,
                            Name = "Support weekly QC and 6 monthly testing"
                        },
                        new
                        {
                            Id = 161,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Digitizing and analysing of HTS capturing on current data systems",
                            IsActive = false,
                            Name = "Digitizing and analysing of HTS capturing"
                        },
                        new
                        {
                            Id = 162,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Identify with Province and City skills shortage, M&E gaps for reporting and capturing and assist with temporary workforce relief",
                            IsActive = false,
                            Name = "Identify with Province and City skills shortage"
                        },
                        new
                        {
                            Id = 163,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide and distribute HTS support equipment to enable Counsellors and HTS Testers in testing functions ",
                            IsActive = false,
                            Name = "Provide and distribute HTS support equipment"
                        },
                        new
                        {
                            Id = 164,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide HTS in ER, triage settings in identified District hospitals.",
                            IsActive = false,
                            Name = "Provide HTS in ER, triage settings"
                        },
                        new
                        {
                            Id = 165,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Provide track and tracing for HIV positive clients in District hospitals for in-patients.",
                            IsActive = false,
                            Name = "Provide track and tracing for HIV positive clients"
                        },
                        new
                        {
                            Id = 166,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Strenghthen ICT support through NIMART nurse involvement",
                            IsActive = false,
                            Name = "Strenghthen ICT support"
                        },
                        new
                        {
                            Id = 167,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Support Implementation and upscaling  of Run Charts as a Quality assurance and Quality improvement tool for HTS,HTS Pos and ICT",
                            IsActive = false,
                            Name = "Support Implementation and upscaling of Run Charts"
                        },
                        new
                        {
                            Id = 168,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Violence screening",
                            IsActive = false,
                            Name = "Violence screening"
                        },
                        new
                        {
                            Id = 169,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Men Workplace Testing HIV Testing ",
                            IsActive = false,
                            Name = "Men Workplace Testing HIV Testing "
                        },
                        new
                        {
                            Id = 170,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Finding Youth TVET Testing: In partnership with HEAIDS, Anova will continue testing at TVETs colleges in the Cape Metro. STI and TB screening will also be offered.",
                            IsActive = false,
                            Name = "Finding Youth TVET Testing"
                        },
                        new
                        {
                            Id = 171,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Targeting Male Dominated Community HIV  Testing",
                            IsActive = false,
                            Name = "Targeting Male Dominated Community HIV  Testing"
                        },
                        new
                        {
                            Id = 172,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Defaulter Tracking ICT ",
                            IsActive = false,
                            Name = "Defaulter Tracking ICT "
                        },
                        new
                        {
                            Id = 173,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Targeted Wellness Outreaches in Partnership with other community NPOs",
                            IsActive = false,
                            Name = "Targeted Wellness Outreaches"
                        },
                        new
                        {
                            Id = 174,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Following all pregnant women in high burden areas",
                            IsActive = false,
                            Name = "Following all pregnant women in high burden areas"
                        },
                        new
                        {
                            Id = 175,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "BCI - Behaviour Change Interventions",
                            IsActive = false,
                            Name = "BCI - Behaviour Change Interventions"
                        },
                        new
                        {
                            Id = 176,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Condom distribution",
                            IsActive = false,
                            Name = "Condom distribution"
                        },
                        new
                        {
                            Id = 177,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Needle and syringe distribution",
                            IsActive = false,
                            Name = "Needle and syringe distribution"
                        },
                        new
                        {
                            Id = 178,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Opioid Substitution Treatment (OST)",
                            IsActive = false,
                            Name = "Opioid Substitution Treatment (OST)"
                        },
                        new
                        {
                            Id = 179,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "STI screening",
                            IsActive = false,
                            Name = "STI screening"
                        },
                        new
                        {
                            Id = 180,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "TB screening",
                            IsActive = false,
                            Name = "TB screening"
                        },
                        new
                        {
                            Id = 181,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Family Planning",
                            IsActive = false,
                            Name = "Family Planning"
                        },
                        new
                        {
                            Id = 182,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "ART",
                            IsActive = false,
                            Name = "ART"
                        },
                        new
                        {
                            Id = 183,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Pregnancy testing",
                            IsActive = false,
                            Name = "Pregnancy testing"
                        },
                        new
                        {
                            Id = 184,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "non communable disease screening",
                            IsActive = false,
                            Name = "non communable disease screening"
                        },
                        new
                        {
                            Id = 185,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Referrals to DOH/COCT facilities",
                            IsActive = false,
                            Name = "Referrals to DOH/COCT facilities"
                        },
                        new
                        {
                            Id = 186,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "TB testing",
                            IsActive = false,
                            Name = "TB testing"
                        },
                        new
                        {
                            Id = 187,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Human Rights violations screening",
                            IsActive = false,
                            Name = "Human Rights violations screening"
                        },
                        new
                        {
                            Id = 188,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Overdose management / awareness",
                            IsActive = false,
                            Name = "Overdose management / awareness"
                        },
                        new
                        {
                            Id = 189,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Hepatitis C sceening, diagnosis and treatment ",
                            IsActive = false,
                            Name = "Hepatitis C sceening, diagnosis and treatment "
                        },
                        new
                        {
                            Id = 190,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Hepatitis B testing and vaccination",
                            IsActive = false,
                            Name = "Hepatitis B testing and vaccination"
                        },
                        new
                        {
                            Id = 191,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Sensitisation training",
                            IsActive = false,
                            Name = "Sensitisation training"
                        },
                        new
                        {
                            Id = 192,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Health: HIV Testing",
                            IsActive = false,
                            Name = "Health: HIV Testing"
                        },
                        new
                        {
                            Id = 193,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Health: HIV Self Screening",
                            IsActive = false,
                            Name = "Health: HIV Self Screening"
                        },
                        new
                        {
                            Id = 194,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Health: Male/Female Condom and Lube Distribution",
                            IsActive = false,
                            Name = "Health: Male/Female Condom and Lube Distribution"
                        },
                        new
                        {
                            Id = 195,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Health: STI screening and Investigation",
                            IsActive = false,
                            Name = "Health: STI screening and Investigation"
                        },
                        new
                        {
                            Id = 196,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Health: TB Screening and TB Sputum testing",
                            IsActive = false,
                            Name = "Health: TB Screening and TB Sputum testing"
                        },
                        new
                        {
                            Id = 197,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Health: Pregnancy Testing",
                            IsActive = false,
                            Name = "Health: Pregnancy Testing"
                        },
                        new
                        {
                            Id = 198,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Health: SRH",
                            IsActive = false,
                            Name = "Health: SRH"
                        },
                        new
                        {
                            Id = 199,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Health: ART",
                            IsActive = false,
                            Name = "Health: ART"
                        },
                        new
                        {
                            Id = 200,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Health: PrEP related lab costs",
                            IsActive = false,
                            Name = "Health: PrEP related lab costs"
                        },
                        new
                        {
                            Id = 201,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Health: Emergency Contraception",
                            IsActive = false,
                            Name = "Health: Emergency Contraception"
                        },
                        new
                        {
                            Id = 202,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Behaviour Change: Peer Education",
                            IsActive = false,
                            Name = "Behaviour Change: Peer Education"
                        },
                        new
                        {
                            Id = 203,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Behaviour Change:Comprehensive Sexuality Education",
                            IsActive = false,
                            Name = "Behaviour Change:Comprehensive Sexuality Education"
                        },
                        new
                        {
                            Id = 204,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Behaviour Change: Individual Psycho Social Support",
                            IsActive = false,
                            Name = "Behaviour Change: Individual Psycho Social Support"
                        },
                        new
                        {
                            Id = 205,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Behaviour Change: PrEP Demand Creation",
                            IsActive = false,
                            Name = "Behaviour Change: PrEP Demand Creation"
                        },
                        new
                        {
                            Id = 206,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Behaviour Change: Teen Parenting/Parenting",
                            IsActive = false,
                            Name = "Behaviour Change: Teen Parenting/Parenting"
                        },
                        new
                        {
                            Id = 207,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Behaviour Change: Teen & Caregiver Comunication",
                            IsActive = false,
                            Name = "Behaviour Change: Teen & Caregiver Comunication"
                        },
                        new
                        {
                            Id = 208,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Behaviour Change: SRH Knowledge and behaviour",
                            IsActive = false,
                            Name = "Behaviour Change: SRH Knowledge and behaviour"
                        },
                        new
                        {
                            Id = 209,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Behaviour Change: GBV Prevention",
                            IsActive = false,
                            Name = "Behaviour Change: GBV Prevention"
                        },
                        new
                        {
                            Id = 210,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Behaviour Change: Adherence Support (Mental Health Support)",
                            IsActive = false,
                            Name = "Behaviour Change: Adherence Support"
                        },
                        new
                        {
                            Id = 211,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Behaviour Change: Physical activity",
                            IsActive = false,
                            Name = "Behaviour Change: Physical activity"
                        },
                        new
                        {
                            Id = 212,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Structural: Support to Access Grants",
                            IsActive = false,
                            Name = "Structural: Support to Access Grants"
                        },
                        new
                        {
                            Id = 213,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Structural: Dignity Packs",
                            IsActive = false,
                            Name = "Structural: Dignity Packs"
                        },
                        new
                        {
                            Id = 214,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Structural: Academic Support and Career Guidance",
                            IsActive = false,
                            Name = "Structural: Academic Support and Career Guidance"
                        },
                        new
                        {
                            Id = 215,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Structural: Return to School Support",
                            IsActive = false,
                            Name = "Structural: Return to School Support"
                        },
                        new
                        {
                            Id = 216,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Structural: ECD Vouchers",
                            IsActive = false,
                            Name = "Structural: ECD Vouchers"
                        },
                        new
                        {
                            Id = 217,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Structural: GBV Awareness and Self-Defence",
                            IsActive = false,
                            Name = "Structural: GBV Awareness and Self-Defence"
                        },
                        new
                        {
                            Id = 218,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Structural: Economic Strengthening",
                            IsActive = false,
                            Name = "Structural: Economic Strengthening"
                        },
                        new
                        {
                            Id = 219,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Trauma containment",
                            IsActive = false,
                            Name = "Trauma containment"
                        },
                        new
                        {
                            Id = 220,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Risk assessment & referral; ",
                            IsActive = false,
                            Name = "Risk assessment & referral; "
                        },
                        new
                        {
                            Id = 221,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Follow-up psychosocial support",
                            IsActive = false,
                            Name = "Follow-up psychosocial support"
                        },
                        new
                        {
                            Id = 222,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "PEP adherence suppor",
                            IsActive = false,
                            Name = "PEP adherence suppor"
                        },
                        new
                        {
                            Id = 223,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Role out of HIV SS",
                            IsActive = false,
                            Name = "Role out of HIV SS"
                        },
                        new
                        {
                            Id = 224,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Referral for other social support services",
                            IsActive = false,
                            Name = "Referral for other social support services"
                        },
                        new
                        {
                            Id = 225,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Court preparation & support",
                            IsActive = false,
                            Name = "Court preparation & support"
                        },
                        new
                        {
                            Id = 226,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "GBV awareness & community outreach",
                            IsActive = false,
                            Name = "GBV awareness & community outreach"
                        },
                        new
                        {
                            Id = 227,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "PrEP Demand Creation and referrals to PrEP Clinics",
                            IsActive = false,
                            Name = "PrEP Demand Creation and referrals to PrEP Clinics"
                        },
                        new
                        {
                            Id = 228,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Delivery of Chronic Medication",
                            IsActive = false,
                            Name = "Delivery of Chronic Medication"
                        },
                        new
                        {
                            Id = 229,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "COVID response",
                            IsActive = false,
                            Name = "COVID response"
                        },
                        new
                        {
                            Id = 230,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "COVID testing",
                            IsActive = false,
                            Name = "COVID testing"
                        },
                        new
                        {
                            Id = 231,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "COVID vaccination",
                            IsActive = false,
                            Name = "COVID vaccination"
                        },
                        new
                        {
                            Id = 232,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "COVID vaccine demand creation",
                            IsActive = false,
                            Name = "COVID vaccine demand creation"
                        },
                        new
                        {
                            Id = 233,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "COVID tracking and tracing",
                            IsActive = false,
                            Name = "COVID tracking and tracing"
                        },
                        new
                        {
                            Id = 234,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Establish peer groups for Mental Health",
                            IsActive = false,
                            Name = "Establish peer groups for Mental Health"
                        },
                        new
                        {
                            Id = 235,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Patient transport support",
                            IsActive = false,
                            Name = "Patient transport support"
                        },
                        new
                        {
                            Id = 236,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            Description = "Telehealth support",
                            IsActive = false,
                            Name = "Telehealth support"
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Lookup.FacilityList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("FacilityClassId")
                        .HasColumnType("int");

                    b.Property<int>("FacilitySubDistrictId")
                        .HasColumnType("int");

                    b.Property<int>("FacilityTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilityClassId");

                    b.HasIndex("FacilitySubDistrictId");

                    b.HasIndex("FacilityTypeId");

                    b.ToTable("FacilityList", "lookup");
                });

            modelBuilder.Entity("NPOMS.Domain.Lookup.ResourceList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ResourceTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ResourceList", "lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Project Manager",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Project Coordinator",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Professional Nurse",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Staff Nurse",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Register Nurse",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Nursing Assistant",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Medical Doctor",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Research",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Facilitator",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Councillor",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Coordinator",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Social Mobilizer",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Programme Manager",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Support Officer",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 15,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Field Worker",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 16,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "HR Manager",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 17,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Finance Manager",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 18,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Youth Care Worker",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 19,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mentor",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 20,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Mentor Supervisor",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 21,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Site Administrator",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 22,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Senior Mentor",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 23,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Community Health Worker",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 24,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Pharmacy Manager",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 25,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = false,
                            Name = "Area Manager",
                            ResourceTypeId = 1
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.ActivityFacilityList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("FacilityListId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("FacilityListId");

                    b.ToTable("Activities_FacilityLists", "mapping");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.ActivityRecipient", b =>
                {
                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<int>("RecipientTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Entity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipientName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActivityId", "EntityId", "RecipientTypeId");

                    b.ToTable("Activities_Recipients", "mapping");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.ActivitySubProgramme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("SubProgrammeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("SubProgrammeId");

                    b.ToTable("Activities_SubProgrammes", "mapping");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.FundAppSDADetail_Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FundAppSDADetailId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FundAppSDADetailId");

                    b.HasIndex("RegionId");

                    b.ToTable("FundAppSDADetail_Regions", "mapping");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.FundAppServiceDeliveryArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FundAppSDADetailId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ServiceDeliveryAreaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FundAppSDADetailId");

                    b.HasIndex("ServiceDeliveryAreaId");

                    b.ToTable("ServiceDeliveryAreas", "mapping");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.NpoProfileFacilityList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FacilityListId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("NpoProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilityListId");

                    b.ToTable("NpoProfiles_FacilityLists", "mapping");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.ObjectiveProgramme", b =>
                {
                    b.Property<int>("ObjectiveId")
                        .HasColumnType("int");

                    b.Property<int>("ProgrammeId")
                        .HasColumnType("int");

                    b.Property<int>("SubProgrammeId")
                        .HasColumnType("int");

                    b.HasKey("ObjectiveId", "ProgrammeId", "SubProgrammeId");

                    b.HasIndex("ProgrammeId");

                    b.HasIndex("SubProgrammeId");

                    b.ToTable("Objectives_Programmes", "mapping");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.ProjectImplementationPlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ImplementationId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImplementationId");

                    b.HasIndex("PlaceId");

                    b.ToTable("Project_Implementation_Places", "mapping");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.ProjectImplementationSubPlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ImplementationId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("SubPlaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImplementationId");

                    b.HasIndex("SubPlaceId");

                    b.ToTable("Project_Implementation_SubPlaces", "mapping");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.RolePermission", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("Roles_Permissions", "mapping");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            PermissionId = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 2
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 3
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 4
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 5
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 6
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 7
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 8
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 9
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 10
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 11
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 12
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 13
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 14
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 15
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 16
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 17
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 18
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 19
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 20
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 21
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 22
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 23
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 24
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 25
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 26
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 27
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 28
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 29
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 30
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 31
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 32
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 33
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 34
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 35
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 36
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 37
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 38
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 39
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 40
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 41
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 42
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 43
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 44
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 45
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 46
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 47
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 48
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 49
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 50
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 51
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 52
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 53
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 54
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 55
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 56
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 57
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 58
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 59
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 60
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 61
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 62
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 63
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 64
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 65
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 66
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 67
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 68
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 69
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 70
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 71
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 72
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 73
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 74
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 75
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 76
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 77
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 78
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 79
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 80
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 81
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 82
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 83
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 84
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 85
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 86
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 87
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 88
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 89
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 90
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 91
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 92
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 111
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.UserDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UserId");

                    b.ToTable("Users_Departments", "mapping");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 1,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.UserNpo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("NpoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccessStatusId");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("NpoId");

                    b.HasIndex("UpdatedUserId");

                    b.HasIndex("UserId");

                    b.ToTable("Users_Npos", "mapping");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("Users_Roles", "mapping");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = false,
                            RoleId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsActive = false,
                            RoleId = 1,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("NPOMS.Domain.Core.DocumentStore", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.DocumentType", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeId");

                    b.Navigation("DocumentType");
                });

            modelBuilder.Entity("NPOMS.Domain.Core.EmailQueue", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.EmailTemplate", "EmailTemplate")
                        .WithMany()
                        .HasForeignKey("EmailTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailTemplate");
                });

            modelBuilder.Entity("NPOMS.Domain.Core.EmailTemplate", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.EmailAccount", "EmailAccount")
                        .WithMany()
                        .HasForeignKey("EmailAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailAccount");
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.FacilitySubDistrict", b =>
                {
                    b.HasOne("NPOMS.Domain.Dropdown.FacilityDistrict", "FacilityDistrict")
                        .WithMany()
                        .HasForeignKey("FacilityDistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FacilityDistrict");
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.LocalMunicipality", b =>
                {
                    b.HasOne("NPOMS.Domain.Dropdown.DistrictCouncil", "DistrictCouncil")
                        .WithMany()
                        .HasForeignKey("DistrictCouncilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DistrictCouncil");
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.Place", b =>
                {
                    b.HasOne("NPOMS.Domain.Dropdown.ServiceDeliveryArea", "ServiceDeliveryArea")
                        .WithMany()
                        .HasForeignKey("ServiceDeliveryAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceDeliveryArea");
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.PropertySubType", b =>
                {
                    b.HasOne("NPOMS.Domain.Dropdown.PropertyType", "PropertyType")
                        .WithMany("PropertySubTypes")
                        .HasForeignKey("PropertyTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PropertyType");
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.Region", b =>
                {
                    b.HasOne("NPOMS.Domain.Dropdown.LocalMunicipality", "LocalMunicipality")
                        .WithMany()
                        .HasForeignKey("LocalMunicipalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LocalMunicipality");
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.ServiceDeliveryArea", b =>
                {
                    b.HasOne("NPOMS.Domain.Dropdown.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.SubPlace", b =>
                {
                    b.HasOne("NPOMS.Domain.Dropdown.Place", "Place")
                        .WithMany("SubPlaces")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Activity", b =>
                {
                    b.HasOne("NPOMS.Domain.Lookup.ActivityList", "ActivityList")
                        .WithMany()
                        .HasForeignKey("ActivityListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.ActivityType", "ActivityType")
                        .WithMany()
                        .HasForeignKey("ActivityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Entities.Objective", "Objective")
                        .WithMany()
                        .HasForeignKey("ObjectiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivityList");

                    b.Navigation("ActivityType");

                    b.Navigation("Objective");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.AddressInformation", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.NpoProfile", null)
                        .WithOne("AddressInformation")
                        .HasForeignKey("NPOMS.Domain.Entities.AddressInformation", "NpoProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Application", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.ApplicationPeriod", "ApplicationPeriod")
                        .WithMany()
                        .HasForeignKey("ApplicationPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Entities.Npo", "Npo")
                        .WithMany()
                        .HasForeignKey("NpoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Entities.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationPeriod");

                    b.Navigation("Npo");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ApplicationApproval", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedUser");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ApplicationAudit", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Entities.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedUser");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ApplicationComment", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedUser");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ApplicationDetail", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.FundAppSDADetail", "FundAppSDADetail")
                        .WithMany()
                        .HasForeignKey("FundAppSDADetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FundAppSDADetail");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ApplicationPeriod", b =>
                {
                    b.HasOne("NPOMS.Domain.Dropdown.ApplicationType", "ApplicationType")
                        .WithMany()
                        .HasForeignKey("ApplicationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Core.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Core.FinancialYear", "FinancialYear")
                        .WithMany()
                        .HasForeignKey("FinancialYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.Programme", "Programme")
                        .WithMany()
                        .HasForeignKey("ProgrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.SubProgramme", "SubProgramme")
                        .WithMany()
                        .HasForeignKey("SubProgrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationType");

                    b.Navigation("Department");

                    b.Navigation("FinancialYear");

                    b.Navigation("Programme");

                    b.Navigation("SubProgramme");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ApplicationReviewerSatisfaction", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedUser");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ContactInformation", b =>
                {
                    b.HasOne("NPOMS.Domain.Dropdown.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("NPOMS.Domain.Dropdown.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.HasOne("NPOMS.Domain.Entities.Npo", null)
                        .WithMany("ContactInformation")
                        .HasForeignKey("NpoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceId");

                    b.HasOne("NPOMS.Domain.Dropdown.Title", "Title")
                        .WithMany()
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");

                    b.Navigation("Language");

                    b.Navigation("Position");

                    b.Navigation("Race");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.FinancialMatters", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.FundingApplicationDetail", "FundingApplicationDetail")
                        .WithMany("FinancialMatters")
                        .HasForeignKey("FundingApplicationDetailId");

                    b.Navigation("FundingApplicationDetail");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.FinancialMattersExpenditure", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.FundingApplicationDetail", "FundingApplicationDetail")
                        .WithMany()
                        .HasForeignKey("FundingApplicationDetailId");

                    b.Navigation("FundingApplicationDetail");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.FinancialMattersIncome", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.FundingApplicationDetail", "FundingApplicationDetail")
                        .WithMany()
                        .HasForeignKey("FundingApplicationDetailId");

                    b.Navigation("FundingApplicationDetail");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.FinancialMattersOthers", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.FundingApplicationDetail", "FundingApplicationDetail")
                        .WithMany()
                        .HasForeignKey("FundingApplicationDetailId");

                    b.Navigation("FundingApplicationDetail");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.FundAppSDADetail", b =>
                {
                    b.HasOne("NPOMS.Domain.Dropdown.DistrictCouncil", "DistrictCouncil")
                        .WithMany()
                        .HasForeignKey("DistrictCouncilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.LocalMunicipality", "LocalMunicipality")
                        .WithMany()
                        .HasForeignKey("LocalMunicipalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");

                    b.Navigation("DistrictCouncil");

                    b.Navigation("LocalMunicipality");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.FundingApplicationDetail", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.ApplicationDetail", "ApplicationDetails")
                        .WithMany()
                        .HasForeignKey("ApplicationDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Entities.ApplicationPeriod", "ApplicationPeriod")
                        .WithMany()
                        .HasForeignKey("ApplicationPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Entities.MonitoringEvaluation", "MonitoringEvaluation")
                        .WithMany()
                        .HasForeignKey("MonitoringEvaluationId");

                    b.HasOne("NPOMS.Domain.Entities.ProjectInformation", "ProjectInformation")
                        .WithMany()
                        .HasForeignKey("ProjectInformationId");

                    b.Navigation("ApplicationDetails");

                    b.Navigation("ApplicationPeriod");

                    b.Navigation("MonitoringEvaluation");

                    b.Navigation("ProjectInformation");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.MyContentLink", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedUser");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Npo", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.AccessStatus", "ApprovalStatus")
                        .WithMany()
                        .HasForeignKey("ApprovalStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Core.User", "ApprovalUser")
                        .WithMany()
                        .HasForeignKey("ApprovalUserId");

                    b.HasOne("NPOMS.Domain.Core.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.OrganisationType", "OrganisationType")
                        .WithMany()
                        .HasForeignKey("OrganisationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.RegistrationStatus", "RegistrationStatus")
                        .WithMany()
                        .HasForeignKey("RegistrationStatusId");

                    b.Navigation("ApprovalStatus");

                    b.Navigation("ApprovalUser");

                    b.Navigation("CreatedUser");

                    b.Navigation("OrganisationType");

                    b.Navigation("RegistrationStatus");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.NpoProfile", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.Npo", "Npo")
                        .WithMany()
                        .HasForeignKey("NpoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Npo");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Objective", b =>
                {
                    b.HasOne("NPOMS.Domain.Dropdown.RecipientType", "RecipientType")
                        .WithMany()
                        .HasForeignKey("RecipientTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecipientType");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.PaymentSchedule", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.CompliantCycle", "CompliantCycle")
                        .WithMany()
                        .HasForeignKey("CompliantCycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompliantCycle");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ProjectImplementation", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.FundingApplicationDetail", "FundingApplicationDetail")
                        .WithMany("Implementations")
                        .HasForeignKey("FundingApplicationDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FundingApplicationDetail");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Resource", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.AllocationType", "AllocationType")
                        .WithMany()
                        .HasForeignKey("AllocationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.ProvisionType", "ProvisionType")
                        .WithMany()
                        .HasForeignKey("ProvisionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Lookup.ResourceList", "ResourceList")
                        .WithMany()
                        .HasForeignKey("ResourceListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.ResourceType", "ResourceType")
                        .WithMany()
                        .HasForeignKey("ResourceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.ServiceType", "ServiceType")
                        .WithMany()
                        .HasForeignKey("ServiceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("AllocationType");

                    b.Navigation("ProvisionType");

                    b.Navigation("ResourceList");

                    b.Navigation("ResourceType");

                    b.Navigation("ServiceType");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.SubRecipient", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.Objective", "Objective")
                        .WithMany("SubRecipients")
                        .HasForeignKey("ObjectiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Objective");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.SubSubRecipient", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.SubRecipient", "SubRecipient")
                        .WithMany("SubSubRecipients")
                        .HasForeignKey("SubRecipientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubRecipient");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.SustainabilityPlan", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("NPOMS.Domain.Evaluation.CapturedResponse", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedUser");
                });

            modelBuilder.Entity("NPOMS.Domain.Evaluation.Question", b =>
                {
                    b.HasOne("NPOMS.Domain.Evaluation.QuestionSection", "QuestionSection")
                        .WithMany()
                        .HasForeignKey("QuestionSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Evaluation.ResponseType", "ResponseType")
                        .WithMany()
                        .HasForeignKey("ResponseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuestionSection");

                    b.Navigation("ResponseType");
                });

            modelBuilder.Entity("NPOMS.Domain.Evaluation.QuestionProperty", b =>
                {
                    b.HasOne("NPOMS.Domain.Evaluation.Question", null)
                        .WithOne("QuestionProperty")
                        .HasForeignKey("NPOMS.Domain.Evaluation.QuestionProperty", "QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NPOMS.Domain.Evaluation.QuestionSection", b =>
                {
                    b.HasOne("NPOMS.Domain.Evaluation.QuestionCategory", "QuestionCategory")
                        .WithMany()
                        .HasForeignKey("QuestionCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuestionCategory");
                });

            modelBuilder.Entity("NPOMS.Domain.Evaluation.Response", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Evaluation.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Evaluation.ResponseOption", "ResponseOption")
                        .WithMany()
                        .HasForeignKey("ResponseOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedUser");

                    b.Navigation("Question");

                    b.Navigation("ResponseOption");
                });

            modelBuilder.Entity("NPOMS.Domain.Evaluation.ResponseHistory", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Evaluation.ResponseOption", "ResponseOption")
                        .WithMany()
                        .HasForeignKey("ResponseOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedUser");

                    b.Navigation("ResponseOption");
                });

            modelBuilder.Entity("NPOMS.Domain.Indicator.WorkplanActual", b =>
                {
                    b.HasOne("NPOMS.Domain.Dropdown.FrequencyPeriod", "FrequencyPeriod")
                        .WithMany()
                        .HasForeignKey("FrequencyPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FrequencyPeriod");
                });

            modelBuilder.Entity("NPOMS.Domain.Indicator.WorkplanActualAudit", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedUser");
                });

            modelBuilder.Entity("NPOMS.Domain.Indicator.WorkplanComment", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedUser");
                });

            modelBuilder.Entity("NPOMS.Domain.Indicator.WorkplanTarget", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.FinancialYear", "FinancialYear")
                        .WithMany()
                        .HasForeignKey("FinancialYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.Frequency", "Frequency")
                        .WithMany()
                        .HasForeignKey("FrequencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinancialYear");

                    b.Navigation("Frequency");
                });

            modelBuilder.Entity("NPOMS.Domain.Lookup.FacilityList", b =>
                {
                    b.HasOne("NPOMS.Domain.Dropdown.FacilityClass", "FacilityClass")
                        .WithMany()
                        .HasForeignKey("FacilityClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.FacilitySubDistrict", "FacilitySubDistrict")
                        .WithMany()
                        .HasForeignKey("FacilitySubDistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.FacilityType", "FacilityType")
                        .WithMany()
                        .HasForeignKey("FacilityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FacilityClass");

                    b.Navigation("FacilitySubDistrict");

                    b.Navigation("FacilityType");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.ActivityFacilityList", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.Activity", "Activity")
                        .WithMany("ActivityFacilityLists")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Lookup.FacilityList", "FacilityList")
                        .WithMany()
                        .HasForeignKey("FacilityListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("FacilityList");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.ActivityRecipient", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.Activity", "Activity")
                        .WithMany("ActivityRecipients")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.ActivitySubProgramme", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.Activity", "Activity")
                        .WithMany("ActivitySubProgrammes")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.SubProgramme", "SubProgramme")
                        .WithMany()
                        .HasForeignKey("SubProgrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("SubProgramme");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.FundAppSDADetail_Region", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.FundAppSDADetail", null)
                        .WithMany("Regions")
                        .HasForeignKey("FundAppSDADetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.FundAppServiceDeliveryArea", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.FundAppSDADetail", "FundAppSDADetail")
                        .WithMany("ServiceDeliveryAreas")
                        .HasForeignKey("FundAppSDADetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.ServiceDeliveryArea", "ServiceDeliveryArea")
                        .WithMany()
                        .HasForeignKey("ServiceDeliveryAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FundAppSDADetail");

                    b.Navigation("ServiceDeliveryArea");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.NpoProfileFacilityList", b =>
                {
                    b.HasOne("NPOMS.Domain.Lookup.FacilityList", "FacilityList")
                        .WithMany()
                        .HasForeignKey("FacilityListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FacilityList");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.ObjectiveProgramme", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.Objective", "Objective")
                        .WithMany("ObjectiveProgrammes")
                        .HasForeignKey("ObjectiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.Programme", null)
                        .WithMany("SubProgrammes")
                        .HasForeignKey("ProgrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.SubProgramme", "SubProgramme")
                        .WithMany("Programmes")
                        .HasForeignKey("SubProgrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Objective");

                    b.Navigation("SubProgramme");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.ProjectImplementationPlace", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.ProjectImplementation", "Implementation")
                        .WithMany("ImplementationPlaces")
                        .HasForeignKey("ImplementationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Implementation");

                    b.Navigation("Place");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.ProjectImplementationSubPlace", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.ProjectImplementation", "Implementation")
                        .WithMany("ImplementationSubPlaces")
                        .HasForeignKey("ImplementationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Dropdown.SubPlace", "SubPlace")
                        .WithMany()
                        .HasForeignKey("SubPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Implementation");

                    b.Navigation("SubPlace");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.RolePermission", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.Permission", "Permission")
                        .WithMany("Roles")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Core.Role", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.UserDepartment", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Core.User", null)
                        .WithMany("Departments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.UserNpo", b =>
                {
                    b.HasOne("NPOMS.Domain.Entities.AccessStatus", "AccessStatus")
                        .WithMany()
                        .HasForeignKey("AccessStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Core.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Entities.Npo", "Npo")
                        .WithMany()
                        .HasForeignKey("NpoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Core.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserId");

                    b.HasOne("NPOMS.Domain.Core.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccessStatus");

                    b.Navigation("CreatedUser");

                    b.Navigation("Npo");

                    b.Navigation("UpdatedUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NPOMS.Domain.Mapping.UserRole", b =>
                {
                    b.HasOne("NPOMS.Domain.Core.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPOMS.Domain.Core.User", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("NPOMS.Domain.Core.Permission", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("NPOMS.Domain.Core.Role", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("NPOMS.Domain.Core.User", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.Place", b =>
                {
                    b.Navigation("SubPlaces");
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.Programme", b =>
                {
                    b.Navigation("SubProgrammes");
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.PropertyType", b =>
                {
                    b.Navigation("PropertySubTypes");
                });

            modelBuilder.Entity("NPOMS.Domain.Dropdown.SubProgramme", b =>
                {
                    b.Navigation("Programmes");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Activity", b =>
                {
                    b.Navigation("ActivityFacilityLists");

                    b.Navigation("ActivityRecipients");

                    b.Navigation("ActivitySubProgrammes");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.FundAppSDADetail", b =>
                {
                    b.Navigation("Regions");

                    b.Navigation("ServiceDeliveryAreas");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.FundingApplicationDetail", b =>
                {
                    b.Navigation("FinancialMatters");

                    b.Navigation("Implementations");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Npo", b =>
                {
                    b.Navigation("ContactInformation");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.NpoProfile", b =>
                {
                    b.Navigation("AddressInformation");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.Objective", b =>
                {
                    b.Navigation("ObjectiveProgrammes");

                    b.Navigation("SubRecipients");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.ProjectImplementation", b =>
                {
                    b.Navigation("ImplementationPlaces");

                    b.Navigation("ImplementationSubPlaces");
                });

            modelBuilder.Entity("NPOMS.Domain.Entities.SubRecipient", b =>
                {
                    b.Navigation("SubSubRecipients");
                });

            modelBuilder.Entity("NPOMS.Domain.Evaluation.Question", b =>
                {
                    b.Navigation("QuestionProperty");
                });
#pragma warning restore 612, 618
        }
    }
}
